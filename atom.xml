<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>爱爬虫与大数据 | 张凯恒的个人博客</title>
  <icon>https://www.gravatar.com/avatar/2e41654fe4ea52b82f9e4f5f11453362</icon>
  
  <link href="https://zhangkh.top/atom.xml" rel="self"/>
  
  <link href="https://zhangkh.top/"/>
  <updated>2021-12-07T09:05:29.919Z</updated>
  <id>https://zhangkh.top/</id>
  
  <author>
    <name>Kit</name>
    <email>2514154656@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第10章-数据的在线分析</title>
    <link href="https://zhangkh.top/f49b880f.html"/>
    <id>https://zhangkh.top/f49b880f.html</id>
    <published>2021-12-07T08:20:11.000Z</published>
    <updated>2021-12-07T09:05:29.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第10章-数据在线分析及可视化"><a href="#第10章-数据在线分析及可视化" class="headerlink" title="第10章 数据在线分析及可视化"></a>第10章 数据在线分析及可视化</h1><h2 id="10-1-Tushare数据的可视化分析"><a href="#10-1-Tushare数据的可视化分析" class="headerlink" title="10.1 Tushare数据的可视化分析"></a>10.1 Tushare数据的可视化分析</h2><h3 id="10-1-1-股市基本数据的获取与分析"><a href="#10-1-1-股市基本数据的获取与分析" class="headerlink" title="10.1.1 股市基本数据的获取与分析"></a>10.1.1 股市基本数据的获取与分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!pip install tushare --upgrade</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#import tushare as ts    #调用 tushare 包</span></span><br></pre></td></tr></table></figure><p>10.1.1.1 上市公司的基本信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#s_b=ts.get_stock_basics()</span></span><br><span class="line"><span class="comment">#s_b=ts.get_stock_basics(); #在线获取股票信息，每次读取数据可能不一样</span></span><br><span class="line"><span class="comment">#s_b.info(); #sb</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd        <span class="comment">#读取已保存的本地股票信息</span></span><br><span class="line">s_b=pd.read_excel(<span class="string">&#x27;./data/tushare.xlsx&#x27;</span>,<span class="string">&#x27;stock_basics&#x27;</span>,index_col=<span class="number">0</span>); </span><br><span class="line">s_b.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;Int64Index: 3951 entries, 688586 to 688519Data columns (total 22 columns): #   Column            Non-Null Count  Dtype  ---  ------            --------------  -----   0   name              3951 non-null   object  1   industry          3947 non-null   object  2   area              3947 non-null   object  3   pe                3951 non-null   float64 4   outstanding       3951 non-null   float64 5   totals            3951 non-null   float64 6   totalAssets       3951 non-null   float64 7   liquidAssets      3951 non-null   float64 8   fixedAssets       3951 non-null   float64 9   reserved          3951 non-null   float64 10  reservedPerShare  3951 non-null   float64 11  esp               3951 non-null   float64 12  bvps              3951 non-null   float64 13  pb                3951 non-null   float64 14  timeToMarket      3951 non-null   int64   15  undp              3951 non-null   float64 16  perundp           3951 non-null   float64 17  rev               3951 non-null   float64 18  profit            3951 non-null   float64 19  gpr               3951 non-null   float64 20  npr               3951 non-null   float64 21  holders           3951 non-null   int64  dtypes: float64(17), int64(2), object(3)memory usage: 709.9+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s_b<span class="comment">#.iloc[:6,:9]  #显示前6行7列数据</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>name</th>      <th>industry</th>      <th>area</th>      <th>pe</th>      <th>outstanding</th>      <th>totals</th>      <th>totalAssets</th>      <th>liquidAssets</th>      <th>fixedAssets</th>      <th>reserved</th>      <th>...</th>      <th>bvps</th>      <th>pb</th>      <th>timeToMarket</th>      <th>undp</th>      <th>perundp</th>      <th>rev</th>      <th>profit</th>      <th>gpr</th>      <th>npr</th>      <th>holders</th>    </tr>    <tr>      <th>code</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>688586</th>      <td>N江航</td>      <td>航空</td>      <td>安徽</td>      <td>77.57</td>      <td>0.88</td>      <td>4.04</td>      <td>18.43</td>      <td>11.58</td>      <td>5.23</td>      <td>3.91</td>      <td>...</td>      <td>4.59</td>      <td>8.80</td>      <td>20200731</td>      <td>1.83</td>      <td>0.45</td>      <td>0.00</td>      <td>0.00</td>      <td>46.08</td>      <td>29.69</td>      <td>59169</td>    </tr>    <tr>      <th>688311</th>      <td>N盟升</td>      <td>元器件</td>      <td>四川</td>      <td>238.24</td>      <td>0.26</td>      <td>1.15</td>      <td>8.70</td>      <td>5.51</td>      <td>0.56</td>      <td>3.20</td>      <td>...</td>      <td>14.02</td>      <td>9.75</td>      <td>20200731</td>      <td>1.39</td>      <td>1.21</td>      <td>0.00</td>      <td>0.00</td>      <td>72.47</td>      <td>27.74</td>      <td>26472</td>    </tr>    <tr>      <th>605222</th>      <td>N起帆</td>      <td>电气设备</td>      <td>上海</td>      <td>35.53</td>      <td>0.50</td>      <td>4.01</td>      <td>47.26</td>      <td>39.48</td>      <td>5.80</td>      <td>2.81</td>      <td>...</td>      <td>6.38</td>      <td>4.16</td>      <td>20200731</td>      <td>9.74</td>      <td>2.43</td>      <td>0.00</td>      <td>0.00</td>      <td>10.08</td>      <td>4.23</td>      <td>52755</td>    </tr>    <tr>      <th>601456</th>      <td>N国联</td>      <td>证券</td>      <td>江苏</td>      <td>15.87</td>      <td>4.76</td>      <td>23.78</td>      <td>374.70</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>...</td>      <td>4.30</td>      <td>1.42</td>      <td>20200731</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>46.32</td>      <td>416247</td>    </tr>    <tr>      <th>2991</th>      <td>N甘源</td>      <td>食品</td>      <td>江西</td>      <td>35.54</td>      <td>0.23</td>      <td>0.93</td>      <td>8.18</td>      <td>3.82</td>      <td>2.75</td>      <td>1.45</td>      <td>...</td>      <td>14.78</td>      <td>3.78</td>      <td>20200731</td>      <td>2.84</td>      <td>3.05</td>      <td>0.00</td>      <td>0.00</td>      <td>39.32</td>      <td>15.04</td>      <td>49829</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>688335</th>      <td>复洁环保</td>      <td>环境保护</td>      <td>上海</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>4.05</td>      <td>3.71</td>      <td>0.10</td>      <td>0.83</td>      <td>...</td>      <td>0.00</td>      <td>0.00</td>      <td>0</td>      <td>1.04</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>34.42</td>      <td>6.97</td>      <td>0</td>    </tr>    <tr>      <th>688338</th>      <td>赛科希德</td>      <td>生物制药</td>      <td>北京</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>4.27</td>      <td>3.82</td>      <td>0.39</td>      <td>1.32</td>      <td>...</td>      <td>0.00</td>      <td>0.00</td>      <td>0</td>      <td>1.62</td>      <td>0.00</td>      <td>14.73</td>      <td>25.26</td>      <td>59.41</td>      <td>30.95</td>      <td>0</td>    </tr>    <tr>      <th>688339</th>      <td>亿华通</td>      <td>电气设备</td>      <td>北京</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>16.83</td>      <td>11.81</td>      <td>1.81</td>      <td>8.85</td>      <td>...</td>      <td>0.00</td>      <td>0.00</td>      <td>0</td>      <td>1.09</td>      <td>0.00</td>      <td>50.25</td>      <td>176.50</td>      <td>45.12</td>      <td>11.55</td>      <td>0</td>    </tr>    <tr>      <th>688379</th>      <td>华光新材</td>      <td>小金属</td>      <td>浙江</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>7.29</td>      <td>5.24</td>      <td>1.52</td>      <td>1.08</td>      <td>...</td>      <td>0.00</td>      <td>0.00</td>      <td>0</td>      <td>3.07</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>15.68</td>      <td>5.17</td>      <td>0</td>    </tr>    <tr>      <th>688519</th>      <td>南亚新材</td>      <td>元器件</td>      <td>上海</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>19.09</td>      <td>13.46</td>      <td>4.63</td>      <td>2.00</td>      <td>...</td>      <td>0.00</td>      <td>0.00</td>      <td>0</td>      <td>2.96</td>      <td>0.00</td>      <td>0.00</td>      <td>0.00</td>      <td>15.99</td>      <td>7.28</td>      <td>0</td>    </tr>  </tbody></table><p>3951 rows × 22 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#s_b.to_csv(&#x27;stock_basics.csv&#x27;)                   #保存数据到csv表格中</span></span><br><span class="line"><span class="comment">#s_b=pd.read_csv(&#x27;stock_basics.csv&#x27;,index_col=0) #从csv文档中读取数据</span></span><br></pre></td></tr></table></figure><p>10.1.1.2 股市基本数据的分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s_b_c=s_b.industry.value_counts(); s_b_c</span><br></pre></td></tr></table></figure><pre><code>软件服务    215元器件     196电气设备    186化工原料    175专用机械    151       ... 铁路        5林业        4机场        4商品城       3电器连锁      2Name: industry, Length: 110, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pandas <span class="keyword">import</span> DataFrame <span class="keyword">as</span> DF  <span class="comment">#设置结果以数据框形式输出</span></span><br><span class="line">DF(s_b_c)   <span class="comment">#pd.DataFrame(s_b_c)  </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>industry</th>    </tr>  </thead>  <tbody>    <tr>      <th>软件服务</th>      <td>215</td>    </tr>    <tr>      <th>元器件</th>      <td>196</td>    </tr>    <tr>      <th>电气设备</th>      <td>186</td>    </tr>    <tr>      <th>化工原料</th>      <td>175</td>    </tr>    <tr>      <th>专用机械</th>      <td>151</td>    </tr>    <tr>      <th>...</th>      <td>...</td>    </tr>    <tr>      <th>铁路</th>      <td>5</td>    </tr>    <tr>      <th>林业</th>      <td>4</td>    </tr>    <tr>      <th>机场</th>      <td>4</td>    </tr>    <tr>      <th>商品城</th>      <td>3</td>    </tr>    <tr>      <th>电器连锁</th>      <td>2</td>    </tr>  </tbody></table><p>110 rows × 1 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%config InlineBackend.figure_format=<span class="string">&#x27;retina&#x27;</span> <span class="comment">#提高图形显示的清晰度</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt            </span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>];  <span class="comment">#中文字为黑体</span></span><br><span class="line">s_b_c[:<span class="number">10</span>].plot(kind=<span class="string">&#x27;barh&#x27;</span>);                <span class="comment">#前10个行业水平条图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071621461.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按行业(industry)计算平均收益率(esp)并排序</span></span><br><span class="line">i_e=s_b.groupby([<span class="string">&#x27;industry&#x27;</span>])[<span class="string">&#x27;esp&#x27;</span>].mean().sort_values();</span><br><span class="line">DF(i_e)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>esp</th>    </tr>    <tr>      <th>industry</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>空运</th>      <td>-0.243875</td>    </tr>    <tr>      <th>旅游服务</th>      <td>-0.129538</td>    </tr>    <tr>      <th>公路</th>      <td>-0.111286</td>    </tr>    <tr>      <th>旅游景点</th>      <td>-0.101167</td>    </tr>    <tr>      <th>酒店餐饮</th>      <td>-0.090100</td>    </tr>    <tr>      <th>...</th>      <td>...</td>    </tr>    <tr>      <th>饲料</th>      <td>0.249765</td>    </tr>    <tr>      <th>银行</th>      <td>0.324250</td>    </tr>    <tr>      <th>船舶</th>      <td>0.331857</td>    </tr>    <tr>      <th>保险</th>      <td>0.695143</td>    </tr>    <tr>      <th>白酒</th>      <td>1.517105</td>    </tr>  </tbody></table><p>110 rows × 1 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DF(i_e.head(<span class="number">10</span>))  <span class="comment">#收益率最差的10个行业</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>esp</th>    </tr>    <tr>      <th>industry</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>空运</th>      <td>-0.243875</td>    </tr>    <tr>      <th>旅游服务</th>      <td>-0.129538</td>    </tr>    <tr>      <th>公路</th>      <td>-0.111286</td>    </tr>    <tr>      <th>旅游景点</th>      <td>-0.101167</td>    </tr>    <tr>      <th>酒店餐饮</th>      <td>-0.090100</td>    </tr>    <tr>      <th>石油加工</th>      <td>-0.085556</td>    </tr>    <tr>      <th>公共交通</th>      <td>-0.060375</td>    </tr>    <tr>      <th>林业</th>      <td>-0.045250</td>    </tr>    <tr>      <th>路桥</th>      <td>-0.039789</td>    </tr>    <tr>      <th>汽车整车</th>      <td>-0.025348</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>]=<span class="literal">False</span>;          <span class="comment">#正常显示图中负号</span></span><br><span class="line">i_e.head(<span class="number">10</span>).plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071621458.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DF(i_e.tail(<span class="number">10</span>))   <span class="comment">#收益率最好的10个行业</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>esp</th>    </tr>    <tr>      <th>industry</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>农药化肥</th>      <td>0.151171</td>    </tr>    <tr>      <th>园区开发</th>      <td>0.153625</td>    </tr>    <tr>      <th>食品</th>      <td>0.154523</td>    </tr>    <tr>      <th>医药商业</th>      <td>0.195538</td>    </tr>    <tr>      <th>农业综合</th>      <td>0.230633</td>    </tr>    <tr>      <th>饲料</th>      <td>0.249765</td>    </tr>    <tr>      <th>银行</th>      <td>0.324250</td>    </tr>    <tr>      <th>船舶</th>      <td>0.331857</td>    </tr>    <tr>      <th>保险</th>      <td>0.695143</td>    </tr>    <tr>      <th>白酒</th>      <td>1.517105</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i_e.tail(<span class="number">10</span>).plot(kind=<span class="string">&#x27;barh&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071621519.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按地区(area)和行业(industry)计算平均收益率(esp)并排序</span></span><br><span class="line">a_i_e=s_b.groupby([<span class="string">&#x27;area&#x27;</span>,<span class="string">&#x27;industry&#x27;</span>])[<span class="string">&#x27;esp&#x27;</span>].mean().sort_values();</span><br><span class="line">DF(a_i_e)  </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>esp</th>    </tr>    <tr>      <th>area</th>      <th>industry</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>江西</th>      <th>公共交通</th>      <td>-0.6700</td>    </tr>    <tr>      <th>新疆</th>      <th>服饰</th>      <td>-0.6300</td>    </tr>    <tr>      <th>湖北</th>      <th>旅游服务</th>      <td>-0.5660</td>    </tr>    <tr>      <th>辽宁</th>      <th>石油加工</th>      <td>-0.5550</td>    </tr>    <tr>      <th>湖南</th>      <th>小金属</th>      <td>-0.5270</td>    </tr>    <tr>      <th>...</th>      <th>...</th>      <td>...</td>    </tr>    <tr>      <th>山西</th>      <th>白酒</th>      <td>1.4100</td>    </tr>    <tr>      <th>深圳</th>      <th>保险</th>      <td>1.4700</td>    </tr>    <tr>      <th>江苏</th>      <th>白酒</th>      <td>1.5595</td>    </tr>    <tr>      <th>北京</th>      <th>家用电器</th>      <td>2.2600</td>    </tr>    <tr>      <th>贵州</th>      <th>白酒</th>      <td>17.9920</td>    </tr>  </tbody></table><p>1359 rows × 1 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GD_e1=DF(a_i_e[<span class="string">&#x27;广东&#x27;</span>].head(<span class="number">10</span>)); GD_e1  <span class="comment">#广东省收益率最差的10个行业</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>esp</th>    </tr>    <tr>      <th>industry</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>空运</th>      <td>-0.430000</td>    </tr>    <tr>      <th>家居用品</th>      <td>-0.145222</td>    </tr>    <tr>      <th>装修装饰</th>      <td>-0.109000</td>    </tr>    <tr>      <th>百货</th>      <td>-0.105000</td>    </tr>    <tr>      <th>酒店餐饮</th>      <td>-0.092000</td>    </tr>    <tr>      <th>玻璃</th>      <td>-0.087000</td>    </tr>    <tr>      <th>化纤</th>      <td>-0.082000</td>    </tr>    <tr>      <th>综合类</th>      <td>-0.067667</td>    </tr>    <tr>      <th>建筑工程</th>      <td>-0.065250</td>    </tr>    <tr>      <th>石油加工</th>      <td>-0.061000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GD_e2=DF(a_i_e[<span class="string">&#x27;广东&#x27;</span>].tail(<span class="number">10</span>)); GD_e2 <span class="comment">#广东省收益率最好的10个行业</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>esp</th>    </tr>    <tr>      <th>industry</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>农业综合</th>      <td>0.17450</td>    </tr>    <tr>      <th>火力发电</th>      <td>0.17575</td>    </tr>    <tr>      <th>化学制药</th>      <td>0.18720</td>    </tr>    <tr>      <th>水泥</th>      <td>0.27100</td>    </tr>    <tr>      <th>电信运营</th>      <td>0.32100</td>    </tr>    <tr>      <th>乳制品</th>      <td>0.38200</td>    </tr>    <tr>      <th>医药商业</th>      <td>0.42700</td>    </tr>    <tr>      <th>多元金融</th>      <td>0.64650</td>    </tr>    <tr>      <th>饲料</th>      <td>0.69900</td>    </tr>    <tr>      <th>船舶</th>      <td>1.13850</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GD_e12=pd.concat([GD_e1,GD_e2]); GD_e12  <span class="comment">#广东省收益率最差和最好的10个行业合并</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>esp</th>    </tr>    <tr>      <th>industry</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>空运</th>      <td>-0.430000</td>    </tr>    <tr>      <th>家居用品</th>      <td>-0.145222</td>    </tr>    <tr>      <th>装修装饰</th>      <td>-0.109000</td>    </tr>    <tr>      <th>百货</th>      <td>-0.105000</td>    </tr>    <tr>      <th>酒店餐饮</th>      <td>-0.092000</td>    </tr>    <tr>      <th>玻璃</th>      <td>-0.087000</td>    </tr>    <tr>      <th>化纤</th>      <td>-0.082000</td>    </tr>    <tr>      <th>综合类</th>      <td>-0.067667</td>    </tr>    <tr>      <th>建筑工程</th>      <td>-0.065250</td>    </tr>    <tr>      <th>石油加工</th>      <td>-0.061000</td>    </tr>    <tr>      <th>农业综合</th>      <td>0.174500</td>    </tr>    <tr>      <th>火力发电</th>      <td>0.175750</td>    </tr>    <tr>      <th>化学制药</th>      <td>0.187200</td>    </tr>    <tr>      <th>水泥</th>      <td>0.271000</td>    </tr>    <tr>      <th>电信运营</th>      <td>0.321000</td>    </tr>    <tr>      <th>乳制品</th>      <td>0.382000</td>    </tr>    <tr>      <th>医药商业</th>      <td>0.427000</td>    </tr>    <tr>      <th>多元金融</th>      <td>0.646500</td>    </tr>    <tr>      <th>饲料</th>      <td>0.699000</td>    </tr>    <tr>      <th>船舶</th>      <td>1.138500</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GD_e12.plot(kind=<span class="string">&#x27;bar&#x27;</span>).axhline(y=<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071620620.png" alt="png"></p><p>10.1.1.3 新股发行数据的分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#n_s=ts.new_stocks(); n_s.info()</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n_s=pd.read_excel(<span class="string">&#x27;./data/tushare.xlsx&#x27;</span>,<span class="string">&#x27;new_stocks&#x27;</span>,index_col=<span class="number">0</span>); n_s.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;Int64Index: 450 entries, 0 to 449Data columns (total 12 columns): #   Column      Non-Null Count  Dtype  ---  ------      --------------  -----   0   code        450 non-null    int64   1   xcode       450 non-null    int64   2   name        450 non-null    object  3   ipo_date    450 non-null    object  4   issue_date  407 non-null    object  5   amount      450 non-null    int64   6   markets     450 non-null    int64   7   price       450 non-null    float64 8   pe          450 non-null    float64 9   limit       450 non-null    float64 10  funds       450 non-null    float64 11  ballot      450 non-null    float64dtypes: float64(5), int64(4), object(3)memory usage: 45.7+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n_s<span class="comment">#.iloc[:6,:7]  #显示前6行7列数据</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>code</th>      <th>xcode</th>      <th>name</th>      <th>ipo_date</th>      <th>issue_date</th>      <th>amount</th>      <th>markets</th>      <th>price</th>      <th>pe</th>      <th>limit</th>      <th>funds</th>      <th>ballot</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>605008</td>      <td>707008</td>      <td>长鸿高科</td>      <td>2020-08-12</td>      <td>NaN</td>      <td>4600</td>      <td>1380</td>      <td>0.00</td>      <td>0.00</td>      <td>1.30</td>      <td>4.848</td>      <td>0.00</td>    </tr>    <tr>      <th>1</th>      <td>300872</td>      <td>300872</td>      <td>天阳科技</td>      <td>2020-08-12</td>      <td>NaN</td>      <td>5620</td>      <td>1602</td>      <td>0.00</td>      <td>0.00</td>      <td>1.60</td>      <td>6.656</td>      <td>0.00</td>    </tr>    <tr>      <th>2</th>      <td>300873</td>      <td>300873</td>      <td>海晨股份</td>      <td>2020-08-12</td>      <td>NaN</td>      <td>3333</td>      <td>950</td>      <td>0.00</td>      <td>0.00</td>      <td>0.95</td>      <td>7.301</td>      <td>0.00</td>    </tr>    <tr>      <th>3</th>      <td>300876</td>      <td>300876</td>      <td>蒙泰高新</td>      <td>2020-08-12</td>      <td>NaN</td>      <td>2400</td>      <td>684</td>      <td>0.00</td>      <td>0.00</td>      <td>0.65</td>      <td>4.353</td>      <td>0.00</td>    </tr>    <tr>      <th>4</th>      <td>300871</td>      <td>300871</td>      <td>回盛生物</td>      <td>2020-08-11</td>      <td>NaN</td>      <td>2770</td>      <td>789</td>      <td>0.00</td>      <td>0.00</td>      <td>0.75</td>      <td>6.548</td>      <td>0.00</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>445</th>      <td>2935</td>      <td>2935</td>      <td>天奥电子</td>      <td>2018-08-23</td>      <td>2018-09-03</td>      <td>2667</td>      <td>2400</td>      <td>19.38</td>      <td>22.99</td>      <td>0.80</td>      <td>5.169</td>      <td>0.03</td>    </tr>    <tr>      <th>446</th>      <td>601068</td>      <td>780068</td>      <td>中铝国际</td>      <td>2018-08-21</td>      <td>2018-08-31</td>      <td>29591</td>      <td>26632</td>      <td>3.45</td>      <td>31.86</td>      <td>8.80</td>      <td>10.209</td>      <td>0.15</td>    </tr>    <tr>      <th>447</th>      <td>603192</td>      <td>732192</td>      <td>汇得科技</td>      <td>2018-08-16</td>      <td>2018-08-28</td>      <td>2667</td>      <td>2400</td>      <td>19.60</td>      <td>22.99</td>      <td>1.00</td>      <td>5.227</td>      <td>0.03</td>    </tr>    <tr>      <th>448</th>      <td>2933</td>      <td>2933</td>      <td>新兴装备</td>      <td>2018-08-15</td>      <td>2018-08-28</td>      <td>2935</td>      <td>2642</td>      <td>22.45</td>      <td>22.99</td>      <td>1.15</td>      <td>6.589</td>      <td>0.03</td>    </tr>    <tr>      <th>449</th>      <td>603590</td>      <td>732590</td>      <td>康辰药业</td>      <td>2018-08-14</td>      <td>2018-08-27</td>      <td>4000</td>      <td>3600</td>      <td>24.34</td>      <td>22.99</td>      <td>1.60</td>      <td>9.736</td>      <td>0.04</td>    </tr>  </tbody></table><p>450 rows × 12 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#n_s.to_csv(&#x27;new_stocks.csv&#x27;)                     #保存数据到csv表格中</span></span><br><span class="line"><span class="comment">#n_s=pd.read_csv(&#x27;new_stocks.csv&#x27;,index_col=0)   #从csv文件中读取数据</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n_s20=n_s.loc[n_s.ipo_date&gt;=<span class="string">&#x27;2020-01-01&#x27;</span>,]; n_s20.iloc[:,:<span class="number">7</span>]  <span class="comment">#2020年发行的新股</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>code</th>      <th>xcode</th>      <th>name</th>      <th>ipo_date</th>      <th>issue_date</th>      <th>amount</th>      <th>markets</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>605008</td>      <td>707008</td>      <td>长鸿高科</td>      <td>2020-08-12</td>      <td>NaN</td>      <td>4600</td>      <td>1380</td>    </tr>    <tr>      <th>1</th>      <td>300872</td>      <td>300872</td>      <td>天阳科技</td>      <td>2020-08-12</td>      <td>NaN</td>      <td>5620</td>      <td>1602</td>    </tr>    <tr>      <th>2</th>      <td>300873</td>      <td>300873</td>      <td>海晨股份</td>      <td>2020-08-12</td>      <td>NaN</td>      <td>3333</td>      <td>950</td>    </tr>    <tr>      <th>3</th>      <td>300876</td>      <td>300876</td>      <td>蒙泰高新</td>      <td>2020-08-12</td>      <td>NaN</td>      <td>2400</td>      <td>684</td>    </tr>    <tr>      <th>4</th>      <td>300871</td>      <td>300871</td>      <td>回盛生物</td>      <td>2020-08-11</td>      <td>NaN</td>      <td>2770</td>      <td>789</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>207</th>      <td>601816</td>      <td>780816</td>      <td>京沪高铁</td>      <td>2020-01-06</td>      <td>2020-01-16</td>      <td>628563</td>      <td>234379</td>    </tr>    <tr>      <th>208</th>      <td>300813</td>      <td>300813</td>      <td>泰林生物</td>      <td>2020-01-03</td>      <td>2020-01-14</td>      <td>1300</td>      <td>1300</td>    </tr>    <tr>      <th>209</th>      <td>2971</td>      <td>2971</td>      <td>和远气体</td>      <td>2020-01-02</td>      <td>2020-01-13</td>      <td>4000</td>      <td>3600</td>    </tr>    <tr>      <th>210</th>      <td>688178</td>      <td>787178</td>      <td>万德斯</td>      <td>2020-01-02</td>      <td>2020-01-14</td>      <td>2125</td>      <td>808</td>    </tr>    <tr>      <th>211</th>      <td>603551</td>      <td>732551</td>      <td>奥普家居</td>      <td>2020-01-02</td>      <td>2020-01-15</td>      <td>4001</td>      <td>3601</td>    </tr>  </tbody></table><p>212 rows × 7 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2020年发行量最大的10支新股</span></span><br><span class="line">n_s20.sort_values(by=<span class="string">&#x27;amount&#x27;</span>,ascending=<span class="literal">False</span>).iloc[:<span class="number">10</span>,:<span class="number">7</span>]</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>code</th>      <th>xcode</th>      <th>name</th>      <th>ipo_date</th>      <th>issue_date</th>      <th>amount</th>      <th>markets</th>    </tr>  </thead>  <tbody>    <tr>      <th>207</th>      <td>601816</td>      <td>780816</td>      <td>京沪高铁</td>      <td>2020-01-06</td>      <td>2020-01-16</td>      <td>628563</td>      <td>234379</td>    </tr>    <tr>      <th>74</th>      <td>688981</td>      <td>787981</td>      <td>中芯国际</td>      <td>2020-07-07</td>      <td>2020-07-16</td>      <td>193846</td>      <td>25284</td>    </tr>    <tr>      <th>121</th>      <td>600918</td>      <td>730918</td>      <td>中泰证券</td>      <td>2020-05-20</td>      <td>2020-06-03</td>      <td>69686</td>      <td>62718</td>    </tr>    <tr>      <th>152</th>      <td>688126</td>      <td>787126</td>      <td>沪硅产业</td>      <td>2020-04-09</td>      <td>2020-04-20</td>      <td>62007</td>      <td>13457</td>    </tr>    <tr>      <th>134</th>      <td>601778</td>      <td>780778</td>      <td>晶科科技</td>      <td>2020-05-06</td>      <td>2020-05-19</td>      <td>59459</td>      <td>53513</td>    </tr>    <tr>      <th>52</th>      <td>601456</td>      <td>780456</td>      <td>国联证券</td>      <td>2020-07-21</td>      <td>2020-07-31</td>      <td>47572</td>      <td>42815</td>    </tr>    <tr>      <th>120</th>      <td>601827</td>      <td>780827</td>      <td>三峰环境</td>      <td>2020-05-21</td>      <td>2020-06-05</td>      <td>37827</td>      <td>34044</td>    </tr>    <tr>      <th>181</th>      <td>688396</td>      <td>787396</td>      <td>华润微</td>      <td>2020-02-12</td>      <td>2020-02-27</td>      <td>33694</td>      <td>6153</td>    </tr>    <tr>      <th>21</th>      <td>688055</td>      <td>787055</td>      <td>龙腾光电</td>      <td>2020-08-06</td>      <td>NaN</td>      <td>33333</td>      <td>5667</td>    </tr>    <tr>      <th>113</th>      <td>688599</td>      <td>787599</td>      <td>天合光能</td>      <td>2020-05-29</td>      <td>2020-06-10</td>      <td>31020</td>      <td>8903</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#2020年中签率最高的10支新股</span></span><br><span class="line">n_s20.sort_values(by=<span class="string">&#x27;ballot&#x27;</span>).iloc[-<span class="number">10</span>:,[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">11</span>]] </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>code</th>      <th>xcode</th>      <th>name</th>      <th>ipo_date</th>      <th>issue_date</th>      <th>amount</th>      <th>ballot</th>    </tr>  </thead>  <tbody>    <tr>      <th>152</th>      <td>688126</td>      <td>787126</td>      <td>沪硅产业</td>      <td>2020-04-09</td>      <td>2020-04-20</td>      <td>62007</td>      <td>0.10</td>    </tr>    <tr>      <th>174</th>      <td>300821</td>      <td>300821</td>      <td>东岳硅材</td>      <td>2020-03-03</td>      <td>2020-03-12</td>      <td>30000</td>      <td>0.11</td>    </tr>    <tr>      <th>150</th>      <td>601609</td>      <td>780609</td>      <td>金田铜业</td>      <td>2020-04-10</td>      <td>2020-04-22</td>      <td>24200</td>      <td>0.12</td>    </tr>    <tr>      <th>179</th>      <td>601696</td>      <td>780696</td>      <td>中银证券</td>      <td>2020-02-13</td>      <td>2020-02-26</td>      <td>27800</td>      <td>0.13</td>    </tr>    <tr>      <th>120</th>      <td>601827</td>      <td>780827</td>      <td>三峰环境</td>      <td>2020-05-21</td>      <td>2020-06-05</td>      <td>37827</td>      <td>0.15</td>    </tr>    <tr>      <th>52</th>      <td>601456</td>      <td>780456</td>      <td>国联证券</td>      <td>2020-07-21</td>      <td>2020-07-31</td>      <td>47572</td>      <td>0.15</td>    </tr>    <tr>      <th>74</th>      <td>688981</td>      <td>787981</td>      <td>中芯国际</td>      <td>2020-07-07</td>      <td>2020-07-16</td>      <td>193846</td>      <td>0.21</td>    </tr>    <tr>      <th>134</th>      <td>601778</td>      <td>780778</td>      <td>晶科科技</td>      <td>2020-05-06</td>      <td>2020-05-19</td>      <td>59459</td>      <td>0.22</td>    </tr>    <tr>      <th>121</th>      <td>600918</td>      <td>730918</td>      <td>中泰证券</td>      <td>2020-05-20</td>      <td>2020-06-03</td>      <td>69686</td>      <td>0.24</td>    </tr>    <tr>      <th>207</th>      <td>601816</td>      <td>780816</td>      <td>京沪高铁</td>      <td>2020-01-06</td>      <td>2020-01-16</td>      <td>628563</td>      <td>0.79</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(n_s20.amount, n_s20.ballot,<span class="string">&#x27;o&#x27;</span>); <span class="comment">#发行量和中签率之间的散点图 </span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071620623.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n_s20.amount.corr(n_s20.ballot) <span class="comment">#发行量和中签率之间的相关系数</span></span><br></pre></td></tr></table></figure><pre><code>0.9320352728928714</code></pre><h3 id="10-1-2-证券交易数据的获取与分析"><a href="#10-1-2-证券交易数据的获取与分析" class="headerlink" title="10.1.2 证券交易数据的获取与分析"></a>10.1.2 证券交易数据的获取与分析</h3><p>10.1.2.1 历史行情数据分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">h_s=pd.read_excel(<span class="string">&#x27;data/tushare.xlsx&#x27;</span>,<span class="string">&#x27;hist_data&#x27;</span>,index_col=<span class="number">0</span>); h_s.info()</span><br><span class="line"><span class="comment">#h_s=ts.get_hist_data(&#x27;hs300&#x27;); h_s.info()  #在线获取沪深300指数数据</span></span><br></pre></td></tr></table></figure><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;Index: 605 entries, 2020-08-04 to 2018-02-05Data columns (total 13 columns): #   Column        Non-Null Count  Dtype  ---  ------        --------------  -----   0   open          605 non-null    float64 1   high          605 non-null    float64 2   close         605 non-null    float64 3   low           605 non-null    float64 4   volume        605 non-null    float64 5   price_change  605 non-null    float64 6   p_change      605 non-null    float64 7   ma5           605 non-null    float64 8   ma10          605 non-null    float64 9   ma20          605 non-null    float64 10  v_ma5         605 non-null    float64 11  v_ma10        605 non-null    float64 12  v_ma20        605 non-null    float64dtypes: float64(13)memory usage: 66.2+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h_s<span class="comment">#.iloc[:6,:7]   #显示前6行7列数据</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>open</th>      <th>high</th>      <th>close</th>      <th>low</th>      <th>volume</th>      <th>price_change</th>      <th>p_change</th>      <th>ma5</th>      <th>ma10</th>      <th>ma20</th>      <th>v_ma5</th>      <th>v_ma10</th>      <th>v_ma20</th>    </tr>    <tr>      <th>date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2020-08-04</th>      <td>4778.49</td>      <td>4807.08</td>      <td>4775.80</td>      <td>4747.77</td>      <td>2399749.75</td>      <td>4.49</td>      <td>0.09</td>      <td>4715.464</td>      <td>4660.651</td>      <td>4690.541</td>      <td>1986506.22</td>      <td>2029861.14</td>      <td>2437863.12</td>    </tr>    <tr>      <th>2020-08-03</th>      <td>4735.90</td>      <td>4771.37</td>      <td>4771.31</td>      <td>4720.03</td>      <td>2147762.50</td>      <td>76.26</td>      <td>1.62</td>      <td>4673.956</td>      <td>4652.175</td>      <td>4686.658</td>      <td>1832093.27</td>      <td>1990301.82</td>      <td>2520879.91</td>    </tr>    <tr>      <th>2020-07-31</th>      <td>4652.18</td>      <td>4741.81</td>      <td>4695.05</td>      <td>4621.96</td>      <td>1848390.25</td>      <td>38.90</td>      <td>0.83</td>      <td>4625.384</td>      <td>4643.074</td>      <td>4681.597</td>      <td>1745381.87</td>      <td>2021594.50</td>      <td>2616402.29</td>    </tr>    <tr>      <th>2020-07-30</th>      <td>4689.76</td>      <td>4704.63</td>      <td>4656.15</td>      <td>4649.77</td>      <td>1669675.62</td>      <td>-22.86</td>      <td>-0.49</td>      <td>4587.492</td>      <td>4628.039</td>      <td>4667.824</td>      <td>1863514.22</td>      <td>2044131.04</td>      <td>2669225.56</td>    </tr>    <tr>      <th>2020-07-29</th>      <td>4559.16</td>      <td>4680.56</td>      <td>4679.01</td>      <td>4548.85</td>      <td>1866953.00</td>      <td>110.75</td>      <td>2.42</td>      <td>4598.750</td>      <td>4614.049</td>      <td>4651.809</td>      <td>1998208.25</td>      <td>2161820.60</td>      <td>2712211.46</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2018-02-09</th>      <td>3896.17</td>      <td>3911.29</td>      <td>3840.65</td>      <td>3759.15</td>      <td>2063498.25</td>      <td>-171.40</td>      <td>-4.27</td>      <td>4065.248</td>      <td>4065.248</td>      <td>4065.248</td>      <td>1890011.10</td>      <td>1890011.10</td>      <td>1890011.10</td>    </tr>    <tr>      <th>2018-02-08</th>      <td>4022.88</td>      <td>4071.67</td>      <td>4012.05</td>      <td>3974.68</td>      <td>1592699.88</td>      <td>-38.45</td>      <td>-0.95</td>      <td>4121.398</td>      <td>4121.398</td>      <td>4121.398</td>      <td>1846639.32</td>      <td>1846639.32</td>      <td>1846639.32</td>    </tr>    <tr>      <th>2018-02-07</th>      <td>4205.74</td>      <td>4212.57</td>      <td>4050.50</td>      <td>4048.42</td>      <td>2031274.88</td>      <td>-98.39</td>      <td>-2.37</td>      <td>4157.847</td>      <td>4157.847</td>      <td>4157.847</td>      <td>1931285.79</td>      <td>1931285.79</td>      <td>1931285.79</td>    </tr>    <tr>      <th>2018-02-06</th>      <td>4182.33</td>      <td>4211.52</td>      <td>4148.89</td>      <td>4131.56</td>      <td>2149104.50</td>      <td>-125.26</td>      <td>-2.93</td>      <td>4211.520</td>      <td>4211.520</td>      <td>4211.520</td>      <td>1881291.25</td>      <td>1881291.25</td>      <td>1881291.25</td>    </tr>    <tr>      <th>2018-02-05</th>      <td>4204.46</td>      <td>4274.15</td>      <td>4274.15</td>      <td>4200.14</td>      <td>1613478.00</td>      <td>2.92</td>      <td>0.07</td>      <td>4274.150</td>      <td>4274.150</td>      <td>4274.150</td>      <td>1613478.00</td>      <td>1613478.00</td>      <td>1613478.00</td>    </tr>  </tbody></table><p>605 rows × 13 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">h_s.sort_index(inplace=<span class="literal">True</span>); <span class="comment">#按时间重新排序 </span></span><br><span class="line">h_s<span class="comment">#.iloc[:6,:7]      #显示排序后数据的前6行7列</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>open</th>      <th>high</th>      <th>close</th>      <th>low</th>      <th>volume</th>      <th>price_change</th>      <th>p_change</th>      <th>ma5</th>      <th>ma10</th>      <th>ma20</th>      <th>v_ma5</th>      <th>v_ma10</th>      <th>v_ma20</th>    </tr>    <tr>      <th>date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2018-02-05</th>      <td>4204.46</td>      <td>4274.15</td>      <td>4274.15</td>      <td>4200.14</td>      <td>1613478.00</td>      <td>2.92</td>      <td>0.07</td>      <td>4274.150</td>      <td>4274.150</td>      <td>4274.150</td>      <td>1613478.00</td>      <td>1613478.00</td>      <td>1613478.00</td>    </tr>    <tr>      <th>2018-02-06</th>      <td>4182.33</td>      <td>4211.52</td>      <td>4148.89</td>      <td>4131.56</td>      <td>2149104.50</td>      <td>-125.26</td>      <td>-2.93</td>      <td>4211.520</td>      <td>4211.520</td>      <td>4211.520</td>      <td>1881291.25</td>      <td>1881291.25</td>      <td>1881291.25</td>    </tr>    <tr>      <th>2018-02-07</th>      <td>4205.74</td>      <td>4212.57</td>      <td>4050.50</td>      <td>4048.42</td>      <td>2031274.88</td>      <td>-98.39</td>      <td>-2.37</td>      <td>4157.847</td>      <td>4157.847</td>      <td>4157.847</td>      <td>1931285.79</td>      <td>1931285.79</td>      <td>1931285.79</td>    </tr>    <tr>      <th>2018-02-08</th>      <td>4022.88</td>      <td>4071.67</td>      <td>4012.05</td>      <td>3974.68</td>      <td>1592699.88</td>      <td>-38.45</td>      <td>-0.95</td>      <td>4121.398</td>      <td>4121.398</td>      <td>4121.398</td>      <td>1846639.32</td>      <td>1846639.32</td>      <td>1846639.32</td>    </tr>    <tr>      <th>2018-02-09</th>      <td>3896.17</td>      <td>3911.29</td>      <td>3840.65</td>      <td>3759.15</td>      <td>2063498.25</td>      <td>-171.40</td>      <td>-4.27</td>      <td>4065.248</td>      <td>4065.248</td>      <td>4065.248</td>      <td>1890011.10</td>      <td>1890011.10</td>      <td>1890011.10</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2020-07-29</th>      <td>4559.16</td>      <td>4680.56</td>      <td>4679.01</td>      <td>4548.85</td>      <td>1866953.00</td>      <td>110.75</td>      <td>2.42</td>      <td>4598.750</td>      <td>4614.049</td>      <td>4651.809</td>      <td>1998208.25</td>      <td>2161820.60</td>      <td>2712211.46</td>    </tr>    <tr>      <th>2020-07-30</th>      <td>4689.76</td>      <td>4704.63</td>      <td>4656.15</td>      <td>4649.77</td>      <td>1669675.62</td>      <td>-22.86</td>      <td>-0.49</td>      <td>4587.492</td>      <td>4628.039</td>      <td>4667.824</td>      <td>1863514.22</td>      <td>2044131.04</td>      <td>2669225.56</td>    </tr>    <tr>      <th>2020-07-31</th>      <td>4652.18</td>      <td>4741.81</td>      <td>4695.05</td>      <td>4621.96</td>      <td>1848390.25</td>      <td>38.90</td>      <td>0.83</td>      <td>4625.384</td>      <td>4643.074</td>      <td>4681.597</td>      <td>1745381.87</td>      <td>2021594.50</td>      <td>2616402.29</td>    </tr>    <tr>      <th>2020-08-03</th>      <td>4735.90</td>      <td>4771.37</td>      <td>4771.31</td>      <td>4720.03</td>      <td>2147762.50</td>      <td>76.26</td>      <td>1.62</td>      <td>4673.956</td>      <td>4652.175</td>      <td>4686.658</td>      <td>1832093.27</td>      <td>1990301.82</td>      <td>2520879.91</td>    </tr>    <tr>      <th>2020-08-04</th>      <td>4778.49</td>      <td>4807.08</td>      <td>4775.80</td>      <td>4747.77</td>      <td>2399749.75</td>      <td>4.49</td>      <td>0.09</td>      <td>4715.464</td>      <td>4660.651</td>      <td>4690.541</td>      <td>1986506.22</td>      <td>2029861.14</td>      <td>2437863.12</td>    </tr>  </tbody></table><p>605 rows × 13 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h_s[<span class="string">&#x27;close&#x27;</span>].plot(figsize=(<span class="number">10</span>,<span class="number">6</span>));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071621983.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h_s[<span class="string">&#x27;price_change&#x27;</span>].plot(figsize=(<span class="number">10</span>,<span class="number">6</span>)).axhline(y=<span class="number">0</span>,color=<span class="string">&#x27;red&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071620495.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">h_s[[<span class="string">&#x27;close&#x27;</span>,<span class="string">&#x27;ma5&#x27;</span>,<span class="string">&#x27;ma10&#x27;</span>,<span class="string">&#x27;ma20&#x27;</span>]].plot(figsize=(<span class="number">10</span>,<span class="number">6</span>));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071620735.png" alt="png"></p><p>10.1.2.2 公司盈利能力分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取本地2020年第1季度的盈利能力数据  </span></span><br><span class="line"><span class="comment">#p_d=ts.get_profit_data(2020,1); p_d.info() #在线获取2020年第1季度的盈利能力数据</span></span><br><span class="line">p_d=pd.read_excel(<span class="string">&#x27;data/tushare.xlsx&#x27;</span>,<span class="string">&#x27;profit_data&#x27;</span>,index_col=<span class="number">0</span>); p_d.info()  </span><br></pre></td></tr></table></figure><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;Int64Index: 3920 entries, 0 to 3919Data columns (total 9 columns): #   Column             Non-Null Count  Dtype  ---  ------             --------------  -----   0   code               3920 non-null   int64   1   name               3920 non-null   object  2   roe                3881 non-null   float64 3   net_profit_ratio   3914 non-null   float64 4   gross_profit_rate  3888 non-null   float64 5   net_profits        3920 non-null   float64 6   eps                3664 non-null   float64 7   business_income    3919 non-null   float64 8   bips               3663 non-null   float64dtypes: float64(7), int64(1), object(1)memory usage: 306.2+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p_d.columns=[<span class="string">&#x27;代码&#x27;</span>,<span class="string">&#x27;名称&#x27;</span>,<span class="string">&#x27;净收益率&#x27;</span>,<span class="string">&#x27;净利润率&#x27;</span>,<span class="string">&#x27;毛利润率&#x27;</span>,</span><br><span class="line">             <span class="string">&#x27;净利润额&#x27;</span>, <span class="string">&#x27;每股收益&#x27;</span>,<span class="string">&#x27;营业收入&#x27;</span>,<span class="string">&#x27;主营收入&#x27;</span>]</span><br><span class="line">p_d[<span class="string">&#x27;代码&#x27;</span>] = p_d[<span class="string">&#x27;代码&#x27;</span>].astype(<span class="built_in">str</span>) <span class="comment">#强制代码列为字符串</span></span><br><span class="line">p_d.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>代码</th>      <th>名称</th>      <th>净收益率</th>      <th>净利润率</th>      <th>毛利润率</th>      <th>净利润额</th>      <th>每股收益</th>      <th>营业收入</th>      <th>主营收入</th>    </tr>    <tr>      <th>0</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2260</td>      <td>*ST德奥</td>      <td>58.16</td>      <td>68.55</td>      <td>20.6704</td>      <td>33.7153</td>      <td>NaN</td>      <td>49.1790</td>      <td>NaN</td>    </tr>    <tr>      <th>1</th>      <td>2069</td>      <td>獐子岛</td>      <td>52.87</td>      <td>0.93</td>      <td>8.7116</td>      <td>3.7139</td>      <td>0.0052</td>      <td>398.4875</td>      <td>0.5603</td>    </tr>    <tr>      <th>2</th>      <td>600961</td>      <td>株冶集团</td>      <td>40.07</td>      <td>1.21</td>      <td>4.6506</td>      <td>41.7089</td>      <td>0.0790</td>      <td>3422.5768</td>      <td>6.4888</td>    </tr>    <tr>      <th>3</th>      <td>2605</td>      <td>姚记科技</td>      <td>33.05</td>      <td>124.13</td>      <td>67.3586</td>      <td>663.4285</td>      <td>1.6588</td>      <td>534.4203</td>      <td>1.3362</td>    </tr>    <tr>      <th>4</th>      <td>2437</td>      <td>誉衡药业</td>      <td>30.17</td>      <td>113.35</td>      <td>67.9203</td>      <td>658.6003</td>      <td>NaN</td>      <td>581.0199</td>      <td>NaN</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p_d.describe() <span class="comment">#基本统计分析</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>净收益率</th>      <th>净利润率</th>      <th>毛利润率</th>      <th>净利润额</th>      <th>每股收益</th>      <th>营业收入</th>      <th>主营收入</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>3881.000000</td>      <td>3914.000000</td>      <td>3888.000000</td>      <td>3920.000000</td>      <td>3664.000000</td>      <td>3919.000000</td>      <td>3663.000000</td>    </tr>    <tr>      <th>mean</th>      <td>-0.160925</td>      <td>-135.851091</td>      <td>27.095283</td>      <td>231.583835</td>      <td>0.071447</td>      <td>2737.076361</td>      <td>1.288017</td>    </tr>    <tr>      <th>std</th>      <td>24.390056</td>      <td>4323.334538</td>      <td>42.017779</td>      <td>2918.191181</td>      <td>0.270705</td>      <td>18093.421193</td>      <td>2.396955</td>    </tr>    <tr>      <th>min</th>      <td>-1304.670000</td>      <td>-183209.980000</td>      <td>-1588.817500</td>      <td>-19782.000000</td>      <td>-0.783000</td>      <td>0.000000</td>      <td>0.000000</td>    </tr>    <tr>      <th>25%</th>      <td>-0.590000</td>      <td>-4.027500</td>      <td>15.640475</td>      <td>-7.755225</td>      <td>-0.016900</td>      <td>127.088650</td>      <td>0.310550</td>    </tr>    <tr>      <th>50%</th>      <td>0.810000</td>      <td>3.970000</td>      <td>26.367100</td>      <td>14.218500</td>      <td>0.031800</td>      <td>333.993000</td>      <td>0.697500</td>    </tr>    <tr>      <th>75%</th>      <td>2.120000</td>      <td>12.267500</td>      <td>39.588375</td>      <td>63.354925</td>      <td>0.112125</td>      <td>1003.509400</td>      <td>1.386550</td>    </tr>    <tr>      <th>max</th>      <td>58.160000</td>      <td>858.670000</td>      <td>107.953300</td>      <td>84494.000000</td>      <td>10.423300</td>      <td>555502.000000</td>      <td>46.692000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p_d.corr()   <span class="comment">#相关性分析</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>净收益率</th>      <th>净利润率</th>      <th>毛利润率</th>      <th>净利润额</th>      <th>每股收益</th>      <th>营业收入</th>      <th>主营收入</th>    </tr>  </thead>  <tbody>    <tr>      <th>净收益率</th>      <td>1.000000</td>      <td>0.015184</td>      <td>0.063490</td>      <td>0.018065</td>      <td>0.220348</td>      <td>0.009420</td>      <td>0.079012</td>    </tr>    <tr>      <th>净利润率</th>      <td>0.015184</td>      <td>1.000000</td>      <td>0.006839</td>      <td>0.004677</td>      <td>0.046043</td>      <td>0.005054</td>      <td>0.017930</td>    </tr>    <tr>      <th>毛利润率</th>      <td>0.063490</td>      <td>0.006839</td>      <td>1.000000</td>      <td>0.034764</td>      <td>0.195615</td>      <td>-0.021009</td>      <td>-0.061525</td>    </tr>    <tr>      <th>净利润额</th>      <td>0.018065</td>      <td>0.004677</td>      <td>0.034764</td>      <td>1.000000</td>      <td>0.156741</td>      <td>0.419270</td>      <td>0.048213</td>    </tr>    <tr>      <th>每股收益</th>      <td>0.220348</td>      <td>0.046043</td>      <td>0.195615</td>      <td>0.156741</td>      <td>1.000000</td>      <td>0.091409</td>      <td>0.339545</td>    </tr>    <tr>      <th>营业收入</th>      <td>0.009420</td>      <td>0.005054</td>      <td>-0.021009</td>      <td>0.419270</td>      <td>0.091409</td>      <td>1.000000</td>      <td>0.242651</td>    </tr>    <tr>      <th>主营收入</th>      <td>0.079012</td>      <td>0.017930</td>      <td>-0.061525</td>      <td>0.048213</td>      <td>0.339545</td>      <td>0.242651</td>      <td>1.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.plotting.scatter_matrix(p_d,figsize=(<span class="number">10</span>,<span class="number">8</span>));     <span class="comment">#矩阵散点图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071620737.png" alt="png"></p><h3 id="10-1-3-Tushare数据的保存及扩展"><a href="#10-1-3-Tushare数据的保存及扩展" class="headerlink" title="10.1.3 Tushare数据的保存及扩展"></a>10.1.3 Tushare数据的保存及扩展</h3><p>10.1.3.1 Tushare数据的保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#xlsx = pd.ExcelWriter(&#x27;tushare.xlsx&#x27;)</span></span><br><span class="line"><span class="comment">#s_b.to_excel(xlsx,&#x27;stock_basics&#x27;)    #沪深上市公司的基本信息</span></span><br><span class="line"><span class="comment">#n_s.to_excel(xlsx,&#x27;new_stocks&#x27;)      #新股发行数据</span></span><br><span class="line"><span class="comment">#h_s.to_excel(xlsx,&#x27;hist_data&#x27;)       #沪深300近三年历史行情数据</span></span><br><span class="line"><span class="comment">#p_d.to_excel(xlsx,&#x27;profit_data&#x27;)     #公司盈利能力数据</span></span><br><span class="line"><span class="comment">#xlsx.save()</span></span><br></pre></td></tr></table></figure><p>10.1.3.2 Tushare平台的扩展</p><h2 id="10-2-新浪财经数据的获取与分析"><a href="#10-2-新浪财经数据的获取与分析" class="headerlink" title="10.2 新浪财经数据的获取与分析"></a>10.2 新浪财经数据的获取与分析</h2><h3 id="10-2-1-国内生产总值的复制与分析"><a href="#10-2-1-国内生产总值的复制与分析" class="headerlink" title="10.2.1 国内生产总值的复制与分析"></a>10.2.1 国内生产总值的复制与分析</h3><p>10.2.1.1 国内生产总值的复制与分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.display <span class="keyword">import</span> IFrame</span><br><span class="line">IFrame(<span class="string">&quot;http://finance.sina.com.cn/mac&quot;</span>,width=<span class="number">960</span>,height=<span class="number">560</span>)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe</span><br><span class="line">    width=&quot;960&quot;</span><br><span class="line">    height=&quot;560&quot;</span><br><span class="line">    src=&quot;http://finance.sina.com.cn/mac&quot;</span><br><span class="line">    frameborder=&quot;0&quot;</span><br><span class="line">    allowfullscreen</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment">#GDP=pd.read_clipboard(index_col=0);GDP </span></span><br><span class="line">GDP=pd.read_table(<span class="string">&#x27;data/GDP.txt&#x27;</span>,index_col=<span class="number">0</span>,encoding=<span class="string">&#x27;GBK&#x27;</span>);GDP</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>国内生产总值(亿元)</th>      <th>人均国内生产总值(元)</th>    </tr>    <tr>      <th>年份</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2020</th>      <td>1015986.20</td>      <td>72000.00</td>    </tr>    <tr>      <th>2019</th>      <td>990865.11</td>      <td>70891.78</td>    </tr>    <tr>      <th>2018</th>      <td>919281.10</td>      <td>66005.70</td>    </tr>    <tr>      <th>2017</th>      <td>832035.90</td>      <td>60014.00</td>    </tr>    <tr>      <th>2016</th>      <td>746395.10</td>      <td>54139.00</td>    </tr>    <tr>      <th>2015</th>      <td>688858.20</td>      <td>50237.00</td>    </tr>    <tr>      <th>2014</th>      <td>643563.10</td>      <td>47173.00</td>    </tr>    <tr>      <th>2013</th>      <td>592963.20</td>      <td>43684.00</td>    </tr>    <tr>      <th>2012</th>      <td>538580.00</td>      <td>39874.00</td>    </tr>    <tr>      <th>2011</th>      <td>487940.20</td>      <td>36302.00</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GDP.plot();</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071620732.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GDP.sort_index(inplace=<span class="literal">True</span>); GDP   <span class="comment">#按年份排序</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>国内生产总值(亿元)</th>      <th>人均国内生产总值(元)</th>    </tr>    <tr>      <th>年份</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2011</th>      <td>487940.20</td>      <td>36302.00</td>    </tr>    <tr>      <th>2012</th>      <td>538580.00</td>      <td>39874.00</td>    </tr>    <tr>      <th>2013</th>      <td>592963.20</td>      <td>43684.00</td>    </tr>    <tr>      <th>2014</th>      <td>643563.10</td>      <td>47173.00</td>    </tr>    <tr>      <th>2015</th>      <td>688858.20</td>      <td>50237.00</td>    </tr>    <tr>      <th>2016</th>      <td>746395.10</td>      <td>54139.00</td>    </tr>    <tr>      <th>2017</th>      <td>832035.90</td>      <td>60014.00</td>    </tr>    <tr>      <th>2018</th>      <td>919281.10</td>      <td>66005.70</td>    </tr>    <tr>      <th>2019</th>      <td>990865.11</td>      <td>70891.78</td>    </tr>    <tr>      <th>2020</th>      <td>1015986.20</td>      <td>72000.00</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt            </span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>];  <span class="comment">#中文字为黑体</span></span><br><span class="line">GDP.plot(kind=<span class="string">&#x27;bar&#x27;</span>,y=[<span class="string">&#x27;国内生产总值(亿元)&#x27;</span>,<span class="string">&#x27;人均国内生产总值(元)&#x27;</span>],</span><br><span class="line">         secondary_y=[<span class="string">&#x27;人均国内生产总值(元)&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071622787.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> CurrentConfig,NotebookType   <span class="comment">#在NoteBook中设置pyecharts绘图</span></span><br><span class="line">CurrentConfig.NOTEBOOK_TYPE = NotebookType.JUPYTER_LAB     <span class="comment">#在Jupyterlab中显示pyecharts图</span></span><br><span class="line"><span class="keyword">import</span> pyecharts.options <span class="keyword">as</span> opts                           <span class="comment">#加载pyecharts全局参数</span></span><br><span class="line">figsize=opts.InitOpts(width=<span class="string">&#x27;600px&#x27;</span>,height=<span class="string">&#x27;400px&#x27;</span>,bg_color=<span class="string">&#x27;white&#x27;</span>) <span class="comment">#设置图形大小和背景色 </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Bar  <span class="comment">#加载pyecharts绘制条图（Bar）函数</span></span><br><span class="line">Bar().load_javascript()           <span class="comment">#制图前需加载一次JavaScript函数！！</span></span><br></pre></td></tr></table></figure><pre><code>&lt;pyecharts.render.display.Javascript at 0xd6a4a60&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(Bar(figsize)</span><br><span class="line">     .add_xaxis(<span class="built_in">list</span>(GDP.index))</span><br><span class="line">     .add_yaxis(<span class="string">&#x27;国内生产总值(亿元)&#x27;</span>,<span class="built_in">list</span>(GDP[<span class="string">&#x27;国内生产总值(亿元)&#x27;</span>]))     </span><br><span class="line">     .render_notebook()   </span><br><span class="line">)</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="d3bb575a341b41fb86f903e36a1c7caa" class="chart-container" style="width:600px; height:400px;"></div>    <script>        var chart_d3bb575a341b41fb86f903e36a1c7caa = echarts.init(            document.getElementById('d3bb575a341b41fb86f903e36a1c7caa'), 'white', {renderer: 'canvas'});        var option_d3bb575a341b41fb86f903e36a1c7caa = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "name": "\u56fd\u5185\u751f\u4ea7\u603b\u503c(\u4ebf\u5143)",            "legendHoverLink": true,            "data": [                487940.2,                538580.0,                592963.2,                643563.1,                688858.2,                746395.1,                832035.9,                919281.1,                990865.11,                1015986.2            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u56fd\u5185\u751f\u4ea7\u603b\u503c(\u4ebf\u5143)"            ],            "selected": {                "\u56fd\u5185\u751f\u4ea7\u603b\u503c(\u4ebf\u5143)": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                2011,                2012,                2013,                2014,                2015,                2016,                2017,                2018,                2019,                2020            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_d3bb575a341b41fb86f903e36a1c7caa.setOption(option_d3bb575a341b41fb86f903e36a1c7caa);    </script></body></html><p>10.2.1.2 存贷款基准利率的走势分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Rate=pd.read_clipboard(index_col=0);Rate</span></span><br><span class="line">Rate=pd.read_table(<span class="string">&#x27;data/Rate.txt&#x27;</span>,index_col=<span class="number">0</span>,encoding=<span class="string">&#x27;GBK&#x27;</span>);Rate</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>存款利率(%)</th>      <th>贷款利率(%)</th>    </tr>    <tr>      <th>调整时间</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2015-10-24</th>      <td>1.50</td>      <td>4.35</td>    </tr>    <tr>      <th>2015-08-26</th>      <td>1.75</td>      <td>4.60</td>    </tr>    <tr>      <th>2015-06-28</th>      <td>2.00</td>      <td>4.85</td>    </tr>    <tr>      <th>2015-05-11</th>      <td>2.25</td>      <td>5.10</td>    </tr>    <tr>      <th>2015-03-01</th>      <td>2.50</td>      <td>5.35</td>    </tr>    <tr>      <th>2014-11-22</th>      <td>2.75</td>      <td>5.60</td>    </tr>    <tr>      <th>2012-07-06</th>      <td>3.00</td>      <td>6.00</td>    </tr>    <tr>      <th>2012-06-08</th>      <td>3.25</td>      <td>6.31</td>    </tr>    <tr>      <th>2011-07-07</th>      <td>3.50</td>      <td>6.56</td>    </tr>    <tr>      <th>2011-04-06</th>      <td>3.25</td>      <td>6.31</td>    </tr>    <tr>      <th>2011-02-09</th>      <td>3.00</td>      <td>6.06</td>    </tr>    <tr>      <th>2010-12-26</th>      <td>2.75</td>      <td>5.81</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rate.sort_index(inplace=<span class="literal">True</span>); Rate  <span class="comment">#按日期排序</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>存款利率(%)</th>      <th>贷款利率(%)</th>    </tr>    <tr>      <th>调整时间</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2010-12-26</th>      <td>2.75</td>      <td>5.81</td>    </tr>    <tr>      <th>2011-02-09</th>      <td>3.00</td>      <td>6.06</td>    </tr>    <tr>      <th>2011-04-06</th>      <td>3.25</td>      <td>6.31</td>    </tr>    <tr>      <th>2011-07-07</th>      <td>3.50</td>      <td>6.56</td>    </tr>    <tr>      <th>2012-06-08</th>      <td>3.25</td>      <td>6.31</td>    </tr>    <tr>      <th>2012-07-06</th>      <td>3.00</td>      <td>6.00</td>    </tr>    <tr>      <th>2014-11-22</th>      <td>2.75</td>      <td>5.60</td>    </tr>    <tr>      <th>2015-03-01</th>      <td>2.50</td>      <td>5.35</td>    </tr>    <tr>      <th>2015-05-11</th>      <td>2.25</td>      <td>5.10</td>    </tr>    <tr>      <th>2015-06-28</th>      <td>2.00</td>      <td>4.85</td>    </tr>    <tr>      <th>2015-08-26</th>      <td>1.75</td>      <td>4.60</td>    </tr>    <tr>      <th>2015-10-24</th>      <td>1.50</td>      <td>4.35</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Line  <span class="comment">#加载pyecharts绘制线图（Line）函数</span></span><br><span class="line">(Line(figsize)</span><br><span class="line">     .add_xaxis(<span class="built_in">list</span>(Rate.index))</span><br><span class="line">     .add_yaxis(<span class="string">&#x27;存款利率(%)&#x27;</span>,<span class="built_in">list</span>(Rate[<span class="string">&#x27;存款利率(%)&#x27;</span>]))</span><br><span class="line">     .add_yaxis(<span class="string">&#x27;贷款利率(%)&#x27;</span>,<span class="built_in">list</span>(Rate[<span class="string">&#x27;贷款利率(%)&#x27;</span>]))</span><br><span class="line">     .render_notebook()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="ee47b5dfa0f341be9d27e7004db2a509" class="chart-container" style="width:600px; height:400px;"></div>    <script>        var chart_ee47b5dfa0f341be9d27e7004db2a509 = echarts.init(            document.getElementById('ee47b5dfa0f341be9d27e7004db2a509'), 'white', {renderer: 'canvas'});        var option_ee47b5dfa0f341be9d27e7004db2a509 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "line",            "name": "\u5b58\u6b3e\u5229\u7387(%)",            "connectNulls": false,            "symbolSize": 4,            "showSymbol": true,            "smooth": false,            "clip": true,            "step": false,            "data": [                [                    "2010-12-26",                    2.75                ],                [                    "2011-02-09",                    3.0                ],                [                    "2011-04-06",                    3.25                ],                [                    "2011-07-07",                    3.5                ],                [                    "2012-06-08",                    3.25                ],                [                    "2012-07-06",                    3.0                ],                [                    "2014-11-22",                    2.75                ],                [                    "2015-03-01",                    2.5                ],                [                    "2015-05-11",                    2.25                ],                [                    "2015-06-28",                    2.0                ],                [                    "2015-08-26",                    1.75                ],                [                    "2015-10-24",                    1.5                ]            ],            "hoverAnimation": true,            "label": {                "show": true,                "position": "top",                "margin": 8            },            "lineStyle": {                "show": true,                "width": 1,                "opacity": 1,                "curveness": 0,                "type": "solid"            },            "areaStyle": {                "opacity": 0            },            "zlevel": 0,            "z": 0        },        {            "type": "line",            "name": "\u8d37\u6b3e\u5229\u7387(%)",            "connectNulls": false,            "symbolSize": 4,            "showSymbol": true,            "smooth": false,            "clip": true,            "step": false,            "data": [                [                    "2010-12-26",                    5.81                ],                [                    "2011-02-09",                    6.06                ],                [                    "2011-04-06",                    6.31                ],                [                    "2011-07-07",                    6.56                ],                [                    "2012-06-08",                    6.31                ],                [                    "2012-07-06",                    6.0                ],                [                    "2014-11-22",                    5.6                ],                [                    "2015-03-01",                    5.35                ],                [                    "2015-05-11",                    5.1                ],                [                    "2015-06-28",                    4.85                ],                [                    "2015-08-26",                    4.6                ],                [                    "2015-10-24",                    4.35                ]            ],            "hoverAnimation": true,            "label": {                "show": true,                "position": "top",                "margin": 8            },            "lineStyle": {                "show": true,                "width": 1,                "opacity": 1,                "curveness": 0,                "type": "solid"            },            "areaStyle": {                "opacity": 0            },            "zlevel": 0,            "z": 0        }    ],    "legend": [        {            "data": [                "\u5b58\u6b3e\u5229\u7387(%)",                "\u8d37\u6b3e\u5229\u7387(%)"            ],            "selected": {                "\u5b58\u6b3e\u5229\u7387(%)": true,                "\u8d37\u6b3e\u5229\u7387(%)": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "2010-12-26",                "2011-02-09",                "2011-04-06",                "2011-07-07",                "2012-06-08",                "2012-07-06",                "2014-11-22",                "2015-03-01",                "2015-05-11",                "2015-06-28",                "2015-08-26",                "2015-10-24"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_ee47b5dfa0f341be9d27e7004db2a509.setOption(option_ee47b5dfa0f341be9d27e7004db2a509);    </script></body></html><h3 id="10-2-2-板块行情数据的抓取与分析"><a href="#10-2-2-板块行情数据的抓取与分析" class="headerlink" title="10.2.2 板块行情数据的抓取与分析"></a>10.2.2 板块行情数据的抓取与分析</h3><p>10.2.2.1 次新股数据的复制方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#new_stock=pd.read_clipboard(index_col=0);new_stock</span></span><br></pre></td></tr></table></figure><p>10.2.2.2 次新股数据的基本分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#new_stock.sort_values(by=&#x27;涨跌额&#x27;,ascending=False).head(10) #涨幅前十的新股</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#new_stock.to_csv(&#x27;new_stock.csv&#x27;)                     #保存数据到csv表格中</span></span><br><span class="line"><span class="comment">#new_stock=pd.read_csv(&#x27;new_stock.csv&#x27;,index_col=0)   #从csv文档中读取数据</span></span><br></pre></td></tr></table></figure><h2 id="10-3-中商情报数据的可视化分析"><a href="#10-3-中商情报数据的可视化分析" class="headerlink" title="10.3  中商情报数据的可视化分析"></a>10.3  中商情报数据的可视化分析</h2><h3 id="10-3-1-宏观经济数据爬取与分析"><a href="#10-3-1-宏观经济数据爬取与分析" class="headerlink" title="10.3.1 宏观经济数据爬取与分析"></a>10.3.1 宏观经济数据爬取与分析</h3><p>10.3.1.1 行政区划数据的抓取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests                                   <span class="comment">#加载爬虫库</span></span><br><span class="line">url=<span class="string">&#x27;https://s.askci.com/data/year&#x27;</span>               <span class="comment">#综合数据之行政区划页</span></span><br><span class="line">html = requests.get(url).content.decode(<span class="string">&#x27;utf-8&#x27;</span>); <span class="comment">#获取网页信息</span></span><br><span class="line">html[:<span class="number">10</span>]                                        <span class="comment">#显示网页信息，前300个字符</span></span><br></pre></td></tr></table></figure><pre><code>&#39;\ufeff&lt;!doctype&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取第1页表格数据：行政区划，依次类推 [0,1,2,3,4]</span></span><br><span class="line">admin=pd.read_html(html,header=<span class="number">0</span>,index_col=<span class="number">0</span>)[<span class="number">0</span>]; admin</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2018</th>      <th>2017</th>      <th>2016</th>      <th>2015</th>      <th>2014</th>      <th>2013</th>      <th>2012</th>    </tr>    <tr>      <th>指标</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>地级区划数(个)</th>      <td>333</td>      <td>334</td>      <td>334</td>      <td>334</td>      <td>333</td>      <td>333</td>      <td>333</td>    </tr>    <tr>      <th>地级市数(个)</th>      <td>293</td>      <td>294</td>      <td>293</td>      <td>291</td>      <td>288</td>      <td>286</td>      <td>285</td>    </tr>    <tr>      <th>县级区划数(个)</th>      <td>2851</td>      <td>2851</td>      <td>2851</td>      <td>2850</td>      <td>2854</td>      <td>2853</td>      <td>2852</td>    </tr>    <tr>      <th>市辖区数(个)</th>      <td>970</td>      <td>962</td>      <td>954</td>      <td>921</td>      <td>897</td>      <td>872</td>      <td>860</td>    </tr>    <tr>      <th>县级市数(个)</th>      <td>375</td>      <td>363</td>      <td>360</td>      <td>361</td>      <td>361</td>      <td>368</td>      <td>368</td>    </tr>    <tr>      <th>县数(个)</th>      <td>1335</td>      <td>1355</td>      <td>1366</td>      <td>1397</td>      <td>1425</td>      <td>1442</td>      <td>1453</td>    </tr>    <tr>      <th>自治县数(个)</th>      <td>117</td>      <td>117</td>      <td>117</td>      <td>117</td>      <td>117</td>      <td>117</td>      <td>117</td>    </tr>    <tr>      <th>乡镇级区划数(个)</th>      <td>39945</td>      <td>39888</td>      <td>39862</td>      <td>39789</td>      <td>40381</td>      <td>40497</td>      <td>40446</td>    </tr>    <tr>      <th>镇数(个)</th>      <td>21297</td>      <td>21116</td>      <td>20883</td>      <td>20515</td>      <td>20401</td>      <td>20117</td>      <td>19881</td>    </tr>    <tr>      <th>乡数(个)</th>      <td>10253</td>      <td>10529</td>      <td>10872</td>      <td>11315</td>      <td>12282</td>      <td>12812</td>      <td>13281</td>    </tr>    <tr>      <th>街道办事处(个)</th>      <td>8393</td>      <td>8241</td>      <td>8105</td>      <td>7957</td>      <td>7696</td>      <td>7566</td>      <td>7282</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin[:<span class="number">1</span>].T.plot(kind=<span class="string">&#x27;bar&#x27;</span>,ylim=[<span class="number">0</span>,<span class="number">500</span>]); <span class="comment">#地级区划数图</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071620776.png" alt="png"><br>​    </p><p>10.3.1.2 国内生产总值数据的抓取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url=<span class="string">&#x27;https://s.askci.com/data/year/a02/&#x27;</span>   <span class="comment">#国民经济核算之国内生产总值页</span></span><br><span class="line">html = requests.get(url).content.decode(<span class="string">&#x27;utf-8&#x27;</span>); </span><br><span class="line">gdp=pd.read_html(html,header=<span class="number">0</span>,index_col=<span class="number">0</span>)[<span class="number">0</span>]; gdp</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>2018</th>      <th>2017</th>      <th>2016</th>      <th>2015</th>      <th>2014</th>      <th>2013</th>      <th>2012</th>    </tr>    <tr>      <th>指标</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>国民总收入(亿元)</th>      <td>896915.6</td>      <td>820099.5</td>      <td>737074.0</td>      <td>683390.5</td>      <td>642097.6</td>      <td>588141.2</td>      <td>537329.0</td>    </tr>    <tr>      <th>国内生产总值(亿元)</th>      <td>900309.5</td>      <td>820754.3</td>      <td>740060.8</td>      <td>685992.9</td>      <td>641280.6</td>      <td>592963.2</td>      <td>538580.0</td>    </tr>    <tr>      <th>第一产业增加值(亿元)</th>      <td>64734.0</td>      <td>62099.5</td>      <td>60139.2</td>      <td>57774.6</td>      <td>55626.3</td>      <td>53028.1</td>      <td>49084.5</td>    </tr>    <tr>      <th>第二产业增加值(亿元)</th>      <td>366000.9</td>      <td>332742.7</td>      <td>296547.7</td>      <td>282040.3</td>      <td>277571.8</td>      <td>261956.1</td>      <td>244643.3</td>    </tr>    <tr>      <th>第三产业增加值(亿元)</th>      <td>469574.6</td>      <td>425912.1</td>      <td>383373.9</td>      <td>346178.0</td>      <td>308082.5</td>      <td>277979.1</td>      <td>244852.2</td>    </tr>    <tr>      <th>人均国内生产总值(元)</th>      <td>64644.0</td>      <td>59201.0</td>      <td>53680.0</td>      <td>50028.0</td>      <td>47005.0</td>      <td>43684.0</td>      <td>39874.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdp[:<span class="number">2</span>].T.plot(kind=<span class="string">&#x27;bar&#x27;</span>); <span class="comment">#国民总收入和国内生产总值</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071620420.png" alt="png"></p><h3 id="10-3-2-A股股票信息的爬取与分析"><a href="#10-3-2-A股股票信息的爬取与分析" class="headerlink" title="10.3.2 A股股票信息的爬取与分析"></a>10.3.2 A股股票信息的爬取与分析</h3><p>10.3.2.1 A股收益数据的抓取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&#x27;https://s.askci.com/stock/a&#x27;</span>  <span class="comment">#A股信息</span></span><br><span class="line">html = requests.get(url).content.decode(<span class="string">&#x27;utf-8&#x27;</span>); </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">pd.read_html(html,header=<span class="number">0</span>)[<span class="number">0</span>] <span class="comment"># 获取第1个表格数据：A股公司营业收入排行榜(2019年)</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>排名</th>      <th>股票代码</th>      <th>企业简称</th>      <th>营业收入（亿元）</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>600028</td>      <td>中国石化</td>      <td>21059.84</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>601857</td>      <td>中国石油</td>      <td>19338.36</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>601668</td>      <td>中国建筑</td>      <td>16150.23</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>601318</td>      <td>中国平安</td>      <td>12183.15</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>601390</td>      <td>中国中铁</td>      <td>9714.05</td>    </tr>    <tr>      <th>5</th>      <td>6</td>      <td>601186</td>      <td>中国铁建</td>      <td>9103.25</td>    </tr>    <tr>      <th>6</th>      <td>7</td>      <td>601398</td>      <td>工商银行</td>      <td>8826.65</td>    </tr>    <tr>      <th>7</th>      <td>8</td>      <td>601628</td>      <td>中国人寿</td>      <td>8249.61</td>    </tr>    <tr>      <th>8</th>      <td>9</td>      <td>601939</td>      <td>建设银行</td>      <td>7558.58</td>    </tr>    <tr>      <th>9</th>      <td>10</td>      <td>600104</td>      <td>上汽集团</td>      <td>7230.43</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取第2个表格数据：A股公司净利润排行榜(2019年)</span></span><br><span class="line">pd.read_html(html,header=<span class="number">0</span>)[<span class="number">1</span>] </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>排名</th>      <th>股票代码</th>      <th>企业简称</th>      <th>净利润（亿元）</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>601398</td>      <td>工商银行</td>      <td>3176.85</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>601939</td>      <td>建设银行</td>      <td>2735.79</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>601288</td>      <td>农业银行</td>      <td>2164.00</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>601988</td>      <td>中国银行</td>      <td>2050.96</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>601318</td>      <td>中国平安</td>      <td>1593.59</td>    </tr>    <tr>      <th>5</th>      <td>6</td>      <td>600036</td>      <td>招商银行</td>      <td>979.59</td>    </tr>    <tr>      <th>6</th>      <td>7</td>      <td>601328</td>      <td>交通银行</td>      <td>795.70</td>    </tr>    <tr>      <th>7</th>      <td>8</td>      <td>601668</td>      <td>中国建筑</td>      <td>709.50</td>    </tr>    <tr>      <th>8</th>      <td>9</td>      <td>601166</td>      <td>兴业银行</td>      <td>676.81</td>    </tr>    <tr>      <th>9</th>      <td>10</td>      <td>601658</td>      <td>邮储银行</td>      <td>643.18</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获取第3个表格数据：A股公司利润总额排行榜(2019年)</span></span><br><span class="line">pd.read_html(html,header=<span class="number">0</span>)[<span class="number">2</span>] </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>排名</th>      <th>股票代码</th>      <th>企业简称</th>      <th>利润总额（亿元）</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>601398</td>      <td>工商银行</td>      <td>3921.26</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>601939</td>      <td>建设银行</td>      <td>3366.16</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>601288</td>      <td>农业银行</td>      <td>2650.50</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>601988</td>      <td>中国银行</td>      <td>2463.78</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>601318</td>      <td>中国平安</td>      <td>1877.64</td>    </tr>    <tr>      <th>5</th>      <td>6</td>      <td>600036</td>      <td>招商银行</td>      <td>1224.40</td>    </tr>    <tr>      <th>6</th>      <td>7</td>      <td>601668</td>      <td>中国建筑</td>      <td>942.91</td>    </tr>    <tr>      <th>7</th>      <td>8</td>      <td>601328</td>      <td>交通银行</td>      <td>864.25</td>    </tr>    <tr>      <th>8</th>      <td>9</td>      <td>2</td>      <td>万科A</td>      <td>796.76</td>    </tr>    <tr>      <th>9</th>      <td>10</td>      <td>601166</td>      <td>兴业银行</td>      <td>766.37</td>    </tr>  </tbody></table></div><p>10.3.2.2  A股股票信息的爬取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 构建获取当前页的第4个表格数据的函数，其中i表示第i页，即取pageNum=i,以此类推！</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_stock</span>(<span class="params">i</span>):</span> </span><br><span class="line">    url=<span class="string">&#x27;https://s.askci.com/stock/a/0-0?reportTime=2020-03-31&amp;pageNum=&#x27;</span> </span><br><span class="line">    html = requests.get(url+<span class="built_in">str</span>(i)).content.decode(<span class="string">&#x27;utf-8&#x27;</span>); </span><br><span class="line">    data=pd.read_html(html,header=<span class="number">0</span>)[<span class="number">3</span>] </span><br><span class="line">    <span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock1=get_stock(<span class="number">1</span>);stock1      <span class="comment">#第1页A股信息</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>序号</th>      <th>股票代码</th>      <th>股票简称</th>      <th>公司名称</th>      <th>省份</th>      <th>城市</th>      <th>主营业务收入(202003)</th>      <th>净利润(202003)</th>      <th>员工人数</th>      <th>上市日期</th>      <th>招股书</th>      <th>公司财报</th>      <th>行业分类</th>      <th>产品类型</th>      <th>主营业务</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>1</td>      <td>平安银行</td>      <td>平安银行股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>379.26亿</td>      <td>85.48亿</td>      <td>36676</td>      <td>1991-04-03</td>      <td>--</td>      <td>NaN</td>      <td>银行</td>      <td>商业银行业务</td>      <td>经有关监管机构批准的各项商业银行业务。</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>2</td>      <td>万科A</td>      <td>万科企业股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>477.74亿</td>      <td>24.30亿</td>      <td>140565</td>      <td>1991-01-29</td>      <td>--</td>      <td>NaN</td>      <td>房地产开发</td>      <td>房地产、物业管理、投资咨询</td>      <td>房地产开发和物业服务。</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>4</td>      <td>国华网安</td>      <td>深圳国华网安科技股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>2325.30万</td>      <td>357.53万</td>      <td>264</td>      <td>1991-01-14</td>      <td>--</td>      <td>NaN</td>      <td>生物医药</td>      <td>移动应用安全服务、移动互联网游戏</td>      <td>移动应用安全服务业务。</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>5</td>      <td>ST星源</td>      <td>深圳世纪星源股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>4570.29万</td>      <td>-2235.80万</td>      <td>629</td>      <td>1990-12-10</td>      <td>--</td>      <td>NaN</td>      <td>环保工程、物业管理</td>      <td>酒店经营、物业管理、环保业务</td>      <td>绿色低碳城市社区建设相关的服务业务。</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>6</td>      <td>深振业A</td>      <td>深圳市振业(集团)股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>6.52亿</td>      <td>1.41亿</td>      <td>397</td>      <td>1992-04-27</td>      <td>--</td>      <td>NaN</td>      <td>房地产开发</td>      <td>房地产</td>      <td>从事房地产开发与销售。</td>    </tr>    <tr>      <th>5</th>      <td>6</td>      <td>7</td>      <td>*ST全新</td>      <td>深圳市全新好股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>876.49万</td>      <td>-2281.79万</td>      <td>76</td>      <td>1992-04-13</td>      <td>--</td>      <td>NaN</td>      <td>物业经营</td>      <td>物业管理及停车费、房屋租赁、一次性口罩、纳米胶囊、杀菌纸巾</td>      <td>物业管理和房屋租赁业等</td>    </tr>    <tr>      <th>6</th>      <td>7</td>      <td>8</td>      <td>神州高铁</td>      <td>神州高铁技术股份有限公司</td>      <td>北京</td>      <td>北京市</td>      <td>1.19亿</td>      <td>-1.08亿</td>      <td>2394</td>      <td>1992-05-07</td>      <td>--</td>      <td>NaN</td>      <td>轨道交通设备</td>      <td>轨道交通</td>      <td>专业致力于提供轨道交通运营检修装备与数据、线路运营、维保服务。</td>    </tr>    <tr>      <th>7</th>      <td>8</td>      <td>9</td>      <td>中国宝安</td>      <td>中国宝安集团股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>16.28亿</td>      <td>1.14亿</td>      <td>13345</td>      <td>1991-06-25</td>      <td>--</td>      <td>NaN</td>      <td>综合</td>      <td>高新技术产业、生物医药、房地产</td>      <td>高新技术产业、生物医药产业、房地产及其他产业。</td>    </tr>    <tr>      <th>8</th>      <td>9</td>      <td>10</td>      <td>美丽生态</td>      <td>深圳美丽生态股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>7026.79万</td>      <td>-1174.96万</td>      <td>278</td>      <td>1995-10-27</td>      <td>--</td>      <td>NaN</td>      <td>园林工程</td>      <td>燃气销售服务、园林建设、园林设计、苗木销售</td>      <td>工程施工、园林绿化及环境综合整治。</td>    </tr>    <tr>      <th>9</th>      <td>10</td>      <td>11</td>      <td>深物业A</td>      <td>深圳市物业发展(集团)股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>8.62亿</td>      <td>1.28亿</td>      <td>8035</td>      <td>1992-03-30</td>      <td>--</td>      <td>NaN</td>      <td>房地产开发</td>      <td>产城空间开发、物业管理服务、产业生态运营、餐饮业务、工程监理业务</td>      <td>从事房地产开发经营，兼营物业管理、房屋租赁、出租车客运、餐饮服务等。</td>    </tr>    <tr>      <th>10</th>      <td>11</td>      <td>12</td>      <td>南玻A</td>      <td>中国南玻集团股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>17.34亿</td>      <td>1.12亿</td>      <td>10558</td>      <td>1992-02-28</td>      <td>--</td>      <td>NaN</td>      <td>玻璃</td>      <td>玻璃业务、电子玻璃及显示器件业务、太阳能及其他业务</td>      <td>研发、生产制造和销售优质浮法玻璃和工程玻璃、太阳能玻璃和硅材料、光伏电池和组件等可再生能源产...</td>    </tr>    <tr>      <th>11</th>      <td>12</td>      <td>14</td>      <td>沙河股份</td>      <td>沙河实业股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>8687.30万</td>      <td>983.82万</td>      <td>153</td>      <td>1992-06-02</td>      <td>--</td>      <td>NaN</td>      <td>房地产开发</td>      <td>房地产销售</td>      <td>从事房地产开发与经营、现代服务型产业用房运营与管理。</td>    </tr>    <tr>      <th>12</th>      <td>13</td>      <td>16</td>      <td>深康佳A</td>      <td>康佳集团股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>78.07亿</td>      <td>-2.74亿</td>      <td>17216</td>      <td>1992-03-27</td>      <td>--</td>      <td>NaN</td>      <td>电视机</td>      <td>工贸业务、彩电业务、环保业务、白电业务、半导体业务</td>      <td>消费类电子业务、工贸业务、环保业务、半导体业务。</td>    </tr>    <tr>      <th>13</th>      <td>14</td>      <td>17</td>      <td>深中华A</td>      <td>深圳中华自行车(集团)股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>743.44万</td>      <td>-73.30万</td>      <td>65</td>      <td>1992-03-31</td>      <td>--</td>      <td>NaN</td>      <td>自行车</td>      <td>自行车及零配件销售、锂电池材料、珠宝黄金</td>      <td>自行车及锂电池材料业务、珠宝黄金业务。</td>    </tr>    <tr>      <th>14</th>      <td>15</td>      <td>19</td>      <td>深粮控股</td>      <td>深圳市深粮控股股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>16.94亿</td>      <td>8628.35万</td>      <td>1246</td>      <td>1992-10-12</td>      <td>--</td>      <td>NaN</td>      <td>软饮料</td>      <td>食品和饮料及茶加工、粮油贸易及加工、粮油仓储物流及服务</td>      <td>批发零售业务、食品加工制造业务、租赁及商务服务业务。</td>    </tr>    <tr>      <th>15</th>      <td>16</td>      <td>20</td>      <td>深华发A</td>      <td>深圳中恒华发股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>8780.06万</td>      <td>-40.07万</td>      <td>1132</td>      <td>1992-04-28</td>      <td>--</td>      <td>NaN</td>      <td>电子零部件</td>      <td>显示器、注塑件、EPS产品、物业租赁、废料收入、水电费及其他</td>      <td>精密注塑件的加工、销售;液晶显示器的加工、销售;轻型包装材料的加工、销售以及物业租赁业务。</td>    </tr>    <tr>      <th>16</th>      <td>17</td>      <td>21</td>      <td>深科技</td>      <td>深圳长城开发科技股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>33.23亿</td>      <td>1.04亿</td>      <td>27051</td>      <td>1994-02-02</td>      <td>--</td>      <td>NaN</td>      <td>PC、服务器及硬件</td>      <td>存储半导体业务、自有产品、高端制造</td>      <td>致力于为全球客户提供技术研发、工艺设计、生产加工、采购管理、物流支持等电子产品制造服务。</td>    </tr>    <tr>      <th>17</th>      <td>18</td>      <td>23</td>      <td>深天地A</td>      <td>深圳市天地(集团)股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>1.67亿</td>      <td>-1308.50万</td>      <td>984</td>      <td>1993-04-29</td>      <td>--</td>      <td>NaN</td>      <td>商品混凝土</td>      <td>房地产、工业、租赁</td>      <td>商品混凝土的生产和销售、房地产的开发及物业管理等。</td>    </tr>    <tr>      <th>18</th>      <td>19</td>      <td>25</td>      <td>特力A</td>      <td>深圳市特力(集团)股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>8552.04万</td>      <td>496.65万</td>      <td>302</td>      <td>1993-06-21</td>      <td>--</td>      <td>NaN</td>      <td>汽车销售</td>      <td>汽车销售、汽车维修及检测、珠宝批发及零售、物业租赁及服务</td>      <td>汽车销售、汽车检测、维修及配件销售；资源性资产管理；珠宝服务业务。</td>    </tr>    <tr>      <th>19</th>      <td>20</td>      <td>26</td>      <td>飞亚达</td>      <td>飞亚达精密科技股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>5.88亿</td>      <td>-1297.48万</td>      <td>4901</td>      <td>1993-06-03</td>      <td>--</td>      <td>NaN</td>      <td>珠宝首饰</td>      <td>手表品牌业务、手表零售服务业务、精密科技业务、租赁业务</td>      <td>主要从事钟表及其零配件的设计、开发、制造、销售和维修业务，包括"飞亚达"表的产品经营和世界名...</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock1.to_csv(<span class="string">&#x27;A股信息1.csv&#x27;</span>,index=<span class="literal">False</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment">#保存第1页A股信息</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stock = get_stock(<span class="number">1</span>)    <span class="comment">#获取第1页数据</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">5</span>):   <span class="comment">#获取2到5页数据,共有202页数据，全部爬取需长时间</span></span><br><span class="line">    stock = pd.concat([stock,get_stock(i)])   <span class="comment">#拼接表格数据</span></span><br><span class="line">stock</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>序号</th>      <th>股票代码</th>      <th>股票简称</th>      <th>公司名称</th>      <th>省份</th>      <th>城市</th>      <th>主营业务收入(202003)</th>      <th>净利润(202003)</th>      <th>员工人数</th>      <th>上市日期</th>      <th>招股书</th>      <th>公司财报</th>      <th>行业分类</th>      <th>产品类型</th>      <th>主营业务</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>1</td>      <td>平安银行</td>      <td>平安银行股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>379.26亿</td>      <td>85.48亿</td>      <td>36676</td>      <td>1991-04-03</td>      <td>--</td>      <td>NaN</td>      <td>银行</td>      <td>商业银行业务</td>      <td>经有关监管机构批准的各项商业银行业务。</td>    </tr>    <tr>      <th>1</th>      <td>2</td>      <td>2</td>      <td>万科A</td>      <td>万科企业股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>477.74亿</td>      <td>24.30亿</td>      <td>140565</td>      <td>1991-01-29</td>      <td>--</td>      <td>NaN</td>      <td>房地产开发</td>      <td>房地产、物业管理、投资咨询</td>      <td>房地产开发和物业服务。</td>    </tr>    <tr>      <th>2</th>      <td>3</td>      <td>4</td>      <td>国华网安</td>      <td>深圳国华网安科技股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>2325.30万</td>      <td>357.53万</td>      <td>264</td>      <td>1991-01-14</td>      <td>--</td>      <td>NaN</td>      <td>生物医药</td>      <td>移动应用安全服务、移动互联网游戏</td>      <td>移动应用安全服务业务。</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>5</td>      <td>ST星源</td>      <td>深圳世纪星源股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>4570.29万</td>      <td>-2235.80万</td>      <td>629</td>      <td>1990-12-10</td>      <td>--</td>      <td>NaN</td>      <td>环保工程、物业管理</td>      <td>酒店经营、物业管理、环保业务</td>      <td>绿色低碳城市社区建设相关的服务业务。</td>    </tr>    <tr>      <th>4</th>      <td>5</td>      <td>6</td>      <td>深振业A</td>      <td>深圳市振业(集团)股份有限公司</td>      <td>广东</td>      <td>深圳市</td>      <td>6.52亿</td>      <td>1.41亿</td>      <td>397</td>      <td>1992-04-27</td>      <td>--</td>      <td>NaN</td>      <td>房地产开发</td>      <td>房地产</td>      <td>从事房地产开发与销售。</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>15</th>      <td>76</td>      <td>404</td>      <td>长虹华意</td>      <td>长虹华意压缩机股份有限公司</td>      <td>江西</td>      <td>景德镇市</td>      <td>20.96亿</td>      <td>2571.95万</td>      <td>7788</td>      <td>1996-06-19</td>      <td>--</td>      <td>NaN</td>      <td>压缩机</td>      <td>压缩机 、原材料及配件、智能扫地机 、电池</td>      <td>冰箱压缩机、商用压缩机的研发、生产和销售。</td>    </tr>    <tr>      <th>16</th>      <td>77</td>      <td>407</td>      <td>胜利股份</td>      <td>山东胜利股份有限公司</td>      <td>山东</td>      <td>济南市</td>      <td>8.63亿</td>      <td>2883.14万</td>      <td>2071</td>      <td>1996-07-03</td>      <td>--</td>      <td>NaN</td>      <td>燃气</td>      <td>天然气终端销售、天然气贸易、管道制造、油品贸易</td>      <td>清洁能源天然气业务推广和应用。</td>    </tr>    <tr>      <th>17</th>      <td>78</td>      <td>408</td>      <td>藏格控股</td>      <td>藏格控股股份有限公司</td>      <td>青海</td>      <td>海西蒙古族藏族自治州</td>      <td>2.72亿</td>      <td>-2.69亿</td>      <td>1603</td>      <td>1996-06-28</td>      <td>--</td>      <td>NaN</td>      <td>钾肥</td>      <td>生产农用复合肥料、贸易业务</td>      <td>钾肥(氯化钾)的生产和销售。</td>    </tr>    <tr>      <th>18</th>      <td>79</td>      <td>409</td>      <td>云鼎科技</td>      <td>云鼎科技股份有限公司</td>      <td>山东</td>      <td>济南市</td>      <td>6.03亿</td>      <td>-1501.08万</td>      <td>381</td>      <td>1996-06-27</td>      <td>--</td>      <td>NaN</td>      <td>综合</td>      <td>黄金、生物制药、特种轮胎、专利技术实施、中药材加工零售、商业贸易</td>      <td>信息化技术服务和煤气化技术推广业务。</td>    </tr>    <tr>      <th>19</th>      <td>80</td>      <td>410</td>      <td>ST沈机</td>      <td>沈阳机床股份有限公司</td>      <td>辽宁</td>      <td>沈阳市</td>      <td>2.06亿</td>      <td>-2.28亿</td>      <td>4597</td>      <td>1996-07-18</td>      <td>--</td>      <td>NaN</td>      <td>机床设备</td>      <td>机床、机床配套</td>      <td>产品研发、机床制造、销售服务、行业解决方案、机床零部件配套等。</td>    </tr>  </tbody></table><p>80 rows × 15 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#stock.to_csv(&#x27;上市公司信息.csv&#x27;, index=False, encoding=&#x27;utf-8&#x27;)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第10章-数据在线分析及可视化&quot;&gt;&lt;a href=&quot;#第10章-数据在线分析及可视化&quot; class=&quot;headerlink&quot; title=&quot;第10章 数据在线分析及可视化&quot;&gt;&lt;/a&gt;第10章 数据在线分析及可视化&lt;/h1&gt;&lt;h2 id=&quot;10-1-Tushare数</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>第9章-数据的决策分析</title>
    <link href="https://zhangkh.top/ff635cd4.html"/>
    <id>https://zhangkh.top/ff635cd4.html</id>
    <published>2021-12-07T08:16:32.000Z</published>
    <updated>2021-12-07T08:24:24.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第-9-章-数据的决策分析及可视化"><a href="#第-9-章-数据的决策分析及可视化" class="headerlink" title="第 9 章 数据的决策分析及可视化"></a>第 9 章 数据的决策分析及可视化</h1><h2 id="9-1-确定性分析"><a href="#9-1-确定性分析" class="headerlink" title="9.1 确定性分析"></a>9.1 确定性分析</h2><h3 id="9-1-1-单目标求解及图示"><a href="#9-1-1-单目标求解及图示" class="headerlink" title="9.1.1 单目标求解及图示"></a>9.1.1 单目标求解及图示</h3><p>（1）读取数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">Tv=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;Target&#x27;</span>,index_col=<span class="number">0</span>); Tv <span class="comment">#目标值 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>设备投资</th>      <th>单件成本</th>      <th>年销售量</th>      <th>销售单价</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>1500000</td>      <td>1700</td>      <td>8000</td>      <td>2900</td>    </tr>    <tr>      <th>方案2</th>      <td>2000000</td>      <td>1550</td>      <td>8000</td>      <td>2900</td>    </tr>    <tr>      <th>方案3</th>      <td>2500000</td>      <td>1400</td>      <td>8000</td>      <td>2900</td>    </tr>  </tbody></table></div><p>（2）计算年收益金额</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tv[<span class="string">&#x27;年收益&#x27;</span>]=Tv.年销售量*(Tv.销售单价-Tv.单件成本)-Tv.设备投资;Tv </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>设备投资</th>      <th>单件成本</th>      <th>年销售量</th>      <th>销售单价</th>      <th>年收益</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>1500000</td>      <td>1700</td>      <td>8000</td>      <td>2900</td>      <td>8100000</td>    </tr>    <tr>      <th>方案2</th>      <td>2000000</td>      <td>1550</td>      <td>8000</td>      <td>2900</td>      <td>8800000</td>    </tr>    <tr>      <th>方案3</th>      <td>2500000</td>      <td>1400</td>      <td>8000</td>      <td>2900</td>      <td>9500000</td>    </tr>  </tbody></table></div><p>（3）年收益的直观分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt            </span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>]; </span><br><span class="line"><span class="comment">#plt.rcParams[&#x27;figure.dpi&#x27;]=90  #分辨率</span></span><br><span class="line">Tv[<span class="string">&#x27;年收益&#x27;</span>].plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071617764.png" alt="png"></p><p>（4）确定最佳方案：收益率最大者为最佳方案。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tv[<span class="string">&#x27;年收益&#x27;</span>].idxmax()</span><br></pre></td></tr></table></figure><pre><code>&#39;方案3&#39;</code></pre><h3 id="9-1-2-多目标求解及图示"><a href="#9-1-2-多目标求解及图示" class="headerlink" title="9.1.2 多目标求解及图示"></a>9.1.2 多目标求解及图示</h3><p>（1）计算理想值:      </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Ev=[<span class="built_in">min</span>(Tv.设备投资), <span class="built_in">min</span>(Tv.单件成本), <span class="built_in">max</span>(Tv.年销售量), <span class="built_in">max</span>(Tv.销售单价), </span><br><span class="line">    <span class="built_in">max</span>(Tv.年收益)]; Ev <span class="comment">#理想值 </span></span><br></pre></td></tr></table></figure><pre><code>[1500000, 1400, 8000, 2900, 9500000]</code></pre><p>（2）计算差距: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Tv_Ev2=((Tv-Ev))**<span class="number">2</span>    <span class="comment">#差值的平方 </span></span><br><span class="line">Tv_Ev2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>设备投资</th>      <th>单件成本</th>      <th>年销售量</th>      <th>销售单价</th>      <th>年收益</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>0</td>      <td>90000</td>      <td>0</td>      <td>0</td>      <td>1960000000000</td>    </tr>    <tr>      <th>方案2</th>      <td>250000000000</td>      <td>22500</td>      <td>0</td>      <td>0</td>      <td>490000000000</td>    </tr>    <tr>      <th>方案3</th>      <td>1000000000000</td>      <td>0</td>      <td>0</td>      <td>0</td>      <td>0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dv=(Tv_Ev2).<span class="built_in">sum</span>(<span class="number">1</span>); Dv   <span class="comment">#差距</span></span><br></pre></td></tr></table></figure><pre><code>方案方案1    1960000090000方案2     740000022500方案3    1000000000000dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tv[<span class="string">&#x27;差距&#x27;</span>]=Dv; Tv</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>设备投资</th>      <th>单件成本</th>      <th>年销售量</th>      <th>销售单价</th>      <th>年收益</th>      <th>差距</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>1500000</td>      <td>1700</td>      <td>8000</td>      <td>2900</td>      <td>8100000</td>      <td>1960000090000</td>    </tr>    <tr>      <th>方案2</th>      <td>2000000</td>      <td>1550</td>      <td>8000</td>      <td>2900</td>      <td>8800000</td>      <td>740000022500</td>    </tr>    <tr>      <th>方案3</th>      <td>2500000</td>      <td>1400</td>      <td>8000</td>      <td>2900</td>      <td>9500000</td>      <td>1000000000000</td>    </tr>  </tbody></table></div><p>（3）差距的直观分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dv.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071617268.png" alt="png"></p><p>（4）确定最佳方案: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dv.idxmin() </span><br></pre></td></tr></table></figure><pre><code>&#39;方案2&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(&#123;<span class="string">&#x27;单目标&#x27;</span>:Tv[<span class="string">&#x27;年收益&#x27;</span>],<span class="string">&#x27;单目标方案&#x27;</span>:Tv[<span class="string">&#x27;年收益&#x27;</span>]==Tv[<span class="string">&#x27;年收益&#x27;</span>].<span class="built_in">max</span>(),</span><br><span class="line">              <span class="string">&#x27;多目标&#x27;</span>:Tv[<span class="string">&#x27;差距&#x27;</span>],<span class="string">&#x27;多目标方案&#x27;</span>:Tv[<span class="string">&#x27;差距&#x27;</span>]==Tv[<span class="string">&#x27;差距&#x27;</span>].<span class="built_in">min</span>()&#125;)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>单目标</th>      <th>单目标方案</th>      <th>多目标</th>      <th>多目标方案</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>8100000</td>      <td>False</td>      <td>1960000090000</td>      <td>False</td>    </tr>    <tr>      <th>方案2</th>      <td>8800000</td>      <td>False</td>      <td>740000022500</td>      <td>True</td>    </tr>    <tr>      <th>方案3</th>      <td>9500000</td>      <td>True</td>      <td>1000000000000</td>      <td>False</td>    </tr>  </tbody></table></div><h2 id="9-2-不确定性决策分析"><a href="#9-2-不确定性决策分析" class="headerlink" title="9.2 不确定性决策分析"></a>9.2 不确定性决策分析</h2><h3 id="9-2-1-分析方法简介"><a href="#9-2-1-分析方法简介" class="headerlink" title="9.2.1 分析方法简介"></a>9.2.1 分析方法简介</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PLm=pd.DataFrame();    <span class="comment">#构建损益矩阵 ProfitLoss matrix </span></span><br><span class="line">PLm[<span class="string">&#x27;畅销&#x27;</span>]= <span class="number">12000</span>*(Tv.销售单价-Tv.单件成本)-Tv.设备投资; </span><br><span class="line">PLm[<span class="string">&#x27;一般&#x27;</span>]= <span class="number">8000</span>*(Tv.销售单价-Tv.单件成本)-Tv.设备投资; </span><br><span class="line">PLm[<span class="string">&#x27;滞销&#x27;</span>]= <span class="number">1500</span>*(Tv.销售单价-Tv.单件成本)-Tv.设备投资;</span><br><span class="line">PLm </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>畅销</th>      <th>一般</th>      <th>滞销</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>12900000</td>      <td>8100000</td>      <td>300000</td>    </tr>    <tr>      <th>方案2</th>      <td>14200000</td>      <td>8800000</td>      <td>25000</td>    </tr>    <tr>      <th>方案3</th>      <td>15500000</td>      <td>9500000</td>      <td>-250000</td>    </tr>  </tbody></table></div><h3 id="9-2-2-不确定分析原则"><a href="#9-2-2-不确定分析原则" class="headerlink" title="9.2.2  不确定分析原则"></a>9.2.2  不确定分析原则</h3><p>9.2.2.1 乐观原则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lg=PLm.<span class="built_in">max</span>(axis=<span class="number">1</span>);lg  <span class="comment">#每列最大者</span></span><br></pre></td></tr></table></figure><pre><code>方案方案1    12900000方案2    14200000方案3    15500000dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BQD=PLm.copy();PLm</span><br><span class="line">BQD[<span class="string">&#x27;乐观&#x27;</span>]=lg; BQD</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>畅销</th>      <th>一般</th>      <th>滞销</th>      <th>乐观</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>12900000</td>      <td>8100000</td>      <td>300000</td>      <td>12900000</td>    </tr>    <tr>      <th>方案2</th>      <td>14200000</td>      <td>8800000</td>      <td>25000</td>      <td>14200000</td>    </tr>    <tr>      <th>方案3</th>      <td>15500000</td>      <td>9500000</td>      <td>-250000</td>      <td>15500000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lg.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071617783.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lg.idxmax() </span><br></pre></td></tr></table></figure><pre><code>&#39;方案3&#39;</code></pre><p>9.2.2.2 悲观原则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bg=PLm.<span class="built_in">min</span>(<span class="number">1</span>); bg</span><br></pre></td></tr></table></figure><pre><code>方案方案1    300000方案2     25000方案3   -250000dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BQD[<span class="string">&#x27;悲观&#x27;</span>]=bg; BQD</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>畅销</th>      <th>一般</th>      <th>滞销</th>      <th>乐观</th>      <th>悲观</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>12900000</td>      <td>8100000</td>      <td>300000</td>      <td>12900000</td>      <td>300000</td>    </tr>    <tr>      <th>方案2</th>      <td>14200000</td>      <td>8800000</td>      <td>25000</td>      <td>14200000</td>      <td>25000</td>    </tr>    <tr>      <th>方案3</th>      <td>15500000</td>      <td>9500000</td>      <td>-250000</td>      <td>15500000</td>      <td>-250000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>]=<span class="literal">False</span>;  <span class="comment">#正常显示图中负号</span></span><br><span class="line">bg.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071617777.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bg.idxmax() </span><br></pre></td></tr></table></figure><pre><code>&#39;方案1&#39;</code></pre><p>9.2.2.3 折中原则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">0.35</span> </span><br><span class="line">zz= a*lg + (<span class="number">1</span>-a)*bg; zz</span><br></pre></td></tr></table></figure><pre><code>方案方案1    4710000.0方案2    4986250.0方案3    5262500.0dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BQD[<span class="string">&#x27;折中&#x27;</span>]=zz; BQD</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>畅销</th>      <th>一般</th>      <th>滞销</th>      <th>乐观</th>      <th>悲观</th>      <th>折中</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>12900000</td>      <td>8100000</td>      <td>300000</td>      <td>12900000</td>      <td>300000</td>      <td>4710000.0</td>    </tr>    <tr>      <th>方案2</th>      <td>14200000</td>      <td>8800000</td>      <td>25000</td>      <td>14200000</td>      <td>25000</td>      <td>4986250.0</td>    </tr>    <tr>      <th>方案3</th>      <td>15500000</td>      <td>9500000</td>      <td>-250000</td>      <td>15500000</td>      <td>-250000</td>      <td>5262500.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zz.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071617889.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zz.idxmax() </span><br></pre></td></tr></table></figure><pre><code>&#39;方案3&#39;</code></pre><p>9.2.2.4 后悔原则</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rm=PLm.<span class="built_in">max</span>()-PLm;Rm  <span class="comment">#构建后悔矩阵 Regret matrix </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>畅销</th>      <th>一般</th>      <th>滞销</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>2600000</td>      <td>1400000</td>      <td>0</td>    </tr>    <tr>      <th>方案2</th>      <td>1300000</td>      <td>700000</td>      <td>275000</td>    </tr>    <tr>      <th>方案3</th>      <td>0</td>      <td>0</td>      <td>550000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hh=Rm.<span class="built_in">max</span>(<span class="number">1</span>);hh </span><br></pre></td></tr></table></figure><pre><code>方案方案1    2600000方案2    1300000方案3     550000dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BQD[<span class="string">&#x27;后悔&#x27;</span>]=hh; BQD</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>畅销</th>      <th>一般</th>      <th>滞销</th>      <th>乐观</th>      <th>悲观</th>      <th>折中</th>      <th>后悔</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>12900000</td>      <td>8100000</td>      <td>300000</td>      <td>12900000</td>      <td>300000</td>      <td>4710000.0</td>      <td>2600000</td>    </tr>    <tr>      <th>方案2</th>      <td>14200000</td>      <td>8800000</td>      <td>25000</td>      <td>14200000</td>      <td>25000</td>      <td>4986250.0</td>      <td>1300000</td>    </tr>    <tr>      <th>方案3</th>      <td>15500000</td>      <td>9500000</td>      <td>-250000</td>      <td>15500000</td>      <td>-250000</td>      <td>5262500.0</td>      <td>550000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hh.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071617896.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hh.idxmin() </span><br></pre></td></tr></table></figure><pre><code>&#39;方案3&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(&#123;<span class="string">&#x27;乐观&#x27;</span>:lg,<span class="string">&#x27;乐观方案&#x27;</span>:lg==lg.<span class="built_in">max</span>(),<span class="string">&#x27;悲观&#x27;</span>:bg,<span class="string">&#x27;悲观方案&#x27;</span>:bg==bg.<span class="built_in">max</span>(),</span><br><span class="line">              <span class="string">&#x27;折中&#x27;</span>:zz,<span class="string">&#x27;折中方案&#x27;</span>:zz==zz.<span class="built_in">max</span>(),<span class="string">&#x27;后悔&#x27;</span>:hh,<span class="string">&#x27;后悔方案&#x27;</span>:hh==hh.<span class="built_in">min</span>()&#125;)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>乐观</th>      <th>乐观方案</th>      <th>悲观</th>      <th>悲观方案</th>      <th>折中</th>      <th>折中方案</th>      <th>后悔</th>      <th>后悔方案</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>12900000</td>      <td>False</td>      <td>300000</td>      <td>True</td>      <td>4710000.0</td>      <td>False</td>      <td>2600000</td>      <td>False</td>    </tr>    <tr>      <th>方案2</th>      <td>14200000</td>      <td>False</td>      <td>25000</td>      <td>False</td>      <td>4986250.0</td>      <td>False</td>      <td>1300000</td>      <td>False</td>    </tr>    <tr>      <th>方案3</th>      <td>15500000</td>      <td>True</td>      <td>-250000</td>      <td>False</td>      <td>5262500.0</td>      <td>True</td>      <td>550000</td>      <td>True</td>    </tr>  </tbody></table></div><h2 id="9-3-概率型风险分析"><a href="#9-3-概率型风险分析" class="headerlink" title="9.3  概率型风险分析"></a>9.3  概率型风险分析</h2><h3 id="9-3-1-期望值法及直观分析"><a href="#9-3-1-期望值法及直观分析" class="headerlink" title="9.3.1 期望值法及直观分析"></a>9.3.1 期望值法及直观分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">probE=[<span class="number">0.1</span>,<span class="number">0.65</span>,<span class="number">0.25</span>]; <span class="comment">#初始概率 </span></span><br><span class="line">qw=(probE*PLm).<span class="built_in">sum</span>(<span class="number">1</span>); qw</span><br></pre></td></tr></table></figure><pre><code>方案方案1    6630000.0方案2    7146250.0方案3    7662500.0dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qw.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071618510.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qw.idxmax()</span><br></pre></td></tr></table></figure><pre><code>&#39;方案3&#39;</code></pre><h3 id="9-3-2-后悔期望值法及直观分析"><a href="#9-3-2-后悔期望值法及直观分析" class="headerlink" title="9.3.2 后悔期望值法及直观分析"></a>9.3.2 后悔期望值法及直观分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rm</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>畅销</th>      <th>一般</th>      <th>滞销</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>2600000</td>      <td>1400000</td>      <td>0</td>    </tr>    <tr>      <th>方案2</th>      <td>1300000</td>      <td>700000</td>      <td>275000</td>    </tr>    <tr>      <th>方案3</th>      <td>0</td>      <td>0</td>      <td>550000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">probE=[<span class="number">0.1</span>,<span class="number">0.65</span>,<span class="number">0.25</span>]; </span><br><span class="line">hhqw=(probE*Rm).<span class="built_in">sum</span>(<span class="number">1</span>); hhqw</span><br></pre></td></tr></table></figure><pre><code>方案方案1    1170000.0方案2     653750.0方案3     137500.0dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hhqw.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071617263.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hhqw.idxmin()</span><br></pre></td></tr></table></figure><pre><code>&#39;方案3&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(&#123;<span class="string">&#x27;期望值&#x27;</span>:qw,<span class="string">&#x27;期望方案&#x27;</span>:qw==qw.<span class="built_in">max</span>(),</span><br><span class="line">              <span class="string">&#x27;后悔期望值&#x27;</span>:qw,<span class="string">&#x27;后悔期望方案&#x27;</span>:hhqw==hhqw.<span class="built_in">min</span>()&#125;)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>期望值</th>      <th>期望方案</th>      <th>后悔期望值</th>      <th>后悔期望方案</th>    </tr>    <tr>      <th>方案</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>方案1</th>      <td>6630000.0</td>      <td>False</td>      <td>6630000.0</td>      <td>False</td>    </tr>    <tr>      <th>方案2</th>      <td>7146250.0</td>      <td>False</td>      <td>7146250.0</td>      <td>False</td>    </tr>    <tr>      <th>方案3</th>      <td>7662500.0</td>      <td>True</td>      <td>7662500.0</td>      <td>True</td>    </tr>  </tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第-9-章-数据的决策分析及可视化&quot;&gt;&lt;a href=&quot;#第-9-章-数据的决策分析及可视化&quot; class=&quot;headerlink&quot; title=&quot;第 9 章 数据的决策分析及可视化&quot;&gt;&lt;/a&gt;第 9 章 数据的决策分析及可视化&lt;/h1&gt;&lt;h2 id=&quot;9-1-确</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>第8章-数据的预测分析</title>
    <link href="https://zhangkh.top/1f321105.html"/>
    <id>https://zhangkh.top/1f321105.html</id>
    <published>2021-12-07T08:10:54.000Z</published>
    <updated>2021-12-07T08:24:24.532Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第8章-数据的预测分析及可视化"><a href="#第8章-数据的预测分析及可视化" class="headerlink" title="第8章 数据的预测分析及可视化"></a>第8章 数据的预测分析及可视化</h1><h2 id="8-1-动态数列的基本分析"><a href="#8-1-动态数列的基本分析" class="headerlink" title="8.1 动态数列的基本分析"></a>8.1 动态数列的基本分析</h2><h3 id="8-1-1-动态数列的介绍"><a href="#8-1-1-动态数列的介绍" class="headerlink" title="8.1.1 动态数列的介绍"></a>8.1.1 动态数列的介绍</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#%config InlineBackend.figure_format = &#x27;retina&#x27; #可提高图形显示的清晰度</span></span><br></pre></td></tr></table></figure><p>8.1.1.1  动态数列的概念</p><p>8.1.1.2 动态数列的构建</p><p>（1）获取时间序列数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd                     <span class="comment">#加载数据分析包pandas</span></span><br><span class="line">pd.set_option(<span class="string">&#x27;display.precision&#x27;</span>,<span class="number">4</span>)    <span class="comment">#设置pandas输出精度</span></span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_rows&#x27;</span>, <span class="number">10</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YQdata=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;YQdata&#x27;</span>,index_col=<span class="number">0</span>)</span><br><span class="line">YQdata</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Q1</th>      <th>Q2</th>      <th>Q3</th>      <th>Q4</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001</th>      <td>2.330</td>      <td>2.565</td>      <td>2.687</td>      <td>3.384</td>    </tr>    <tr>      <th>2002</th>      <td>2.536</td>      <td>2.797</td>      <td>2.972</td>      <td>3.728</td>    </tr>    <tr>      <th>2003</th>      <td>2.886</td>      <td>3.101</td>      <td>3.346</td>      <td>4.249</td>    </tr>    <tr>      <th>2004</th>      <td>3.342</td>      <td>3.699</td>      <td>3.956</td>      <td>4.991</td>    </tr>    <tr>      <th>2005</th>      <td>3.912</td>      <td>4.280</td>      <td>4.474</td>      <td>5.828</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2011</th>      <td>9.748</td>      <td>10.901</td>      <td>11.586</td>      <td>15.076</td>    </tr>    <tr>      <th>2012</th>      <td>10.837</td>      <td>11.963</td>      <td>12.574</td>      <td>16.573</td>    </tr>    <tr>      <th>2013</th>      <td>11.886</td>      <td>12.916</td>      <td>13.908</td>      <td>20.092</td>    </tr>    <tr>      <th>2014</th>      <td>12.821</td>      <td>14.083</td>      <td>15.086</td>      <td>21.656</td>    </tr>    <tr>      <th>2015</th>      <td>14.067</td>      <td>17.351</td>      <td>17.316</td>      <td>18.937</td>    </tr>  </tbody></table><p>15 rows × 4 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QTdata=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;QTdata&#x27;</span>,index_col=<span class="number">0</span>)</span><br><span class="line">QTdata</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>GDP</th>    </tr>    <tr>      <th>YQ</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001Q1</th>      <td>2.330</td>    </tr>    <tr>      <th>2001Q2</th>      <td>2.565</td>    </tr>    <tr>      <th>2001Q3</th>      <td>2.687</td>    </tr>    <tr>      <th>2001Q4</th>      <td>3.384</td>    </tr>    <tr>      <th>2002Q1</th>      <td>2.536</td>    </tr>    <tr>      <th>...</th>      <td>...</td>    </tr>    <tr>      <th>2014Q4</th>      <td>21.656</td>    </tr>    <tr>      <th>2015Q1</th>      <td>14.067</td>    </tr>    <tr>      <th>2015Q2</th>      <td>17.351</td>    </tr>    <tr>      <th>2015Q3</th>      <td>17.316</td>    </tr>    <tr>      <th>2015Q4</th>      <td>18.937</td>    </tr>  </tbody></table><p>60 rows × 1 columns</p></div><p>（2）季度序列数据的图示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QTdata.plot(grid=<span class="literal">True</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071612571.png" alt="png"></p><p>（3）构建年度型序列数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成年度变量 </span></span><br><span class="line">QTdata[<span class="string">&#x27;Year&#x27;</span>]=QTdata.index.<span class="built_in">str</span>[:<span class="number">4</span>];QTdata</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>GDP</th>      <th>Year</th>    </tr>    <tr>      <th>YQ</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001Q1</th>      <td>2.330</td>      <td>2001</td>    </tr>    <tr>      <th>2001Q2</th>      <td>2.565</td>      <td>2001</td>    </tr>    <tr>      <th>2001Q3</th>      <td>2.687</td>      <td>2001</td>    </tr>    <tr>      <th>2001Q4</th>      <td>3.384</td>      <td>2001</td>    </tr>    <tr>      <th>2002Q1</th>      <td>2.536</td>      <td>2002</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2014Q4</th>      <td>21.656</td>      <td>2014</td>    </tr>    <tr>      <th>2015Q1</th>      <td>14.067</td>      <td>2015</td>    </tr>    <tr>      <th>2015Q2</th>      <td>17.351</td>      <td>2015</td>    </tr>    <tr>      <th>2015Q3</th>      <td>17.316</td>      <td>2015</td>    </tr>    <tr>      <th>2015Q4</th>      <td>18.937</td>      <td>2015</td>    </tr>  </tbody></table><p>60 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#形成年度时序数据 </span></span><br><span class="line">YGDP=QTdata.groupby([<span class="string">&#x27;Year&#x27;</span>])[<span class="string">&#x27;GDP&#x27;</span>].<span class="built_in">sum</span>();YGDP </span><br></pre></td></tr></table></figure><pre><code>Year2001    10.9662002    12.0332003    13.5822004    15.9882005    18.494         ...  2011    47.3112012    51.9472013    58.8022014    63.6462015    67.671Name: GDP, Length: 15, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YGDP.plot(grid=<span class="literal">True</span>);</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611636.png" alt="png"><br>​    </p><h3 id="8-1-2-动态数列的分析"><a href="#8-1-2-动态数列的分析" class="headerlink" title="8.1.2 动态数列的分析"></a>8.1.2 动态数列的分析</h3><p>8.1.2.1 绝对动态数列</p><p>（1）定基增长量 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">YGDP</span><br><span class="line">YGDPds=pd.DataFrame(YGDP);  <span class="comment">#构建年度动态序列框</span></span><br><span class="line">YGDPds</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>GDP</th>    </tr>    <tr>      <th>Year</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001</th>      <td>10.966</td>    </tr>    <tr>      <th>2002</th>      <td>12.033</td>    </tr>    <tr>      <th>2003</th>      <td>13.582</td>    </tr>    <tr>      <th>2004</th>      <td>15.988</td>    </tr>    <tr>      <th>2005</th>      <td>18.494</td>    </tr>    <tr>      <th>...</th>      <td>...</td>    </tr>    <tr>      <th>2011</th>      <td>47.311</td>    </tr>    <tr>      <th>2012</th>      <td>51.947</td>    </tr>    <tr>      <th>2013</th>      <td>58.802</td>    </tr>    <tr>      <th>2014</th>      <td>63.646</td>    </tr>    <tr>      <th>2015</th>      <td>67.671</td>    </tr>  </tbody></table><p>15 rows × 1 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YGDPds[<span class="string">&#x27;定基数&#x27;</span>]= YGDP-YGDP[:<span class="number">1</span>].values; YGDPds </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>GDP</th>      <th>定基数</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001</th>      <td>10.966</td>      <td>0.000</td>    </tr>    <tr>      <th>2002</th>      <td>12.033</td>      <td>1.067</td>    </tr>    <tr>      <th>2003</th>      <td>13.582</td>      <td>2.616</td>    </tr>    <tr>      <th>2004</th>      <td>15.988</td>      <td>5.022</td>    </tr>    <tr>      <th>2005</th>      <td>18.494</td>      <td>7.528</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2011</th>      <td>47.311</td>      <td>36.345</td>    </tr>    <tr>      <th>2012</th>      <td>51.947</td>      <td>40.981</td>    </tr>    <tr>      <th>2013</th>      <td>58.802</td>      <td>47.836</td>    </tr>    <tr>      <th>2014</th>      <td>63.646</td>      <td>52.680</td>    </tr>    <tr>      <th>2015</th>      <td>67.671</td>      <td>56.705</td>    </tr>  </tbody></table><p>15 rows × 2 columns</p></div><p>（2）环比增长量 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YGDPds[<span class="string">&#x27;环基数&#x27;</span>]= YGDP-YGDP.shift(<span class="number">1</span>); YGDPds <span class="comment">#shift(1)向下移动1个单位 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>GDP</th>      <th>定基数</th>      <th>环基数</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001</th>      <td>10.966</td>      <td>0.000</td>      <td>NaN</td>    </tr>    <tr>      <th>2002</th>      <td>12.033</td>      <td>1.067</td>      <td>1.067</td>    </tr>    <tr>      <th>2003</th>      <td>13.582</td>      <td>2.616</td>      <td>1.549</td>    </tr>    <tr>      <th>2004</th>      <td>15.988</td>      <td>5.022</td>      <td>2.406</td>    </tr>    <tr>      <th>2005</th>      <td>18.494</td>      <td>7.528</td>      <td>2.506</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2011</th>      <td>47.311</td>      <td>36.345</td>      <td>7.160</td>    </tr>    <tr>      <th>2012</th>      <td>51.947</td>      <td>40.981</td>      <td>4.636</td>    </tr>    <tr>      <th>2013</th>      <td>58.802</td>      <td>47.836</td>      <td>6.855</td>    </tr>    <tr>      <th>2014</th>      <td>63.646</td>      <td>52.680</td>      <td>4.844</td>    </tr>    <tr>      <th>2015</th>      <td>67.671</td>      <td>56.705</td>      <td>4.025</td>    </tr>  </tbody></table><p>15 rows × 3 columns</p></div><p>8.1.2.2 相对动态数列</p><p>（1）定基发展速度（定基比） </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YGDPds[<span class="string">&#x27;定基比&#x27;</span>]=YGDP/YGDP[:<span class="number">1</span>].values; YGDPds </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>GDP</th>      <th>定基数</th>      <th>环基数</th>      <th>定基比</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001</th>      <td>10.966</td>      <td>0.000</td>      <td>NaN</td>      <td>1.0000</td>    </tr>    <tr>      <th>2002</th>      <td>12.033</td>      <td>1.067</td>      <td>1.067</td>      <td>1.0973</td>    </tr>    <tr>      <th>2003</th>      <td>13.582</td>      <td>2.616</td>      <td>1.549</td>      <td>1.2386</td>    </tr>    <tr>      <th>2004</th>      <td>15.988</td>      <td>5.022</td>      <td>2.406</td>      <td>1.4580</td>    </tr>    <tr>      <th>2005</th>      <td>18.494</td>      <td>7.528</td>      <td>2.506</td>      <td>1.6865</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2011</th>      <td>47.311</td>      <td>36.345</td>      <td>7.160</td>      <td>4.3143</td>    </tr>    <tr>      <th>2012</th>      <td>51.947</td>      <td>40.981</td>      <td>4.636</td>      <td>4.7371</td>    </tr>    <tr>      <th>2013</th>      <td>58.802</td>      <td>47.836</td>      <td>6.855</td>      <td>5.3622</td>    </tr>    <tr>      <th>2014</th>      <td>63.646</td>      <td>52.680</td>      <td>4.844</td>      <td>5.8039</td>    </tr>    <tr>      <th>2015</th>      <td>67.671</td>      <td>56.705</td>      <td>4.025</td>      <td>6.1710</td>    </tr>  </tbody></table><p>15 rows × 4 columns</p></div><p>（2）环比发展速度（环基比） </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YGDPds[<span class="string">&#x27;环基比&#x27;</span>]=YGDP/YGDP.shift(<span class="number">1</span>);YGDPds </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>GDP</th>      <th>定基数</th>      <th>环基数</th>      <th>定基比</th>      <th>环基比</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001</th>      <td>10.966</td>      <td>0.000</td>      <td>NaN</td>      <td>1.0000</td>      <td>NaN</td>    </tr>    <tr>      <th>2002</th>      <td>12.033</td>      <td>1.067</td>      <td>1.067</td>      <td>1.0973</td>      <td>1.0973</td>    </tr>    <tr>      <th>2003</th>      <td>13.582</td>      <td>2.616</td>      <td>1.549</td>      <td>1.2386</td>      <td>1.1287</td>    </tr>    <tr>      <th>2004</th>      <td>15.988</td>      <td>5.022</td>      <td>2.406</td>      <td>1.4580</td>      <td>1.1771</td>    </tr>    <tr>      <th>2005</th>      <td>18.494</td>      <td>7.528</td>      <td>2.506</td>      <td>1.6865</td>      <td>1.1567</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2011</th>      <td>47.311</td>      <td>36.345</td>      <td>7.160</td>      <td>4.3143</td>      <td>1.1783</td>    </tr>    <tr>      <th>2012</th>      <td>51.947</td>      <td>40.981</td>      <td>4.636</td>      <td>4.7371</td>      <td>1.0980</td>    </tr>    <tr>      <th>2013</th>      <td>58.802</td>      <td>47.836</td>      <td>6.855</td>      <td>5.3622</td>      <td>1.1320</td>    </tr>    <tr>      <th>2014</th>      <td>63.646</td>      <td>52.680</td>      <td>4.844</td>      <td>5.8039</td>      <td>1.0824</td>    </tr>    <tr>      <th>2015</th>      <td>67.671</td>      <td>56.705</td>      <td>4.025</td>      <td>6.1710</td>      <td>1.0632</td>    </tr>  </tbody></table><p>15 rows × 5 columns</p></div><p>8.1.2.3 平均动态数列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="built_in">len</span>(YGDP);n</span><br></pre></td></tr></table></figure><pre><code>15</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ADR=(YGDP[-<span class="number">1</span>:].values/YGDP[:<span class="number">1</span>].values)**(<span class="number">1</span>/n)</span><br><span class="line">print(<span class="string">&#x27;\n  平均增长量 = %5.3f&#x27;</span> % ADR)</span><br></pre></td></tr></table></figure><pre><code>  平均增长量 = 1.129</code></pre><h2 id="8-2-动态数列预测分析"><a href="#8-2-动态数列预测分析" class="headerlink" title="8.2 动态数列预测分析"></a>8.2 动态数列预测分析</h2><h3 id="8-2-1-趋势预测模型构建"><a href="#8-2-1-趋势预测模型构建" class="headerlink" title="8.2.1 趋势预测模型构建"></a>8.2.1 趋势预测模型构建</h3><p>8.2.1.1 趋势模型的类型</p><p>（1）一次模型：y = a + bx</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">n=<span class="number">20</span></span><br><span class="line">x=np.arange(n)+<span class="number">1</span>       <span class="comment">#生成1:n的等差数列</span></span><br><span class="line">y=<span class="number">1</span>+<span class="number">2</span>*x    </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line">plt.plot(x,y,<span class="string">&#x27;o-&#x27;</span>);    <span class="comment">#点线图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071612495.png" alt="png"></p><p>（2）对数模型：y = a + b*log x </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y=<span class="number">1</span>+<span class="number">0.2</span>*np.log(x)</span><br><span class="line">plt.plot(x,y,<span class="string">&#x27;o-&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611651.png" alt="png"></p><p>（3）指数模型：y=ae^(bx) </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y=<span class="number">0.2</span>*np.exp(<span class="number">0.1</span>*x)</span><br><span class="line">plt.plot(x,y,<span class="string">&#x27;o-&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071612246.png" alt="png"></p><p>（4）幂函数：y=ax^b </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y=<span class="number">0.2</span>*x**<span class="number">0.1</span></span><br><span class="line">plt.plot(x,y,<span class="string">&#x27;o-&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071612026.png" alt="png"></p><p>8.2.1.2  最优模型选择准则</p><p>8.2.1.3 趋势模型的建立</p><p>（1）线性模型 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm </span><br><span class="line">Yt=YGDP       <span class="comment">#Yt=YGDP=QTdata.groupby([&#x27;Year&#x27;])[&#x27;GDP&#x27;].sum()</span></span><br><span class="line">plt.plot(Yt,<span class="string">&#x27;.&#x27;</span>)</span><br></pre></td></tr></table></figure><pre><code>[&lt;matplotlib.lines.Line2D at 0xdc062e0&gt;]</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071612297.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Xt=np.arange(<span class="built_in">len</span>(Yt))+<span class="number">1</span>; <span class="comment">#自变量序列1:n，建模时最好不直接用年份</span></span><br><span class="line">Xt</span><br></pre></td></tr></table></figure><pre><code>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yt_L1=sm.OLS(Yt,sm.add_constant(Xt)).fit(); </span><br><span class="line">Yt_L1.summary().tables[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><pre><code>C:\Users\kit\miniconda3\lib\site-packages\scipy\stats\stats.py:1541: UserWarning: kurtosistest only valid for n&gt;=20 ... continuing anyway, n=15  warnings.warn(&quot;kurtosistest only valid for n&gt;=20 ... continuing &quot;</code></pre><table class="simpletable"><tr>    <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  </tr><tr>  <th>const</th> <td>   -0.2149</td> <td>    1.939</td> <td>   -0.111</td> <td> 0.913</td> <td>   -4.404</td> <td>    3.974</td></tr><tr>  <th>x1</th>    <td>    4.3127</td> <td>    0.213</td> <td>   20.224</td> <td> 0.000</td> <td>    3.852</td> <td>    4.773</td></tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#构建一个简单的趋势函数来进行模型选择。</span></span><br><span class="line"><span class="keyword">import</span> warnings <span class="comment">#忽视警告信息,当例数较少时会有警告 </span></span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trendmodel</span>(<span class="params">y,x</span>):</span> <span class="comment">#定义直线回归模型, x为自变量, y为因变量</span></span><br><span class="line">    fm=sm.OLS(y,sm.add_constant(x)).fit() </span><br><span class="line">    sfm=fm.summary2() </span><br><span class="line">    print(<span class="string">&quot;模型检验:\n&quot;</span>,sfm.tables[<span class="number">1</span>]) </span><br><span class="line">    R2=np.corrcoef(x,y)[<span class="number">0</span>,<span class="number">1</span>]**<span class="number">2</span> <span class="comment">#相关系数平方=sfm.tables[0][1][6])</span></span><br><span class="line">    print(<span class="string">&quot;决定系数：%5.4f&quot;</span>%R2)   </span><br><span class="line">    <span class="keyword">return</span> fm.fittedvalues</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">L1=trendmodel(Yt,Xt); </span><br><span class="line">plt.plot(Yt,<span class="string">&#x27;o&#x27;</span>,L1,<span class="string">&#x27;r-&#x27;</span>); </span><br></pre></td></tr></table></figure><pre><code>模型检验:         Coef.  Std.Err.        t       P&gt;|t|  [0.025  0.975]const -0.2149    1.9389  -0.1108  9.1344e-01 -4.4035  3.9738x1     4.3127    0.2132  20.2240  3.3003e-11  3.8520  4.7734决定系数：0.9692</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071612232.png" alt="png"></p><p>（2）指数曲线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">L2=trendmodel(np.log(Yt),np.log(Xt));      <span class="comment">#对Yt取对数</span></span><br><span class="line">plt.plot(Yt,<span class="string">&#x27;o&#x27;</span>,np.exp(L2),<span class="string">&#x27;r-&#x27;</span>);  <span class="comment">#对Yt的拟合值取反对数</span></span><br></pre></td></tr></table></figure><pre><code>模型检验:         Coef.  Std.Err.        t       P&gt;|t|  [0.025  0.975]const  1.9528    0.1442  13.5470  4.8185e-09  1.6414  2.2642x1     0.7585    0.0718  10.5627  9.4984e-08  0.6033  0.9136决定系数：0.8956</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611145.png" alt="png"></p><h3 id="8-2-2-平滑预测方法"><a href="#8-2-2-平滑预测方法" class="headerlink" title="8.2.2 平滑预测方法"></a>8.2.2 平滑预测方法</h3><p>8.2.2.1 移动平均预测法 </p><p>（1）简单平均法 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Qt=QTdata.GDP;Qt</span><br></pre></td></tr></table></figure><pre><code>YQ2001Q1     2.3302001Q2     2.5652001Q3     2.6872001Q4     3.3842002Q1     2.536           ...  2014Q4    21.6562015Q1    14.0672015Q2    17.3512015Q3    17.3162015Q4    18.937Name: GDP, Length: 60, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Qt.plot()</span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:xlabel=&#39;YQ&#39;&gt;</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071612184.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Qt.mean() <span class="comment">#季节数据的平均 </span></span><br></pre></td></tr></table></figure><pre><code>8.571633333333333</code></pre><p>（2）简单移动平均法 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QtM=pd.DataFrame(Qt);QtM</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>GDP</th>    </tr>    <tr>      <th>YQ</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2001Q1</th>      <td>2.330</td>    </tr>    <tr>      <th>2001Q2</th>      <td>2.565</td>    </tr>    <tr>      <th>2001Q3</th>      <td>2.687</td>    </tr>    <tr>      <th>2001Q4</th>      <td>3.384</td>    </tr>    <tr>      <th>2002Q1</th>      <td>2.536</td>    </tr>    <tr>      <th>...</th>      <td>...</td>    </tr>    <tr>      <th>2014Q4</th>      <td>21.656</td>    </tr>    <tr>      <th>2015Q1</th>      <td>14.067</td>    </tr>    <tr>      <th>2015Q2</th>      <td>17.351</td>    </tr>    <tr>      <th>2015Q3</th>      <td>17.316</td>    </tr>    <tr>      <th>2015Q4</th>      <td>18.937</td>    </tr>  </tbody></table><p>60 rows × 1 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QtM[<span class="string">&#x27;M2&#x27;</span>]=Qt.rolling(<span class="number">3</span>).mean(); <span class="comment">#2 阶移动平均 </span></span><br><span class="line">QtM.plot()</span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:xlabel=&#39;YQ&#39;&gt;</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071612165.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QtM[<span class="string">&#x27;M4&#x27;</span>]=Qt.rolling(<span class="number">5</span>).mean(); <span class="comment">#4 阶移动平均 </span></span><br><span class="line"><span class="comment">#QtM</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QtM.plot();</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071613933.png" alt="png"></p><p>（3）加权移动平均法</p><p>8.2.2.2 指数平滑预测法 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QtE=pd.DataFrame(Qt); </span><br><span class="line">QtE[<span class="string">&#x27;E03&#x27;</span>]=Qt.ewm(alpha=<span class="number">0.3</span>).mean(); <span class="comment">#平滑系数=0.3 </span></span><br><span class="line">QtE.plot()</span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:xlabel=&#39;YQ&#39;&gt;</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071613693.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">QtE[<span class="string">&#x27;E08&#x27;</span>]=Qt.ewm(alpha=<span class="number">0.8</span>).mean(); <span class="comment">#平滑系数=0.8 </span></span><br><span class="line">QtE.plot()</span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:xlabel=&#39;YQ&#39;&gt;</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071613963.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QtE.plot();</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071613756.png" alt="png"></p><h2 id="8-3-时间序列数据的可视化分析"><a href="#8-3-时间序列数据的可视化分析" class="headerlink" title="8.3  时间序列数据的可视化分析"></a>8.3  时间序列数据的可视化分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">stock=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;Stock&#x27;</span>,index_col=<span class="number">0</span>); </span><br><span class="line">stock.info()</span><br></pre></td></tr></table></figure><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;DatetimeIndex: 3180 entries, 2005-01-03 to 2017-12-29Data columns (total 6 columns): #   Column    Non-Null Count  Dtype  ---  ------    --------------  -----   0   Open      3165 non-null   float64 1   High      3165 non-null   float64 2   Low       3165 non-null   float64 3   Close     3165 non-null   float64 4   Volume    3165 non-null   float64 5   Adjusted  3165 non-null   float64dtypes: float64(6)memory usage: 173.9 KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adjusted</th>    </tr>    <tr>      <th>date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2005-01-03</th>      <td>0.7025</td>      <td>0.7173</td>      <td>0.7025</td>      <td>0.7130</td>      <td>0.0000e+00</td>      <td>0.6185</td>    </tr>    <tr>      <th>2005-01-04</th>      <td>0.7099</td>      <td>0.7215</td>      <td>0.6941</td>      <td>0.6960</td>      <td>1.0959e+07</td>      <td>0.6038</td>    </tr>    <tr>      <th>2005-01-05</th>      <td>0.6951</td>      <td>0.7082</td>      <td>0.6951</td>      <td>0.7053</td>      <td>6.1651e+06</td>      <td>0.6118</td>    </tr>    <tr>      <th>2005-01-06</th>      <td>0.7023</td>      <td>0.7065</td>      <td>0.6961</td>      <td>0.6968</td>      <td>9.8460e+06</td>      <td>0.6044</td>    </tr>    <tr>      <th>2005-01-07</th>      <td>0.6960</td>      <td>0.7096</td>      <td>0.6946</td>      <td>0.7020</td>      <td>1.3667e+07</td>      <td>0.6090</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2017-12-25</th>      <td>12.7300</td>      <td>12.7400</td>      <td>12.2500</td>      <td>12.3800</td>      <td>6.5682e+07</td>      <td>12.3800</td>    </tr>    <tr>      <th>2017-12-26</th>      <td>12.4600</td>      <td>12.5400</td>      <td>12.3700</td>      <td>12.5200</td>      <td>3.0913e+07</td>      <td>12.5200</td>    </tr>    <tr>      <th>2017-12-27</th>      <td>12.5400</td>      <td>12.5700</td>      <td>12.1000</td>      <td>12.1800</td>      <td>5.3813e+07</td>      <td>12.1800</td>    </tr>    <tr>      <th>2017-12-28</th>      <td>12.2000</td>      <td>12.2800</td>      <td>12.0600</td>      <td>12.1800</td>      <td>3.3693e+07</td>      <td>12.1800</td>    </tr>    <tr>      <th>2017-12-29</th>      <td>12.1800</td>      <td>12.3300</td>      <td>12.1400</td>      <td>12.2900</td>      <td>2.5372e+07</td>      <td>12.2900</td>    </tr>  </tbody></table><p>3180 rows × 6 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stock=stock.dropna() <span class="comment">#由于数据中有 15 个缺失值，故须删除缺失数据 NA </span></span><br><span class="line">stock<span class="comment">#.info()</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adjusted</th>    </tr>    <tr>      <th>date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2005-01-03</th>      <td>0.7025</td>      <td>0.7173</td>      <td>0.7025</td>      <td>0.7130</td>      <td>0.0000e+00</td>      <td>0.6185</td>    </tr>    <tr>      <th>2005-01-04</th>      <td>0.7099</td>      <td>0.7215</td>      <td>0.6941</td>      <td>0.6960</td>      <td>1.0959e+07</td>      <td>0.6038</td>    </tr>    <tr>      <th>2005-01-05</th>      <td>0.6951</td>      <td>0.7082</td>      <td>0.6951</td>      <td>0.7053</td>      <td>6.1651e+06</td>      <td>0.6118</td>    </tr>    <tr>      <th>2005-01-06</th>      <td>0.7023</td>      <td>0.7065</td>      <td>0.6961</td>      <td>0.6968</td>      <td>9.8460e+06</td>      <td>0.6044</td>    </tr>    <tr>      <th>2005-01-07</th>      <td>0.6960</td>      <td>0.7096</td>      <td>0.6946</td>      <td>0.7020</td>      <td>1.3667e+07</td>      <td>0.6090</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2017-12-25</th>      <td>12.7300</td>      <td>12.7400</td>      <td>12.2500</td>      <td>12.3800</td>      <td>6.5682e+07</td>      <td>12.3800</td>    </tr>    <tr>      <th>2017-12-26</th>      <td>12.4600</td>      <td>12.5400</td>      <td>12.3700</td>      <td>12.5200</td>      <td>3.0913e+07</td>      <td>12.5200</td>    </tr>    <tr>      <th>2017-12-27</th>      <td>12.5400</td>      <td>12.5700</td>      <td>12.1000</td>      <td>12.1800</td>      <td>5.3813e+07</td>      <td>12.1800</td>    </tr>    <tr>      <th>2017-12-28</th>      <td>12.2000</td>      <td>12.2800</td>      <td>12.0600</td>      <td>12.1800</td>      <td>3.3693e+07</td>      <td>12.1800</td>    </tr>    <tr>      <th>2017-12-29</th>      <td>12.1800</td>      <td>12.3300</td>      <td>12.1400</td>      <td>12.2900</td>      <td>2.5372e+07</td>      <td>12.2900</td>    </tr>  </tbody></table><p>3165 rows × 6 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock.describe().<span class="built_in">round</span>(<span class="number">2</span>)  <span class="comment">#round(stock.describe(),3) </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adjusted</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>3165.00</td>      <td>3165.00</td>      <td>3165.00</td>      <td>3165.00</td>      <td>3.1650e+03</td>      <td>3165.00</td>    </tr>    <tr>      <th>mean</th>      <td>9.22</td>      <td>9.42</td>      <td>9.05</td>      <td>9.23</td>      <td>7.1767e+07</td>      <td>8.91</td>    </tr>    <tr>      <th>std</th>      <td>4.22</td>      <td>4.31</td>      <td>4.12</td>      <td>4.22</td>      <td>9.3363e+07</td>      <td>4.10</td>    </tr>    <tr>      <th>min</th>      <td>0.70</td>      <td>0.71</td>      <td>0.68</td>      <td>0.70</td>      <td>0.0000e+00</td>      <td>0.60</td>    </tr>    <tr>      <th>25%</th>      <td>6.73</td>      <td>6.89</td>      <td>6.63</td>      <td>6.75</td>      <td>2.2869e+07</td>      <td>6.55</td>    </tr>    <tr>      <th>50%</th>      <td>10.34</td>      <td>10.54</td>      <td>10.15</td>      <td>10.35</td>      <td>4.0174e+07</td>      <td>9.96</td>    </tr>    <tr>      <th>75%</th>      <td>12.03</td>      <td>12.28</td>      <td>11.86</td>      <td>12.05</td>      <td>7.7414e+07</td>      <td>11.67</td>    </tr>    <tr>      <th>max</th>      <td>22.28</td>      <td>23.54</td>      <td>21.75</td>      <td>22.80</td>      <td>8.5600e+08</td>      <td>22.52</td>    </tr>  </tbody></table></div><h3 id="8-3-1-股票数据可视化分析"><a href="#8-3-1-股票数据可视化分析" class="headerlink" title="8.3.1 股票数据可视化分析"></a>8.3.1 股票数据可视化分析</h3><p>8.3.1.1 股票数据的选取与图示 </p><p>（1）数据选取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock[[<span class="string">&#x27;Close&#x27;</span>,<span class="string">&#x27;Volume&#x27;</span>]]      <span class="comment">#收盘价与成交量数据</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Close</th>      <th>Volume</th>    </tr>    <tr>      <th>date</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2005-01-03</th>      <td>0.7130</td>      <td>0.0000e+00</td>    </tr>    <tr>      <th>2005-01-04</th>      <td>0.6960</td>      <td>1.0959e+07</td>    </tr>    <tr>      <th>2005-01-05</th>      <td>0.7053</td>      <td>6.1651e+06</td>    </tr>    <tr>      <th>2005-01-06</th>      <td>0.6968</td>      <td>9.8460e+06</td>    </tr>    <tr>      <th>2005-01-07</th>      <td>0.7020</td>      <td>1.3667e+07</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2017-12-25</th>      <td>12.3800</td>      <td>6.5682e+07</td>    </tr>    <tr>      <th>2017-12-26</th>      <td>12.5200</td>      <td>3.0913e+07</td>    </tr>    <tr>      <th>2017-12-27</th>      <td>12.1800</td>      <td>5.3813e+07</td>    </tr>    <tr>      <th>2017-12-28</th>      <td>12.1800</td>      <td>3.3693e+07</td>    </tr>    <tr>      <th>2017-12-29</th>      <td>12.2900</td>      <td>2.5372e+07</td>    </tr>  </tbody></table><p>3165 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock[<span class="string">&#x27;2015&#x27;</span>][<span class="string">&#x27;Close&#x27;</span>]         <span class="comment">#年度收盘价数据</span></span><br></pre></td></tr></table></figure><pre><code>date2015-01-05     9.362015-01-06     9.482015-01-07     9.342015-01-08     9.532015-01-09     9.37              ...  2015-12-25    14.002015-12-28    13.512015-12-29    13.682015-12-30    13.752015-12-31    13.45Name: Close, Length: 244, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stock[<span class="string">&#x27;2017-12&#x27;</span>][<span class="string">&#x27;Close&#x27;</span>]      <span class="comment">#月度价格</span></span><br><span class="line"><span class="comment">#plt.plot(df.index,df.values);  #stock[&#x27;2015&#x27;][&#x27;Close&#x27;].plot();  </span></span><br></pre></td></tr></table></figure><pre><code>date2017-12-01    12.012017-12-04    12.052017-12-05    11.882017-12-06    12.332017-12-07    12.21              ...  2017-12-25    12.382017-12-26    12.522017-12-27    12.182017-12-28    12.182017-12-29    12.29Name: Close, Length: 21, dtype: float64</code></pre><p>（2）价格趋势图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock[<span class="string">&#x27;Close&#x27;</span>].plot();  <span class="comment">#收盘价数据框图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071613189.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">YC=stock[<span class="string">&#x27;2015&#x27;</span>][<span class="string">&#x27;Close&#x27;</span>];            <span class="comment">#年度收盘价数据</span></span><br><span class="line">YC.index=YC.index.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>);  <span class="comment">#将横坐标设置为年-月格式</span></span><br><span class="line">YC.plot();</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611564.png" alt="png"><br>​    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stock[<span class="string">&#x27;Volume&#x27;</span>].hist();  <span class="comment">#成交量分布情况 </span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611630.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CV=stock[[<span class="string">&#x27;Close&#x27;</span>,<span class="string">&#x27;Volume&#x27;</span>]];CV.plot()         <span class="comment">#收盘价和成交量数据</span></span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:xlabel=&#39;date&#39;&gt;</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071613849.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CV.index=CV.index.strftime(<span class="string">&#x27;%Y&#x27;</span>);     <span class="comment">#将横坐标设置为年格式</span></span><br><span class="line">CV.plot(secondary_y=<span class="string">&#x27;Volume&#x27;</span>);        <span class="comment">#右坐标轴绘制成交量 </span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611841.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">YCV=stock[<span class="string">&#x27;2015&#x27;</span>][[<span class="string">&#x27;Close&#x27;</span>,<span class="string">&#x27;Volume&#x27;</span>]]     <span class="comment">#年度收盘价和成交量数据</span></span><br><span class="line">YCV.index=YCV.index.strftime(<span class="string">&#x27;%Y-%m&#x27;</span>); <span class="comment">#将横坐标设置为年-月-日格式</span></span><br><span class="line">YCV.plot(secondary_y=<span class="string">&#x27;Volume&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611848.png" alt="png"></p><p>8.3.1.2  股票数据的趋势图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SC=stock[<span class="string">&#x27;2015&#x27;</span>][<span class="string">&#x27;Close&#x27;</span>]; SC           <span class="comment">#2015年收盘价数据  </span></span><br></pre></td></tr></table></figure><pre><code>date2015-01-05     9.362015-01-06     9.482015-01-07     9.342015-01-08     9.532015-01-09     9.37              ...  2015-12-25    14.002015-12-28    13.512015-12-29    13.682015-12-30    13.752015-12-31    13.45Name: Close, Length: 244, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SCM=pd.DataFrame(SC);SCM                <span class="comment">#构建数据框</span></span><br><span class="line">SCM[<span class="string">&#x27;MA5&#x27;</span>]=SC.rolling(<span class="number">6</span>).mean();        <span class="comment">#5日移动平均 </span></span><br><span class="line">SCM[<span class="string">&#x27;MA20&#x27;</span>]=SC.rolling(<span class="number">21</span>).mean();      <span class="comment">#20日移动平均 </span></span><br><span class="line">SCM[<span class="string">&#x27;MA60&#x27;</span>]=SC.rolling(<span class="number">61</span>).mean();      <span class="comment">#60日移动平均</span></span><br><span class="line">SCM.index=SCM.index.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>);  <span class="comment">#设定时间轴：月-天</span></span><br><span class="line">SCM.plot(figsize=(<span class="number">10</span>,<span class="number">6</span>),grid=<span class="literal">True</span>); <span class="comment"># 移动平均线 </span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071613677.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SCM.plot(subplots=<span class="literal">False</span>,figsize=(<span class="number">12</span>,<span class="number">7</span>),grid=<span class="literal">True</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071614519.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SCM.plot(subplots=<span class="literal">True</span>,figsize=(<span class="number">12</span>,<span class="number">14</span>),grid=<span class="literal">True</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611895.png" alt="png"></p><p>8.3.1.3  股票数据的K线图</p><blockquote><ul><li><a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li><a href="https://blog.csdn.net/qq_41437512/article/details/105319421">https://blog.csdn.net/qq_41437512/article/details/105319421</a></li></ul></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!pip install mplfinance --upgrade </span></span><br></pre></td></tr></table></figure><p>（1）分析用数据框构建</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OHLCV=stock[<span class="string">&#x27;2015-10&#x27;</span>:<span class="string">&#x27;2015-12&#x27;</span>][[<span class="string">&#x27;Open&#x27;</span>,<span class="string">&#x27;High&#x27;</span>,<span class="string">&#x27;Low&#x27;</span>,<span class="string">&#x27;Close&#x27;</span>,<span class="string">&#x27;Volume&#x27;</span>]];OHLCV</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>    </tr>    <tr>      <th>date</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2015-10-08</th>      <td>12.12</td>      <td>12.94</td>      <td>12.12</td>      <td>12.70</td>      <td>2.0044e+08</td>    </tr>    <tr>      <th>2015-10-09</th>      <td>12.72</td>      <td>13.32</td>      <td>12.61</td>      <td>13.05</td>      <td>2.1790e+08</td>    </tr>    <tr>      <th>2015-10-12</th>      <td>13.10</td>      <td>14.18</td>      <td>13.03</td>      <td>13.90</td>      <td>3.4242e+08</td>    </tr>    <tr>      <th>2015-10-13</th>      <td>13.71</td>      <td>13.93</td>      <td>13.62</td>      <td>13.85</td>      <td>1.9723e+08</td>    </tr>    <tr>      <th>2015-10-14</th>      <td>13.75</td>      <td>14.47</td>      <td>13.74</td>      <td>14.00</td>      <td>3.0091e+08</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2015-12-25</th>      <td>14.00</td>      <td>14.00</td>      <td>14.00</td>      <td>14.00</td>      <td>0.0000e+00</td>    </tr>    <tr>      <th>2015-12-28</th>      <td>13.92</td>      <td>14.00</td>      <td>13.50</td>      <td>13.51</td>      <td>1.1940e+08</td>    </tr>    <tr>      <th>2015-12-29</th>      <td>13.50</td>      <td>13.76</td>      <td>13.38</td>      <td>13.68</td>      <td>7.9428e+07</td>    </tr>    <tr>      <th>2015-12-30</th>      <td>13.69</td>      <td>13.87</td>      <td>13.64</td>      <td>13.75</td>      <td>6.3783e+07</td>    </tr>    <tr>      <th>2015-12-31</th>      <td>13.79</td>      <td>13.79</td>      <td>13.35</td>      <td>13.45</td>      <td>6.9984e+07</td>    </tr>  </tbody></table><p>61 rows × 5 columns</p></div><p>（2）K线图的绘制</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> mplfinance <span class="keyword">as</span> mpf         <span class="comment">#加载matplotlib的金融分析模块</span></span><br><span class="line">mpf.plot(OHLCV,<span class="built_in">type</span>=<span class="string">&#x27;ohlc&#x27;</span>);     <span class="comment">#ohlc图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611048.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpf.plot(OHLCV,<span class="built_in">type</span>=<span class="string">&#x27;candle&#x27;</span>);   <span class="comment">#candle图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071614180.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpf.plot(OHLCV,<span class="built_in">type</span>=<span class="string">&#x27;candle&#x27;</span>,volume=<span class="literal">True</span>) <span class="comment">#价格candle图及成交量直方图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611442.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mpf.plot(OHLCV,<span class="built_in">type</span>=<span class="string">&#x27;candle&#x27;</span>,volume=<span class="literal">True</span>,mav=(<span class="number">3</span>,<span class="number">6</span>)) <span class="comment">#增加3与6日移动平均线</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611683.png" alt="png"></p><h3 id="8-3-2-股票收益率分析"><a href="#8-3-2-股票收益率分析" class="headerlink" title="8.3.2 股票收益率分析"></a>8.3.2 股票收益率分析</h3><p>8.3.2.1  日收益率的计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Return</span>(<span class="params">Yt</span>):</span>           <span class="comment">#计算收益率函数</span></span><br><span class="line">    Rt=Yt/Yt.shift(<span class="number">1</span>)-<span class="number">1</span>   <span class="comment">#Yt_1=Yt.shift(1)</span></span><br><span class="line">    <span class="keyword">return</span>(Rt)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SA=stock[<span class="string">&#x27;2015&#x27;</span>][<span class="string">&#x27;Adjusted&#x27;</span>]; SA[:<span class="number">10</span>]  <span class="comment">#2015年调整收盘价</span></span><br><span class="line">SA_R=Return(SA); SA_R.plot()</span><br></pre></td></tr></table></figure><pre><code>&lt;AxesSubplot:xlabel=&#39;date&#39;&gt;</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071614879.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SA_R.index=SA_R.index.strftime(<span class="string">&#x27;%m-%d&#x27;</span>);  <span class="comment">#设定时间轴：月-天</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;axes.unicode_minus&#x27;</span>]=<span class="literal">False</span>; <span class="comment">#正常显示图中正负号</span></span><br><span class="line">plt.stem(SA_R);  <span class="comment">#SA_R.plot(x=SA_R.index).axhline(y=0);</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071614631.png" alt="png"></p><p>8.3.2.2 年度收益率计算 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YR=pd.DataFrame(&#123;<span class="string">&#x27;Year&#x27;</span>:stock.index.year,<span class="string">&#x27;Adjusted&#x27;</span>:</span><br><span class="line">                 Return(stock[<span class="string">&#x27;Adjusted&#x27;</span>])&#125;);YR</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Year</th>      <th>Adjusted</th>    </tr>    <tr>      <th>date</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2005-01-03</th>      <td>2005</td>      <td>NaN</td>    </tr>    <tr>      <th>2005-01-04</th>      <td>2005</td>      <td>-0.0238</td>    </tr>    <tr>      <th>2005-01-05</th>      <td>2005</td>      <td>0.0133</td>    </tr>    <tr>      <th>2005-01-06</th>      <td>2005</td>      <td>-0.0120</td>    </tr>    <tr>      <th>2005-01-07</th>      <td>2005</td>      <td>0.0075</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2017-12-25</th>      <td>2017</td>      <td>-0.0290</td>    </tr>    <tr>      <th>2017-12-26</th>      <td>2017</td>      <td>0.0113</td>    </tr>    <tr>      <th>2017-12-27</th>      <td>2017</td>      <td>-0.0272</td>    </tr>    <tr>      <th>2017-12-28</th>      <td>2017</td>      <td>0.0000</td>    </tr>    <tr>      <th>2017-12-29</th>      <td>2017</td>      <td>0.0090</td>    </tr>  </tbody></table><p>3165 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YRm=YR.groupby([<span class="string">&#x27;Year&#x27;</span>]).mean();YRm   <span class="comment">#年度平均收益率</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Adjusted</th>    </tr>    <tr>      <th>Year</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2005</th>      <td>0.0023</td>    </tr>    <tr>      <th>2006</th>      <td>0.0069</td>    </tr>    <tr>      <th>2007</th>      <td>0.0054</td>    </tr>    <tr>      <th>2008</th>      <td>-0.0021</td>    </tr>    <tr>      <th>2009</th>      <td>0.0027</td>    </tr>    <tr>      <th>...</th>      <td>...</td>    </tr>    <tr>      <th>2013</th>      <td>0.0019</td>    </tr>    <tr>      <th>2014</th>      <td>0.0003</td>    </tr>    <tr>      <th>2015</th>      <td>0.0027</td>    </tr>    <tr>      <th>2016</th>      <td>-0.0004</td>    </tr>    <tr>      <th>2017</th>      <td>0.0005</td>    </tr>  </tbody></table><p>13 rows × 1 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YRm.plot(kind=<span class="string">&#x27;bar&#x27;</span>).axhline(y=<span class="number">0</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611263.png" alt="png"></p><p>8.3.2.3 月度收益率计算 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YMR=pd.DataFrame(&#123;<span class="string">&#x27;Year&#x27;</span>:stock.index.year,<span class="string">&#x27;Month&#x27;</span>:stock.index.month,</span><br><span class="line">                  <span class="string">&#x27;Adjusted&#x27;</span>:Return(stock[<span class="string">&#x27;Adjusted&#x27;</span>])&#125;); YMR </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Year</th>      <th>Month</th>      <th>Adjusted</th>    </tr>    <tr>      <th>date</th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2005-01-03</th>      <td>2005</td>      <td>1</td>      <td>NaN</td>    </tr>    <tr>      <th>2005-01-04</th>      <td>2005</td>      <td>1</td>      <td>-0.0238</td>    </tr>    <tr>      <th>2005-01-05</th>      <td>2005</td>      <td>1</td>      <td>0.0133</td>    </tr>    <tr>      <th>2005-01-06</th>      <td>2005</td>      <td>1</td>      <td>-0.0120</td>    </tr>    <tr>      <th>2005-01-07</th>      <td>2005</td>      <td>1</td>      <td>0.0075</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2017-12-25</th>      <td>2017</td>      <td>12</td>      <td>-0.0290</td>    </tr>    <tr>      <th>2017-12-26</th>      <td>2017</td>      <td>12</td>      <td>0.0113</td>    </tr>    <tr>      <th>2017-12-27</th>      <td>2017</td>      <td>12</td>      <td>-0.0272</td>    </tr>    <tr>      <th>2017-12-28</th>      <td>2017</td>      <td>12</td>      <td>0.0000</td>    </tr>    <tr>      <th>2017-12-29</th>      <td>2017</td>      <td>12</td>      <td>0.0090</td>    </tr>  </tbody></table><p>3165 rows × 3 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YMRm=YMR.groupby([<span class="string">&#x27;Year&#x27;</span>,<span class="string">&#x27;Month&#x27;</span>]).mean(); YMRm  <span class="comment">#按年度和月度计算平均收益率</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>Adjusted</th>    </tr>    <tr>      <th>Year</th>      <th>Month</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="5" valign="top">2005</th>      <th>1</th>      <td>0.0028</td>    </tr>    <tr>      <th>2</th>      <td>0.0030</td>    </tr>    <tr>      <th>3</th>      <td>0.0066</td>    </tr>    <tr>      <th>4</th>      <td>0.0060</td>    </tr>    <tr>      <th>5</th>      <td>-0.0039</td>    </tr>    <tr>      <th>...</th>      <th>...</th>      <td>...</td>    </tr>    <tr>      <th rowspan="5" valign="top">2017</th>      <th>8</th>      <td>0.0002</td>    </tr>    <tr>      <th>9</th>      <td>0.0048</td>    </tr>    <tr>      <th>10</th>      <td>0.0060</td>    </tr>    <tr>      <th>11</th>      <td>-0.0084</td>    </tr>    <tr>      <th>12</th>      <td>0.0016</td>    </tr>  </tbody></table><p>156 rows × 1 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YMRm.unstack().<span class="built_in">round</span>(<span class="number">4</span>)   <span class="comment">#结果重排</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead tr th &#123;    text-align: left;&#125;.dataframe thead tr:last-of-type th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th colspan="12" halign="left">Adjusted</th>    </tr>    <tr>      <th>Month</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>      <th>5</th>      <th>6</th>      <th>7</th>      <th>8</th>      <th>9</th>      <th>10</th>      <th>11</th>      <th>12</th>    </tr>    <tr>      <th>Year</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>2005</th>      <td>0.0028</td>      <td>0.0030</td>      <td>0.0066</td>      <td>0.0060</td>      <td>-0.0039</td>      <td>0.0061</td>      <td>0.0035</td>      <td>-0.0074</td>      <td>0.0067</td>      <td>-0.0010</td>      <td>-0.0015</td>      <td>0.0070</td>    </tr>    <tr>      <th>2006</th>      <td>-0.0018</td>      <td>0.0125</td>      <td>0.0104</td>      <td>0.0075</td>      <td>0.0194</td>      <td>0.0045</td>      <td>-0.0038</td>      <td>0.0022</td>      <td>0.0031</td>      <td>-0.0022</td>      <td>0.0161</td>      <td>0.0131</td>    </tr>    <tr>      <th>2007</th>      <td>0.0208</td>      <td>-0.0101</td>      <td>0.0058</td>      <td>0.0099</td>      <td>0.0147</td>      <td>-0.0033</td>      <td>0.0054</td>      <td>0.0137</td>      <td>-0.0012</td>      <td>-0.0000</td>      <td>-0.0077</td>      <td>0.0124</td>    </tr>    <tr>      <th>2008</th>      <td>-0.0074</td>      <td>0.0055</td>      <td>-0.0072</td>      <td>0.0011</td>      <td>-0.0035</td>      <td>-0.0102</td>      <td>0.0046</td>      <td>-0.0051</td>      <td>-0.0061</td>      <td>-0.0115</td>      <td>0.0159</td>      <td>-0.0003</td>    </tr>    <tr>      <th>2009</th>      <td>-0.0083</td>      <td>0.0018</td>      <td>0.0056</td>      <td>0.0111</td>      <td>-0.0012</td>      <td>0.0048</td>      <td>-0.0014</td>      <td>-0.0045</td>      <td>0.0077</td>      <td>-0.0007</td>      <td>0.0086</td>      <td>0.0041</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>2013</th>      <td>0.0037</td>      <td>-0.0046</td>      <td>-0.0016</td>      <td>-0.0044</td>      <td>0.0034</td>      <td>-0.0128</td>      <td>0.0058</td>      <td>0.0165</td>      <td>0.0265</td>      <td>-0.0088</td>      <td>0.0019</td>      <td>-0.0082</td>    </tr>    <tr>      <th>2014</th>      <td>0.0069</td>      <td>-0.0060</td>      <td>-0.0131</td>      <td>-0.0044</td>      <td>0.0046</td>      <td>-0.0025</td>      <td>0.0034</td>      <td>0.0026</td>      <td>0.0073</td>      <td>-0.0019</td>      <td>0.0011</td>      <td>0.0037</td>    </tr>    <tr>      <th>2015</th>      <td>0.0093</td>      <td>0.0065</td>      <td>0.0056</td>      <td>0.0005</td>      <td>0.0192</td>      <td>-0.0077</td>      <td>-0.0026</td>      <td>0.0042</td>      <td>-0.0073</td>      <td>0.0183</td>      <td>-0.0076</td>      <td>-0.0007</td>    </tr>    <tr>      <th>2016</th>      <td>-0.0106</td>      <td>-0.0016</td>      <td>0.0050</td>      <td>-0.0011</td>      <td>-0.0002</td>      <td>-0.0005</td>      <td>-0.0013</td>      <td>0.0023</td>      <td>-0.0011</td>      <td>0.0021</td>      <td>0.0019</td>      <td>-0.0007</td>    </tr>    <tr>      <th>2017</th>      <td>-0.0018</td>      <td>0.0013</td>      <td>-0.0021</td>      <td>-0.0036</td>      <td>0.0025</td>      <td>0.0031</td>      <td>0.0030</td>      <td>0.0002</td>      <td>0.0048</td>      <td>0.0060</td>      <td>-0.0084</td>      <td>0.0016</td>    </tr>  </tbody></table><p>13 rows × 12 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YMRm.plot().axhline(y=<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071611380.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MRm=YMR[<span class="string">&#x27;2005&#x27;</span>].groupby([<span class="string">&#x27;Month&#x27;</span>]).mean();MRm  <span class="comment">#2005年每月平均收益率</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Year</th>      <th>Adjusted</th>    </tr>    <tr>      <th>Month</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>2005.0</td>      <td>0.0028</td>    </tr>    <tr>      <th>2</th>      <td>2005.0</td>      <td>0.0030</td>    </tr>    <tr>      <th>3</th>      <td>2005.0</td>      <td>0.0066</td>    </tr>    <tr>      <th>4</th>      <td>2005.0</td>      <td>0.0060</td>    </tr>    <tr>      <th>5</th>      <td>2005.0</td>      <td>-0.0039</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>8</th>      <td>2005.0</td>      <td>-0.0074</td>    </tr>    <tr>      <th>9</th>      <td>2005.0</td>      <td>0.0067</td>    </tr>    <tr>      <th>10</th>      <td>2005.0</td>      <td>-0.0010</td>    </tr>    <tr>      <th>11</th>      <td>2005.0</td>      <td>-0.0015</td>    </tr>    <tr>      <th>12</th>      <td>2005.0</td>      <td>0.0070</td>    </tr>  </tbody></table><p>12 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MRm[<span class="string">&#x27;Adjusted&#x27;</span>].plot(kind=<span class="string">&#x27;bar&#x27;</span>).axhline(y=<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071614031.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams.update(plt.rcParamsDefault) <span class="comment">#恢复matplotlib原来的显示模式</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第8章-数据的预测分析及可视化&quot;&gt;&lt;a href=&quot;#第8章-数据的预测分析及可视化&quot; class=&quot;headerlink&quot; title=&quot;第8章 数据的预测分析及可视化&quot;&gt;&lt;/a&gt;第8章 数据的预测分析及可视化&lt;/h1&gt;&lt;h2 id=&quot;8-1-动态数列的基本分析</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>第7章-数据的模型分析</title>
    <link href="https://zhangkh.top/36060a3b.html"/>
    <id>https://zhangkh.top/36060a3b.html</id>
    <published>2021-12-07T08:04:32.000Z</published>
    <updated>2021-12-07T08:24:24.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第7章-数据的模型分析及可视化"><a href="#第7章-数据的模型分析及可视化" class="headerlink" title="第7章 数据的模型分析及可视化"></a>第7章 数据的模型分析及可视化</h1><h2 id="7-1-线性相关分析模型"><a href="#7-1-线性相关分析模型" class="headerlink" title="7.1 线性相关分析模型"></a>7.1 线性相关分析模型</h2><h3 id="7-1-1-线性相关的概念和模拟"><a href="#7-1-1-线性相关的概念和模拟" class="headerlink" title="7.1.1  线性相关的概念和模拟"></a>7.1.1  线性相关的概念和模拟</h3><p>7.1.1.1 线性相关的概念</p><p>7.1.1.2 线性相关的模拟</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">np.set_printoptions(precision=<span class="number">4</span>)             <span class="comment">#设置numpy输出精度</span></span><br><span class="line">x=np.linspace(-<span class="number">4</span>,<span class="number">4</span>,<span class="number">20</span>)            <span class="comment">#构建[-4,4]上 x 的数据向量 </span></span><br><span class="line">x</span><br></pre></td></tr></table></figure><pre><code>array([-4.    , -3.5789, -3.1579, -2.7368, -2.3158, -1.8947, -1.4737,       -1.0526, -0.6316, -0.2105,  0.2105,  0.6316,  1.0526,  1.4737,        1.8947,  2.3158,  2.7368,  3.1579,  3.5789,  4.    ])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">1</span>)                 <span class="comment">#设置随机种子数以便重复结果</span></span><br><span class="line">e=np.random.randn(<span class="number">20</span>)             <span class="comment">#随机误差数据向量 e~N(0,1)</span></span><br><span class="line">e</span><br></pre></td></tr></table></figure><pre><code>array([ 1.6243, -0.6118, -0.5282, -1.073 ,  0.8654, -2.3015,  1.7448,       -0.7612,  0.319 , -0.2494,  1.4621, -2.0601, -0.3224, -0.3841,        1.1338, -1.0999, -0.1724, -0.8779,  0.0422,  0.5828])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line">y1=x; plt.plot(x,y1,<span class="string">&#x27;o&#x27;</span>);         <span class="comment">#完全正相关 y=x</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071606077.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y2=-x; plt.plot(x,y2,<span class="string">&#x27;o&#x27;</span>);        <span class="comment">#完全负相关 y=-x</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071606216.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y3=x+e; plt.plot(x,y3,<span class="string">&#x27;o&#x27;</span>);       <span class="comment">#正相关 y=x+e</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071606554.png" alt="png"><br>​    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y4=-x+e; plt.plot(x,y4,<span class="string">&#x27;o&#x27;</span>);      <span class="comment">#负相关 y=-x+e</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071606005.png" alt="png"></p><h3 id="7-1-2-相关系数的计算"><a href="#7-1-2-相关系数的计算" class="headerlink" title="7.1.2 相关系数的计算"></a>7.1.2 相关系数的计算</h3><p>7.1.2.1 相关系数的计算公式</p><p>7.1.2.2 相关系数的直观分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fig,ax=plt.subplots(<span class="number">2</span>,<span class="number">2</span>,figsize=(<span class="number">10</span>,<span class="number">8</span>)) <span class="comment">#将上述四个图放到一页上</span></span><br><span class="line">ax[<span class="number">0</span>,<span class="number">0</span>].plot(x,y1,<span class="string">&#x27;o&#x27;</span>); ax[<span class="number">0</span>,<span class="number">1</span>].plot(x,y2,<span class="string">&#x27;o&#x27;</span>)     </span><br><span class="line">ax[<span class="number">1</span>,<span class="number">0</span>].plot(x,y3,<span class="string">&#x27;o&#x27;</span>); ax[<span class="number">1</span>,<span class="number">1</span>].plot(x,y4,<span class="string">&#x27;o&#x27;</span>);   </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071606617.png" alt="png"></p><p>7.1.2.3 相关系数的Python计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,y1,<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">np.corrcoef([x,y1])</span><br></pre></td></tr></table></figure><pre><code>array([[1., 1.],       [1., 1.]])</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607526.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,y2,<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">np.corrcoef([x,y2])</span><br></pre></td></tr></table></figure><pre><code>array([[ 1., -1.],       [-1.,  1.]])</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607488.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,y3,<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">np.corrcoef([x,y3])[<span class="number">0</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><pre><code>0.907917278678589</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607545.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,y4,<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">np.corrcoef(x,y4)[<span class="number">0</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><pre><code>-0.9140292045707705</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607196.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.corrcoef([x,y1,y2,y3,y4])  </span><br></pre></td></tr></table></figure><pre><code>array([[ 1.    ,  1.    , -1.    ,  0.9079, -0.914 ],       [ 1.    ,  1.    , -1.    ,  0.9079, -0.914 ],       [-1.    , -1.    ,  1.    , -0.9079,  0.914 ],       [ 0.9079,  0.9079, -0.9079,  1.    , -0.6598],       [-0.914 , -0.914 ,  0.914 , -0.6598,  1.    ]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd   <span class="comment">#构建模拟数据的数据框</span></span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_rows&#x27;</span>, <span class="number">10</span>)</span><br><span class="line">xy=pd.DataFrame(&#123;<span class="string">&#x27;x&#x27;</span>:x,<span class="string">&#x27;y1&#x27;</span>:y1,<span class="string">&#x27;y2&#x27;</span>:y2,<span class="string">&#x27;y3&#x27;</span>:y3,<span class="string">&#x27;y4&#x27;</span>:y4&#125;);xy</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>x</th>      <th>y1</th>      <th>y2</th>      <th>y3</th>      <th>y4</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>-4.000000</td>      <td>-4.000000</td>      <td>4.000000</td>      <td>-2.375655</td>      <td>5.624345</td>    </tr>    <tr>      <th>1</th>      <td>-3.578947</td>      <td>-3.578947</td>      <td>3.578947</td>      <td>-4.190704</td>      <td>2.967191</td>    </tr>    <tr>      <th>2</th>      <td>-3.157895</td>      <td>-3.157895</td>      <td>3.157895</td>      <td>-3.686066</td>      <td>2.629723</td>    </tr>    <tr>      <th>3</th>      <td>-2.736842</td>      <td>-2.736842</td>      <td>2.736842</td>      <td>-3.809811</td>      <td>1.663873</td>    </tr>    <tr>      <th>4</th>      <td>-2.315789</td>      <td>-2.315789</td>      <td>2.315789</td>      <td>-1.450382</td>      <td>3.181197</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>15</th>      <td>2.315789</td>      <td>2.315789</td>      <td>-2.315789</td>      <td>1.215898</td>      <td>-3.415681</td>    </tr>    <tr>      <th>16</th>      <td>2.736842</td>      <td>2.736842</td>      <td>-2.736842</td>      <td>2.564414</td>      <td>-2.909270</td>    </tr>    <tr>      <th>17</th>      <td>3.157895</td>      <td>3.157895</td>      <td>-3.157895</td>      <td>2.280036</td>      <td>-4.035753</td>    </tr>    <tr>      <th>18</th>      <td>3.578947</td>      <td>3.578947</td>      <td>-3.578947</td>      <td>3.621161</td>      <td>-3.536734</td>    </tr>    <tr>      <th>19</th>      <td>4.000000</td>      <td>4.000000</td>      <td>-4.000000</td>      <td>4.582815</td>      <td>-3.417185</td>    </tr>  </tbody></table><p>20 rows × 5 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xy.corrwith(xy.x)</span><br></pre></td></tr></table></figure><pre><code>x     1.000000y1    1.000000y2   -1.000000y3    0.907917y4   -0.914029dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xy.corr()   <span class="comment">#根据数据框计算相关系数矩阵</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>x</th>      <th>y1</th>      <th>y2</th>      <th>y3</th>      <th>y4</th>    </tr>  </thead>  <tbody>    <tr>      <th>x</th>      <td>1.000000</td>      <td>1.000000</td>      <td>-1.000000</td>      <td>0.907917</td>      <td>-0.914029</td>    </tr>    <tr>      <th>y1</th>      <td>1.000000</td>      <td>1.000000</td>      <td>-1.000000</td>      <td>0.907917</td>      <td>-0.914029</td>    </tr>    <tr>      <th>y2</th>      <td>-1.000000</td>      <td>-1.000000</td>      <td>1.000000</td>      <td>-0.907917</td>      <td>0.914029</td>    </tr>    <tr>      <th>y3</th>      <td>0.907917</td>      <td>0.907917</td>      <td>-0.907917</td>      <td>1.000000</td>      <td>-0.659836</td>    </tr>    <tr>      <th>y4</th>      <td>-0.914029</td>      <td>-0.914029</td>      <td>0.914029</td>      <td>-0.659836</td>      <td>1.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.plotting.scatter_matrix(xy,figsize=(<span class="number">9</span>,<span class="number">8</span>)); <span class="comment">#矩阵散点图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607871.png" alt="png"></p><p>下面计算实际数据（通常是定量数据）的线性相关系数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd           <span class="comment">#读取BSdata分析用数据</span></span><br><span class="line">BS=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>)[[<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,<span class="string">&#x27;支出&#x27;</span>]];BS </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>    </tr>    <tr>      <th>1</th>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>    </tr>    <tr>      <th>2</th>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>    </tr>    <tr>      <th>3</th>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>    </tr>    <tr>      <th>4</th>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>47</th>      <td>男</td>      <td>175</td>      <td>68</td>      <td>44.4</td>    </tr>    <tr>      <th>48</th>      <td>女</td>      <td>166</td>      <td>65</td>      <td>5.3</td>    </tr>    <tr>      <th>49</th>      <td>女</td>      <td>159</td>      <td>58</td>      <td>71.4</td>    </tr>    <tr>      <th>50</th>      <td>女</td>      <td>169</td>      <td>73</td>      <td>5.5</td>    </tr>    <tr>      <th>51</th>      <td>女</td>      <td>165</td>      <td>67</td>      <td>56.8</td>    </tr>  </tbody></table><p>52 rows × 4 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(BS[<span class="string">&#x27;身高&#x27;</span>],BS[<span class="string">&#x27;体重&#x27;</span>],<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">BS[<span class="string">&#x27;身高&#x27;</span>].corr(BS[<span class="string">&#x27;体重&#x27;</span>])   <span class="comment">#BS.身高.corr(BS.体重)</span></span><br></pre></td></tr></table></figure><pre><code>0.9118170987010521</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607924.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BS[[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>]].corr()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>    </tr>  </thead>  <tbody>    <tr>      <th>身高</th>      <td>1.000000</td>      <td>0.911817</td>    </tr>    <tr>      <th>体重</th>      <td>0.911817</td>      <td>1.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BS.corr()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>      <th>支出</th>    </tr>  </thead>  <tbody>    <tr>      <th>身高</th>      <td>1.000000</td>      <td>0.911817</td>      <td>0.043881</td>    </tr>    <tr>      <th>体重</th>      <td>0.911817</td>      <td>1.000000</td>      <td>0.042946</td>    </tr>    <tr>      <th>支出</th>      <td>0.043881</td>      <td>0.042946</td>      <td>1.000000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimSun&#x27;</span>];  <span class="comment">#设置中文字体为&#x27;宋体&#x27;</span></span><br><span class="line">pd.plotting.scatter_matrix(BS,figsize=(<span class="number">9</span>,<span class="number">8</span>)); <span class="comment">#矩阵散点图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607682.png" alt="png"></p><p>7.1.3 样本相关系数的检验</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> st <span class="comment">#加载统计分析方法包 </span></span><br><span class="line">st.pearsonr(x,y1)        <span class="comment">#pearson相关及检验 </span></span><br></pre></td></tr></table></figure><pre><code>(1.0, 0.0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st.pearsonr(x,y2) </span><br></pre></td></tr></table></figure><pre><code>(-1.0, 0.0)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st.pearsonr(x,y3) </span><br></pre></td></tr></table></figure><pre><code>(0.907917278678589, 3.2236304802661585e-08)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st.pearsonr(x,y4) </span><br></pre></td></tr></table></figure><pre><code>(-0.9140292045707707, 1.7775582357873907e-08)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(BS[<span class="string">&#x27;身高&#x27;</span>],BS[<span class="string">&#x27;体重&#x27;</span>],<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">st.pearsonr(BS.身高,BS.体重)</span><br></pre></td></tr></table></figure><pre><code>(0.9118170987010525, 5.7473293164451325e-21)</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607925.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(BS[<span class="string">&#x27;身高&#x27;</span>],BS.支出,<span class="string">&#x27;o&#x27;</span>);</span><br><span class="line">st.pearsonr(BS.身高,BS.支出)</span><br></pre></td></tr></table></figure><pre><code>(0.043881130759588965, 0.7574067077940487)</code></pre><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607446.png" alt="png"><br>​    </p><h2 id="7-2-简单线性回归分析模型"><a href="#7-2-简单线性回归分析模型" class="headerlink" title="7.2 简单线性回归分析模型"></a>7.2 简单线性回归分析模型</h2><h3 id="7-2-1-直线回归模型的建立"><a href="#7-2-1-直线回归模型的建立" class="headerlink" title="7.2.1  直线回归模型的建立"></a>7.2.1  直线回归模型的建立</h3><p>7.2.1.1 直线回归模型的概念</p><p>7.2.1.2 直线回归的可视化模拟</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义模拟直线回归函数</span></span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm                  <span class="comment">#加载统计模型包</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reglinedemo</span>(<span class="params">n=<span class="number">20</span></span>):</span>                        <span class="comment">#模拟样本例数</span></span><br><span class="line">    x=np.arange(n)+<span class="number">1</span>                          <span class="comment">#自变量取值</span></span><br><span class="line">    e=np.random.normal(<span class="number">0</span>,<span class="number">1</span>,n)                 <span class="comment">#误差项</span></span><br><span class="line">    y=<span class="number">2</span>+<span class="number">0.5</span>*x+e                               <span class="comment">#因变量值</span></span><br><span class="line">    x1=sm.add_constant(x);x1                  <span class="comment">#加常数项</span></span><br><span class="line">    fm=sm.OLS(y,x1).fit();fm                  <span class="comment">#模型拟合，见下</span></span><br><span class="line">    plt.plot(x,y,<span class="string">&#x27;.&#x27;</span>,x,fm.fittedvalues,<span class="string">&#x27;r-&#x27;</span>); <span class="comment">#添加回归线，红色</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(x)):                   <span class="comment">#画垂直线</span></span><br><span class="line">        plt.vlines(x,y,fm.fittedvalues,linestyles=<span class="string">&#x27;dotted&#x27;</span>,colors=<span class="string">&#x27;b&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">12</span>)</span><br><span class="line">reglinedemo(<span class="number">20</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607874.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">12</span>)</span><br><span class="line">reglinedemo(<span class="number">40</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607447.png" alt="png"></p><p>7.2.1.3 最小二乘估计方法</p><p>（1）散点图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y=BS.体重; x=BS.身高 </span><br><span class="line">plt.plot(x,y,<span class="string">&#x27;o&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607254.png" alt="png"></p><p>（2）模型拟合</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm            <span class="comment">#加载线性回归模型库</span></span><br><span class="line">fm1=sm.OLS(y,sm.add_constant(x)).fit()  <span class="comment">#最小二乘估计，加常数项</span></span><br><span class="line">fm1.params                              <span class="comment">#模型参数的估计值</span></span><br></pre></td></tr></table></figure><pre><code>const   -79.282827身高        0.876949dtype: float64</code></pre><p>（3）回归直线拟合图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yfit=fm1.fittedvalues <span class="comment">#拟合估计值</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x, y,<span class="string">&#x27;.&#x27;</span>,x,yfit, <span class="string">&#x27;r-&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071607678.png" alt="png"></p><h3 id="7-2-2-直线回归模型的检验"><a href="#7-2-2-直线回归模型的检验" class="headerlink" title="7.2.2  直线回归模型的检验"></a>7.2.2  直线回归模型的检验</h3><p>7.2.2.1 回归系数的检验</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fm1.tvalues      <span class="comment">#模型系数t值</span></span><br></pre></td></tr></table></figure><pre><code>const    -8.414938身高       15.702810dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fm1.pvalues      <span class="comment">#系数检验p值</span></span><br></pre></td></tr></table></figure><pre><code>const    3.820690e-11身高       5.747329e-21dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(&#123;<span class="string">&#x27;b&#x27;</span>:fm1.params,<span class="string">&#x27;t&#x27;</span>:fm1.tvalues,<span class="string">&#x27;p&#x27;</span>:fm1.pvalues&#125;)  <span class="comment">#格式输出</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>b</th>      <th>t</th>      <th>p</th>    </tr>  </thead>  <tbody>    <tr>      <th>const</th>      <td>-79.282827</td>      <td>-8.414938</td>      <td>3.820690e-11</td>    </tr>    <tr>      <th>身高</th>      <td>0.876949</td>      <td>15.702810</td>      <td>5.747329e-21</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd           <span class="comment">#读取BSdata分析用数据</span></span><br><span class="line">BS=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>)[[<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,<span class="string">&#x27;支出&#x27;</span>]];BS </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>    </tr>    <tr>      <th>1</th>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>    </tr>    <tr>      <th>2</th>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>    </tr>    <tr>      <th>3</th>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>    </tr>    <tr>      <th>4</th>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>47</th>      <td>男</td>      <td>175</td>      <td>68</td>      <td>44.4</td>    </tr>    <tr>      <th>48</th>      <td>女</td>      <td>166</td>      <td>65</td>      <td>5.3</td>    </tr>    <tr>      <th>49</th>      <td>女</td>      <td>159</td>      <td>58</td>      <td>71.4</td>    </tr>    <tr>      <th>50</th>      <td>女</td>      <td>169</td>      <td>73</td>      <td>5.5</td>    </tr>    <tr>      <th>51</th>      <td>女</td>      <td>165</td>      <td>67</td>      <td>56.8</td>    </tr>  </tbody></table><p>52 rows × 4 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> statsmodels.formula.api <span class="keyword">as</span> smf  <span class="comment">#加载公式模型建立包</span></span><br><span class="line">fm2=smf.ols(<span class="string">&#x27;体重~身高&#x27;</span>,data=BS).fit()   </span><br><span class="line">fm2.summary().tables[<span class="number">1</span>]    <span class="comment">#回归系数检验表，来自summary的第2张表   </span></span><br></pre></td></tr></table></figure><table class="simpletable"><tr>      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  </tr><tr>  <th>Intercept</th> <td>  -79.2828</td> <td>    9.422</td> <td>   -8.415</td> <td> 0.000</td> <td>  -98.207</td> <td>  -60.359</td></tr><tr>  <th>身高</th>        <td>    0.8769</td> <td>    0.056</td> <td>   15.703</td> <td> 0.000</td> <td>    0.765</td> <td>    0.989</td></tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fm2.summary().tables[<span class="number">0</span>]</span><br></pre></td></tr></table></figure><table class="simpletable"><caption>OLS Regression Results</caption><tr>  <th>Dep. Variable:</th>           <td>体重</td>        <th>  R-squared:         </th> <td>   0.831</td></tr><tr>  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.828</td></tr><tr>  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   246.6</td></tr><tr>  <th>Date:</th>             <td>Tue, 07 Dec 2021</td> <th>  Prob (F-statistic):</th> <td>5.75e-21</td></tr><tr>  <th>Time:</th>                 <td>01:08:05</td>     <th>  Log-Likelihood:    </th> <td> -133.21</td></tr><tr>  <th>No. Observations:</th>      <td>    52</td>      <th>  AIC:               </th> <td>   270.4</td></tr><tr>  <th>Df Residuals:</th>          <td>    50</td>      <th>  BIC:               </th> <td>   274.3</td></tr><tr>  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>   </tr><tr>  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   </tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fm2.summary().tables[<span class="number">2</span>]</span><br></pre></td></tr></table></figure><table class="simpletable"><tr>  <th>Omnibus:</th>       <td> 6.599</td> <th>  Durbin-Watson:     </th> <td>   2.161</td></tr><tr>  <th>Prob(Omnibus):</th> <td> 0.037</td> <th>  Jarque-Bera (JB):  </th> <td>   5.704</td></tr><tr>  <th>Skew:</th>          <td>-0.782</td> <th>  Prob(JB):          </th> <td>  0.0577</td></tr><tr>  <th>Kurtosis:</th>      <td> 3.434</td> <th>  Cond. No.          </th> <td>3.58e+03</td></tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fm3=smf.ols(<span class="string">&#x27;体重~身高+支出&#x27;</span>,data=BS).fit()</span><br><span class="line">fm3.summary().tables[<span class="number">1</span>]    <span class="comment">#回归系数检验表，来自summary的第2张表</span></span><br></pre></td></tr></table></figure><table class="simpletable"><tr>      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  </tr><tr>  <th>Intercept</th> <td>  -79.2878</td> <td>    9.518</td> <td>   -8.331</td> <td> 0.000</td> <td>  -98.414</td> <td>  -60.161</td></tr><tr>  <th>身高</th>        <td>    0.8768</td> <td>    0.056</td> <td>   15.528</td> <td> 0.000</td> <td>    0.763</td> <td>    0.990</td></tr><tr>  <th>支出</th>        <td>    0.0011</td> <td>    0.021</td> <td>    0.050</td> <td> 0.960</td> <td>   -0.041</td> <td>    0.044</td></tr></table><p>7.2.2.2 回归模型的检验</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fm3.summary()</span><br></pre></td></tr></table></figure><table class="simpletable"><caption>OLS Regression Results</caption><tr>  <th>Dep. Variable:</th>           <td>体重</td>        <th>  R-squared:         </th> <td>   0.831</td></tr><tr>  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.825</td></tr><tr>  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   120.8</td></tr><tr>  <th>Date:</th>             <td>Tue, 07 Dec 2021</td> <th>  Prob (F-statistic):</th> <td>1.14e-19</td></tr><tr>  <th>Time:</th>                 <td>01:08:10</td>     <th>  Log-Likelihood:    </th> <td> -133.21</td></tr><tr>  <th>No. Observations:</th>      <td>    52</td>      <th>  AIC:               </th> <td>   272.4</td></tr><tr>  <th>Df Residuals:</th>          <td>    49</td>      <th>  BIC:               </th> <td>   278.3</td></tr><tr>  <th>Df Model:</th>              <td>     2</td>      <th>                     </th>     <td> </td>   </tr><tr>  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   </tr></table><table class="simpletable"><tr>      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  </tr><tr>  <th>Intercept</th> <td>  -79.2878</td> <td>    9.518</td> <td>   -8.331</td> <td> 0.000</td> <td>  -98.414</td> <td>  -60.161</td></tr><tr>  <th>身高</th>        <td>    0.8768</td> <td>    0.056</td> <td>   15.528</td> <td> 0.000</td> <td>    0.763</td> <td>    0.990</td></tr><tr>  <th>支出</th>        <td>    0.0011</td> <td>    0.021</td> <td>    0.050</td> <td> 0.960</td> <td>   -0.041</td> <td>    0.044</td></tr></table><table class="simpletable"><tr>  <th>Omnibus:</th>       <td> 6.641</td> <th>  Durbin-Watson:     </th> <td>   2.165</td></tr><tr>  <th>Prob(Omnibus):</th> <td> 0.036</td> <th>  Jarque-Bera (JB):  </th> <td>   5.744</td></tr><tr>  <th>Skew:</th>          <td>-0.784</td> <th>  Prob(JB):          </th> <td>  0.0566</td></tr><tr>  <th>Kurtosis:</th>      <td> 3.440</td> <th>  Cond. No.          </th> <td>3.62e+03</td></tr></table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.<br/>[2] The condition number is large, 3.62e+03. This might indicate that there are<br/>strong multicollinearity or other numerical problems.<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%run init.py</span><br></pre></td></tr></table></figure><h3 id="7-2-3-直线回归模型的预测"><a href="#7-2-3-直线回归模型的预测" class="headerlink" title="7.2.3  直线回归模型的预测"></a>7.2.3  直线回归模型的预测</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fm2.predict(pd.DataFrame(&#123;<span class="string">&#x27;身高&#x27;</span>:[<span class="number">170</span>]&#125;))         <span class="comment">#估计</span></span><br></pre></td></tr></table></figure><pre><code>0    69.7986dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fm2.predict(pd.DataFrame(&#123;<span class="string">&#x27;身高&#x27;</span>:[<span class="number">190</span>]&#125;))          <span class="comment">#预测</span></span><br></pre></td></tr></table></figure><pre><code>0    87.3375dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fm2.predict(pd.DataFrame(&#123;<span class="string">&#x27;身高&#x27;</span>: [<span class="number">170</span>,<span class="number">180</span>,<span class="number">190</span>]&#125;))  <span class="comment">#估计与预测</span></span><br></pre></td></tr></table></figure><pre><code>0    69.79861    78.56812    87.3375dtype: float64</code></pre><h2 id="7-3-分组可视化模型分析"><a href="#7-3-分组可视化模型分析" class="headerlink" title="7.3 分组可视化模型分析"></a>7.3 分组可视化模型分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BS_M=BS[BS.性别==<span class="string">&#x27;男&#x27;</span>][[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>]];BS_M </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>171</td>      <td>68</td>    </tr>    <tr>      <th>3</th>      <td>169</td>      <td>74</td>    </tr>    <tr>      <th>4</th>      <td>154</td>      <td>55</td>    </tr>    <tr>      <th>5</th>      <td>183</td>      <td>76</td>    </tr>    <tr>      <th>9</th>      <td>173</td>      <td>63</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>37</th>      <td>178</td>      <td>78</td>    </tr>    <tr>      <th>40</th>      <td>158</td>      <td>60</td>    </tr>    <tr>      <th>45</th>      <td>169</td>      <td>65</td>    </tr>    <tr>      <th>46</th>      <td>166</td>      <td>70</td>    </tr>    <tr>      <th>47</th>      <td>175</td>      <td>68</td>    </tr>  </tbody></table><p>27 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BS_F=BS[BS.性别==<span class="string">&#x27;女&#x27;</span>][[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>]];BS_F </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>167</td>      <td>71</td>    </tr>    <tr>      <th>2</th>      <td>175</td>      <td>73</td>    </tr>    <tr>      <th>6</th>      <td>169</td>      <td>71</td>    </tr>    <tr>      <th>7</th>      <td>166</td>      <td>66</td>    </tr>    <tr>      <th>8</th>      <td>165</td>      <td>69</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>44</th>      <td>164</td>      <td>62</td>    </tr>    <tr>      <th>48</th>      <td>166</td>      <td>65</td>    </tr>    <tr>      <th>49</th>      <td>159</td>      <td>58</td>    </tr>    <tr>      <th>50</th>      <td>169</td>      <td>73</td>    </tr>    <tr>      <th>51</th>      <td>165</td>      <td>67</td>    </tr>  </tbody></table><p>25 rows × 2 columns</p></div><h3 id="7-3-1-可视化分组线性相关分析"><a href="#7-3-1-可视化分组线性相关分析" class="headerlink" title="7.3.1 可视化分组线性相关分析"></a>7.3.1 可视化分组线性相关分析</h3><p>（1）男生身高与体重的相关分析</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> st </span><br><span class="line">M_r=st.pearsonr(BS_M.身高,BS_M.体重);M_r </span><br></pre></td></tr></table></figure><pre><code>(0.9105200024864898, 4.43657339837424e-11)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings  </span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>)            <span class="comment">#忽略警告信息</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns </span><br><span class="line">sns.jointplot(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,data=BS_M);  <span class="comment">#直方图+散点图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071608429.png" alt="png"></p><p>（2）女生身高与体重的相关分析 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#plt.plot(BS_F.身高,BS_F.体重,&#x27;o&#x27;);</span></span><br><span class="line"><span class="comment">#plt.title(M_r);</span></span><br><span class="line">st.pearsonr(BS_F.身高,BS_F.体重)</span><br></pre></td></tr></table></figure><pre><code>(0.8931328371576219, 1.907324154689927e-09)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.jointplot(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,data=BS_F);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071608203.png" alt="png"></p><h3 id="7-3-2-可视化分组线性回归模型"><a href="#7-3-2-可视化分组线性回归模型" class="headerlink" title="7.3.2 可视化分组线性回归模型"></a>7.3.2 可视化分组线性回归模型</h3><p>（1）男生身高与体重的回归分析 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smf.ols(<span class="string">&#x27;体重~身高&#x27;</span>,data=BS_M).fit().summary().tables[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><table class="simpletable"><tr>      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  </tr><tr>  <th>Intercept</th> <td>  -85.4332</td> <td>   14.189</td> <td>   -6.021</td> <td> 0.000</td> <td> -114.657</td> <td>  -56.210</td></tr><tr>  <th>身高</th>        <td>    0.9101</td> <td>    0.083</td> <td>   11.011</td> <td> 0.000</td> <td>    0.740</td> <td>    1.080</td></tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.regplot(y=<span class="string">&quot;体重&quot;</span>,x=<span class="string">&quot;身高&quot;</span>,data=BS_M,ci=<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071608581.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.jointplot(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,data=BS_M,kind=<span class="string">&#x27;reg&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071608144.png" alt="png"></p><p>（2）女生身高与体重的回归分析 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smf.ols(<span class="string">&#x27;体重~身高&#x27;</span>,data=BS_F).fit().summary().tables[<span class="number">1</span>] </span><br></pre></td></tr></table></figure><table class="simpletable"><tr>      <td></td>         <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  </tr><tr>  <th>Intercept</th> <td>  -80.3893</td> <td>   15.405</td> <td>   -5.218</td> <td> 0.000</td> <td> -112.257</td> <td>  -48.522</td></tr><tr>  <th>身高</th>        <td>    0.8867</td> <td>    0.093</td> <td>    9.523</td> <td> 0.000</td> <td>    0.694</td> <td>    1.079</td></tr></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.regplot(y=<span class="string">&#x27;体重&#x27;</span>,x=<span class="string">&#x27;身高&#x27;</span>,data=BS_F,ci=<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071608642.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.jointplot(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,data=BS_F,kind=<span class="string">&#x27;reg&#x27;</span>,ci=<span class="number">0</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071608756.png" alt="png"></p><p>（3）基于plotnine的分组回归分析可视化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> plotnine <span class="keyword">import</span> *    </span><br><span class="line">theme_set(theme_bw(base_family=<span class="string">&#x27;SimSun&#x27;</span>));</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(ggplot(BS,aes(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>)) + geom_point() + facet_wrap(<span class="string">&#x27;性别&#x27;</span>,nrow=<span class="number">1</span>)</span><br><span class="line">        + stat_smooth(method=<span class="string">&#x27;lm&#x27;</span>,se=<span class="literal">True</span>))   <span class="comment">#无可信区间的回归线 </span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071608570.png" alt="png"></p><pre><code>&lt;ggplot: (14373846)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(ggplot(BS,aes(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>)) + geom_point() + facet_wrap(<span class="string">&#x27;性别&#x27;</span>,nrow=<span class="number">2</span>) </span><br><span class="line">        + stat_smooth(method=<span class="string">&#x27;lm&#x27;</span>,se=<span class="literal">False</span>))           <span class="comment">#有可信区间的回归线 </span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112071608851.png" alt="png"></p><pre><code>&lt;ggplot: (17556679)&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第7章-数据的模型分析及可视化&quot;&gt;&lt;a href=&quot;#第7章-数据的模型分析及可视化&quot; class=&quot;headerlink&quot; title=&quot;第7章 数据的模型分析及可视化&quot;&gt;&lt;/a&gt;第7章 数据的模型分析及可视化&lt;/h1&gt;&lt;h2 id=&quot;7-1-线性相关分析模型&quot;</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>第6章-数据的统计分析</title>
    <link href="https://zhangkh.top/14df227a.html"/>
    <id>https://zhangkh.top/14df227a.html</id>
    <published>2021-12-06T17:50:16.000Z</published>
    <updated>2021-12-06T17:53:57.143Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第6章-数据的统计分析及可视化"><a href="#第6章-数据的统计分析及可视化" class="headerlink" title="第6章 数据的统计分析及可视化"></a>第6章 数据的统计分析及可视化</h1><h2 id="6-1-随机变量及其分布"><a href="#6-1-随机变量及其分布" class="headerlink" title="6.1 随机变量及其分布"></a>6.1 随机变量及其分布</h2><h3 id="6-1-1-均匀分布及随机数图"><a href="#6-1-1-均匀分布及随机数图" class="headerlink" title="6.1.1 均匀分布及随机数图"></a>6.1.1 均匀分布及随机数图</h3><p>6.1.1.1 均匀分布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np                        <span class="comment">#加载numpy包</span></span><br><span class="line">np.set_printoptions(precision=<span class="number">4</span>)          <span class="comment">#设置numpy输出为4位有效数</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="number">0</span>;b=<span class="number">1</span>;n=<span class="number">20</span>            <span class="comment"># n表示在[a,b]中生成n个点</span></span><br><span class="line">x=np.linspace(a,b,n);   <span class="comment"># [a,b]中n个等差数据</span></span><br><span class="line">ｘ</span><br></pre></td></tr></table></figure><pre><code>array([0.    , 0.0526, 0.1053, 0.1579, 0.2105, 0.2632, 0.3158, 0.3684,       0.4211, 0.4737, 0.5263, 0.5789, 0.6316, 0.6842, 0.7368, 0.7895,       0.8421, 0.8947, 0.9474, 1.    ])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y=np.ones(n)/(b-a);y    <span class="comment"># y=1/(b-a)  </span></span><br></pre></td></tr></table></figure><pre><code>array([1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,       1., 1., 1.])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt               </span><br><span class="line">plt.plot(x,y);plt.ylim(<span class="number">0</span>,<span class="number">1.5</span>);plt.stem(x,y);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150589.png" alt="png"></p><p>6.1.1.2 均匀随机数</p><p>（1）生成一个均匀随机实数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.rand(<span class="number">1</span>)   <span class="comment">#生成[0,1]上的一个随机实数:random.uniform(0,1)     </span></span><br></pre></td></tr></table></figure><pre><code>array([0.3765])</code></pre><p>（2）生成一组随机实数及图示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">123</span>)            <span class="comment">#设置种子数seed可重复结果,可任意设置</span></span><br><span class="line">R=np.random.rand(<span class="number">10</span>);R[:<span class="number">10</span>]  <span class="comment">#[0,1]上的1000个随机数=np.random.uniform(0,1,1000) </span></span><br></pre></td></tr></table></figure><pre><code>array([0.6965, 0.2861, 0.2269, 0.5513, 0.7195, 0.4231, 0.9808, 0.6848,       0.4809, 0.3921])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(R,<span class="string">&#x27;.&#x27;</span>);</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150126.png" alt="png"><br>​    </p><h3 id="6-1-2-正态分布及随机数图"><a href="#6-1-2-正态分布及随机数图" class="headerlink" title="6.1.2 正态分布及随机数图"></a>6.1.2 正态分布及随机数图</h3><p>6.1.2.1  正态分布函数</p><p>（1）标准正态分布曲线</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> arange,exp  <span class="comment">#arange类似linspace函数</span></span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt,pi   </span><br><span class="line">x=arange(-<span class="number">4</span>,<span class="number">4</span>,<span class="number">0.1</span>)            <span class="comment">#x为-4到4上间距为0.1的数   </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">y=<span class="number">1</span>/sqrt(<span class="number">2</span>*pi)*exp(-x**<span class="number">2</span>/<span class="number">2</span>);</span><br><span class="line">plt.plot(x,y);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151481.png" alt="png"></p><p>（2）标准正态分布的取值(pdf)及分位数(ppf)计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> st  <span class="comment">#加载统计方法包 </span></span><br><span class="line">p_z=st.norm.pdf(-<span class="number">2</span>);p_z   <span class="comment">#p(z)=1/sqrt(2*pi)*exp(-z**2/2);</span></span><br></pre></td></tr></table></figure><pre><code>0.05399096651318806</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">za=st.norm.ppf(<span class="number">0.95</span>);za   <span class="comment">#单侧</span></span><br></pre></td></tr></table></figure><pre><code>1.6448536269514722</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[st.norm.ppf(<span class="number">0.025</span>),st.norm.ppf(<span class="number">0.975</span>)] <span class="comment">#双侧</span></span><br></pre></td></tr></table></figure><pre><code>[-1.9599639845400545, 1.959963984540054]</code></pre><p>（3）标准正态分布的概率计算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p=st.norm.cdf(<span class="number">1.645</span>);p       <span class="comment">#标准正态分布下的面积：p=P(z≤1.645)的累积概率</span></span><br></pre></td></tr></table></figure><pre><code>0.9500150944608786</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#标准正态曲线下[a,b]上计算概率的面积图</span></span><br><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> st  <span class="comment">#加载统计方法包 </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">norm_p</span>(<span class="params">a,b</span>):</span>            </span><br><span class="line">        x=np.arange(-<span class="number">4</span>,<span class="number">4</span>,<span class="number">0.1</span>) </span><br><span class="line">        y=st.norm.pdf(x)         </span><br><span class="line">        x1=x[(a&lt;=x) &amp; (x&lt;=b)];x1 </span><br><span class="line">        y1=y[(a&lt;=x) &amp; (x&lt;=b)];y1         </span><br><span class="line">        p=st.norm.cdf(b)-st.norm.cdf(a);</span><br><span class="line">        print(<span class="string">&quot;    N(0,1)分布: [%3.2f,%3.2f]  p=%5.4f&quot;</span>%(a,b,p)) </span><br><span class="line">        plt.plot(x,y);<span class="comment">#plt.text(-0.7,0.2,&quot;p=%5.4f&quot;%p,fontsize=15);</span></span><br><span class="line">        plt.hlines(<span class="number">0</span>,-<span class="number">4</span>,<span class="number">4</span>); plt.vlines(x1,<span class="number">0</span>,y1,colors=<span class="string">&#x27;r&#x27;</span>);         </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">norm_p(-<span class="number">4</span>,-<span class="number">2</span>)       <span class="comment"># p=P(z≤2)=0.27%</span></span><br></pre></td></tr></table></figure><pre><code>    N(0,1)分布: [-4.00,-2.00]  p=0.0227</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151934.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">norm_p(-<span class="number">2</span>,<span class="number">2</span>)        <span class="comment"># p=P(-2≤z≤2)=95.45%</span></span><br></pre></td></tr></table></figure><pre><code>    N(0,1)分布: [-2.00,2.00]  p=0.9545</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151918.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">norm_p(-<span class="number">1.96</span>,<span class="number">1.96</span>)  <span class="comment"># p=P(-1.96≤z≤1.96)=95% </span></span><br></pre></td></tr></table></figure><pre><code>    N(0,1)分布: [-1.96,1.96]  p=0.9500</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151596.png" alt="png"></p><p>6.1.2.2 正态分布随机数图</p><p>（1）标准正态随机数及分布图 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.normal(<span class="number">0</span>,<span class="number">1</span>,<span class="number">5</span>)    <span class="comment">#生成 5 个标准正态分布随机数 </span></span><br></pre></td></tr></table></figure><pre><code>array([ 1.2659, -0.8667, -0.6789, -0.0947,  1.4914])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#随机产生1000个标准正态分布随机数，作其概率直方图，然后再添加正态分布的密度函数线。</span></span><br><span class="line"><span class="comment">#np.random.seed(123)             #设置种子数seed可使结果可重复</span></span><br><span class="line">z1=np.random.normal(<span class="number">0</span>,<span class="number">1</span>,<span class="number">1000</span>)   <span class="comment">#1000个标准正态分布随机数N(0,1)</span></span><br><span class="line">z1[:<span class="number">20</span>]</span><br></pre></td></tr></table></figure><pre><code>array([-0.6389, -0.444 , -0.4344,  2.2059,  2.1868,  1.0041,  0.3862,        0.7374,  1.4907, -0.9358,  1.1758, -1.2539, -0.6378,  0.9071,       -1.4287, -0.1401, -0.8618, -0.2556, -2.7986, -1.7715])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.hist(z1);                   <span class="comment">#可设定分段数bins, plt.hist(z1,bins=30)</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150986.png" alt="png"><br>​    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">456</span>)            <span class="comment">#设置种子seed可重复结果</span></span><br><span class="line">z2=np.random.normal(<span class="number">0</span>,<span class="number">1</span>,<span class="number">1000</span>)</span><br><span class="line">plt.hist(z2);<span class="comment">#plt.ylim=[0,400];</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151323.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.hist(z1); plt.hist(z2);    <span class="comment">#做在一张图上</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150147.png" alt="png"><br>​    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#一页绘制2个正态分布随机图</span></span><br><span class="line">plt.subplot(<span class="number">121</span>);plt.hist(z1); </span><br><span class="line">plt.subplot(<span class="number">122</span>);plt.hist(z2);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151441.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">z12=pd.DataFrame(&#123;<span class="string">&#x27;z1&#x27;</span>:z1,<span class="string">&#x27;z2&#x27;</span>:z2&#125;); z12 <span class="comment">#构建数据框</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>z1</th>      <th>z2</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>-0.638902</td>      <td>-0.668129</td>    </tr>    <tr>      <th>1</th>      <td>-0.443982</td>      <td>-0.498210</td>    </tr>    <tr>      <th>2</th>      <td>-0.434351</td>      <td>0.618576</td>    </tr>    <tr>      <th>3</th>      <td>2.205930</td>      <td>0.568692</td>    </tr>    <tr>      <th>4</th>      <td>2.186786</td>      <td>1.350509</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>995</th>      <td>-0.807699</td>      <td>2.591205</td>    </tr>    <tr>      <th>996</th>      <td>-1.276077</td>      <td>-0.468390</td>    </tr>    <tr>      <th>997</th>      <td>0.553626</td>      <td>0.898201</td>    </tr>    <tr>      <th>998</th>      <td>0.553874</td>      <td>-0.669727</td>    </tr>    <tr>      <th>999</th>      <td>-0.691200</td>      <td>0.019731</td>    </tr>  </tbody></table><p>1000 rows × 2 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z12.plot(kind=<span class="string">&#x27;hist&#x27;</span>); <span class="comment">#根据数据框绘直方图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151020.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z12.plot(kind=<span class="string">&#x27;hist&#x27;</span>,subplots=<span class="literal">True</span>,layout=(<span class="number">1</span>,<span class="number">2</span>));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151901.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">z12.plot(kind=<span class="string">&#x27;density&#x27;</span>,subplots=<span class="literal">True</span>,layout=(<span class="number">1</span>,<span class="number">2</span>)); <span class="comment">#模拟正态分布曲线</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150680.png" alt="png"><br>​    </p><p>（2）一般正态随机数及分布图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">12</span>)   <span class="comment">#设置种子数seed可重复结果</span></span><br><span class="line">X=np.random.normal(<span class="number">170</span>,<span class="number">10</span>,<span class="number">100</span>); X.<span class="built_in">round</span>(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><pre><code>array([174.7, 163.2, 172.4, 153. , 177.5, 154.7, 170.1, 168.8, 161.9,       198.7, 164. , 174.7, 181. , 157.8, 183.4, 168.8, 180.1, 160.9,       159.7, 182.1, 175. , 171.4, 176.4, 175.3, 158.5, 147.9, 153.2,       152.1, 147.8, 163.5, 164.7, 169.6, 172.1, 166.2, 167.5, 170.7,       160. , 162.9, 170.4, 163.2, 164.3, 168.9, 183.4, 173.2, 166.6,       164.1, 168.9, 192.4, 138.5, 175.4, 172.3, 178.7, 158.5, 191.1,       180. , 169.5, 171.6, 162.8, 170.5, 168.6, 179.4, 173.6, 169.2,       176.8, 175.6, 172.2, 154.7, 180.3, 158.3, 159.9, 168.9, 175.1,       184.1, 153.1, 184.7, 186.4, 165.4, 168. , 164.3, 164. , 156.6,       153.1, 168. , 172.6, 188.3, 160. , 149.1, 171.5, 165.3, 173.6,       166. , 157.4, 163.1, 178. , 172.7, 160.3, 178.7, 155.5, 164.6,       172. ])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings  </span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>)            <span class="comment">#忽略警告信息</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line">sns.distplot(X);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151469.png" alt="png"></p><p>（3）非正态随机数及分布图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">15</span>)  <span class="comment">#设置种子数seed可重复结果</span></span><br><span class="line">Y=np.random.lognormal(<span class="number">0</span>,<span class="number">1</span>,<span class="number">1000</span>); Y[:<span class="number">10</span>]</span><br></pre></td></tr></table></figure><pre><code>array([0.7317, 1.4039, 0.8556, 0.6054, 1.2656, 0.1714, 0.3343, 0.337 ,       0.737 , 0.6227])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(Y);</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150896.png" alt="png"><br>​    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Z=np.log(Y)      <span class="comment"># Z=log(Y)</span></span><br><span class="line">sns.distplot(Z);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150940.png" alt="png"></p><p>6.1.2.3 正态分布概率检验图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> st   <span class="comment">#加载科学计算包scipy的统计功能</span></span><br><span class="line">st.probplot(X,plot=plt);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070151645.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st.probplot(Y,plot=plt); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070152498.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st.probplot(Z, plot=plt); </span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150433.png" alt="png"><br>​    </p><h2 id="6-2-统计量及抽样分布图"><a href="#6-2-统计量及抽样分布图" class="headerlink" title="6.2 统计量及抽样分布图"></a>6.2 统计量及抽样分布图</h2><h3 id="6-2-1-统计量及抽样的概念"><a href="#6-2-1-统计量及抽样的概念" class="headerlink" title="6.2.1 统计量及抽样的概念"></a>6.2.1 统计量及抽样的概念</h3><p>6.2.1.1 简单随机模拟</p><p>（1）生成[0,1]上的一组随机整数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(<span class="number">0</span>,<span class="number">2</span>,<span class="number">100</span>)    <span class="comment">#[0,1]上的10个随机整数 </span></span><br></pre></td></tr></table></figure><pre><code>array([0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0,       0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,       0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1,       0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1,       0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0])</code></pre><p>（2）生成任意区间上的一组随机整数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.random.randint(<span class="number">1</span>,<span class="number">101</span>,<span class="number">10</span>)  <span class="comment">#[1,100]上的10个随机整数数组</span></span><br></pre></td></tr></table></figure><pre><code>array([32, 86, 52, 60, 20, 14,  3, 28, 31, 75])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">15</span>)           <span class="comment">#结果可重复</span></span><br><span class="line">np.random.randint(<span class="number">1</span>,<span class="number">101</span>,<span class="number">10</span>)</span><br></pre></td></tr></table></figure><pre><code>array([73, 13,  6,  1, 29, 28, 72, 76, 86, 48])</code></pre><p>6.2.1.2 随机抽样方法</p><p>（1）根据随机数抽样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_rows&#x27;</span>, <span class="number">10</span>)</span><br><span class="line">BSdata=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>);   <span class="comment">#读取学生数据</span></span><br><span class="line">BSdata</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>47</th>      <td>1538319004</td>      <td>男</td>      <td>175</td>      <td>68</td>      <td>44.4</td>      <td>不清楚</td>      <td>统计方法</td>      <td>SAS</td>    </tr>    <tr>      <th>48</th>      <td>1538254010</td>      <td>女</td>      <td>166</td>      <td>65</td>      <td>5.3</td>      <td>不清楚</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>49</th>      <td>1540294017</td>      <td>女</td>      <td>159</td>      <td>58</td>      <td>71.4</td>      <td>不清楚</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>50</th>      <td>1540365026</td>      <td>女</td>      <td>169</td>      <td>73</td>      <td>5.5</td>      <td>有必要</td>      <td>统计方法</td>      <td>Excel</td>    </tr>    <tr>      <th>51</th>      <td>1540388036</td>      <td>女</td>      <td>165</td>      <td>67</td>      <td>56.8</td>      <td>不必要</td>      <td>概率统计</td>      <td>SAS</td>    </tr>  </tbody></table><p>52 rows × 8 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i=np.random.randint(<span class="number">1</span>,<span class="number">53</span>,<span class="number">6</span>);i <span class="comment">#抽取6名学生，取[1,52]上的6个整数 </span></span><br></pre></td></tr></table></figure><pre><code>array([30, 18, 46, 32, 24, 33])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.iloc[i]                 <span class="comment">#获取抽到的6名学生信息 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>30</th>      <td>1529365032</td>      <td>男</td>      <td>172</td>      <td>71</td>      <td>10.4</td>      <td>有必要</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>18</th>      <td>1524105026</td>      <td>女</td>      <td>163</td>      <td>65</td>      <td>69.4</td>      <td>有必要</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>46</th>      <td>1438120022</td>      <td>男</td>      <td>166</td>      <td>70</td>      <td>35.6</td>      <td>有必要</td>      <td>统计方法</td>      <td>R</td>    </tr>    <tr>      <th>32</th>      <td>1530243029</td>      <td>男</td>      <td>186</td>      <td>87</td>      <td>9.5</td>      <td>不必要</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>24</th>      <td>1527173011</td>      <td>女</td>      <td>160</td>      <td>62</td>      <td>11.5</td>      <td>不必要</td>      <td>都学习过</td>      <td>Matlab</td>    </tr>    <tr>      <th>33</th>      <td>1531364037</td>      <td>女</td>      <td>171</td>      <td>69</td>      <td>7.3</td>      <td>有必要</td>      <td>都学习过</td>      <td>Excel</td>    </tr>  </tbody></table></div><p>（2）直接抽取样本（sample）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.sample(<span class="number">6</span>)             <span class="comment">#直接抽取名学生及其信息 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>18</th>      <td>1524105026</td>      <td>女</td>      <td>163</td>      <td>65</td>      <td>69.4</td>      <td>有必要</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>33</th>      <td>1531364037</td>      <td>女</td>      <td>171</td>      <td>69</td>      <td>7.3</td>      <td>有必要</td>      <td>都学习过</td>      <td>Excel</td>    </tr>    <tr>      <th>45</th>      <td>1538399025</td>      <td>男</td>      <td>169</td>      <td>65</td>      <td>9.5</td>      <td>有必要</td>      <td>统计方法</td>      <td>SAS</td>    </tr>    <tr>      <th>28</th>      <td>1529314037</td>      <td>男</td>      <td>170</td>      <td>70</td>      <td>15.1</td>      <td>有必要</td>      <td>概率统计</td>      <td>SAS</td>    </tr>    <tr>      <th>30</th>      <td>1529365032</td>      <td>男</td>      <td>172</td>      <td>71</td>      <td>10.4</td>      <td>有必要</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>42</th>      <td>1537288004</td>      <td>女</td>      <td>173</td>      <td>70</td>      <td>19.1</td>      <td>不清楚</td>      <td>编程技术</td>      <td>Python</td>    </tr>  </tbody></table></div><h3 id="6-2-2-统计量的分布"><a href="#6-2-2-统计量的分布" class="headerlink" title="6.2.2 统计量的分布"></a>6.2.2 统计量的分布</h3><p>6.2.2.1 中心极限定理及其模拟图</p><p>（1）正态均值的分布—正态分布 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于正态分布的中心极限定理模拟函数</span></span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">norm_sim1</span>(<span class="params">N=<span class="number">1000</span>,n=<span class="number">10</span></span>):</span>    <span class="comment"># n为样本个数，N为模拟次数（即抽样次数） </span></span><br><span class="line">    xbar=np.zeros(N)           <span class="comment"># 产生放置样本均值的向量  </span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):         <span class="comment"># 计算[0,1]上的标准正态随机数及均值 </span></span><br><span class="line">        xbar[i]=np.random.normal(<span class="number">0</span>,<span class="number">1</span>,n).mean() </span><br><span class="line">    sns.distplot(xbar,bins=<span class="number">50</span>) <span class="comment">#plt.hist(xbar,bins=50)   </span></span><br><span class="line">    print(pd.DataFrame(xbar).describe().T) <span class="comment">#模拟结果的基本统计量</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">1</span>)         <span class="comment">#设置种子数seed使结果可重复</span></span><br><span class="line">norm_sim1(<span class="number">10000</span>,<span class="number">30</span>)               <span class="comment">#根据默认值模拟</span></span><br></pre></td></tr></table></figure><pre><code>     count      mean       std       min       25%       50%       75%  \0  10000.0  0.002303  0.184125 -0.751992 -0.121302  0.002808  0.128373           max  0  0.770898  </code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070152089.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">2</span>)        <span class="comment">#设置种子数seed使结果可重复</span></span><br><span class="line">norm_sim1(n=<span class="number">30</span>,N=<span class="number">10000</span>)  </span><br></pre></td></tr></table></figure><pre><code>     count      mean       std       min       25%       50%       75%  \0  10000.0 -0.003134  0.181091 -0.612653 -0.127927 -0.002509  0.120398           max  0  0.684151  </code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070152154.png" alt="png"></p><p>（２）非正态均值统计量的分布 —— 渐近正态分布</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于非正态分布的中心极限定理模拟函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">norm_sim2</span>(<span class="params">N=<span class="number">1000</span>,n=<span class="number">10</span></span>):</span> </span><br><span class="line">    xbar=np.zeros(N) </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):  <span class="comment">#计算[0,1]上的均匀随机数及均值 </span></span><br><span class="line">        xbar[i]=np.random.uniform(<span class="number">0</span>,<span class="number">1</span>,n).mean()  </span><br><span class="line">    sns.distplot(xbar,bins=<span class="number">50</span>)</span><br><span class="line">    print(pd.DataFrame(xbar).describe().T) </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">3</span>)   <span class="comment">#设置种子数seed使结果可重复</span></span><br><span class="line">norm_sim2() </span><br></pre></td></tr></table></figure><pre><code>    count      mean       std       min       25%       50%       75%  \0  1000.0  0.496785  0.090672  0.203241  0.436412  0.497801  0.560534           max  0  0.732275  </code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070152326.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">np.random.seed(<span class="number">4</span>)   <span class="comment">#设置种子数seed使结果可重复</span></span><br><span class="line">norm_sim2(<span class="number">10000</span>,<span class="number">30</span>) </span><br></pre></td></tr></table></figure><pre><code>     count      mean       std       min       25%       50%       75%  \0  10000.0  0.499467  0.052163  0.294711  0.463689  0.499249  0.534502           max  0  0.711937  </code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150801.png" alt="png"></p><p>6.2.2.2 均值的 t 分布及其图示</p><p>（１）小样本正态均值的标准化统计量分布 — t分布</p><p>（2）t 分布曲线比较图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x=np.arange(-<span class="number">4</span>,<span class="number">4</span>,<span class="number">0.1</span>) </span><br><span class="line">yn=st.norm.pdf(x,<span class="number">0</span>,<span class="number">1</span>); yt3=st.t.pdf(x,<span class="number">3</span>); yt10=st.t.pdf(x,<span class="number">30</span>) </span><br><span class="line">plt.plot(x,yn,<span class="string">&#x27;r-&#x27;</span>,x,yt3,<span class="string">&#x27;b.&#x27;</span>,x,yt10,<span class="string">&#x27;g-.&#x27;</span>); </span><br><span class="line">plt.legend([<span class="string">&quot;N(0,1)&quot;</span>,<span class="string">&quot;t(3)&quot;</span>,<span class="string">&quot;t(10)&quot;</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070152643.png" alt="png"></p><h2 id="6-3-基本统计推断方法"><a href="#6-3-基本统计推断方法" class="headerlink" title="6.3 基本统计推断方法"></a>6.3 基本统计推断方法</h2><h3 id="6-3-1-参数的估计方法"><a href="#6-3-1-参数的估计方法" class="headerlink" title="6.3.1 参数的估计方法"></a>6.3.1 参数的估计方法</h3><p>6.3.1.1 点估计 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">BSdata=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>);   <span class="comment">#读取学生数据</span></span><br><span class="line"><span class="comment">#BSdata</span></span><br></pre></td></tr></table></figure><p>（1）均值的点估计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;身高&#x27;</span>].mean() </span><br></pre></td></tr></table></figure><pre><code>168.51923076923077</code></pre><p>（2）标准差的点估计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;身高&#x27;</span>].std() </span><br></pre></td></tr></table></figure><pre><code>8.01833776871194</code></pre><p>（3）比例的点估计 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f=BSdata[<span class="string">&#x27;开设&#x27;</span>].value_counts(); </span><br><span class="line">p=f/<span class="built_in">sum</span>(f);p</span><br></pre></td></tr></table></figure><pre><code>有必要    0.557692不清楚    0.230769不必要    0.211538Name: 开设, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#假定有 150 人接受调查，其中 42 人喜欢品牌 A，问喜欢 A 品牌的人占多大比例？</span></span><br><span class="line"><span class="number">42</span>/<span class="number">150</span></span><br></pre></td></tr></table></figure><pre><code>0.28</code></pre><p>6.3.1.2 区间估计</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">norm_p(-<span class="number">2</span>,<span class="number">2</span>) </span><br></pre></td></tr></table></figure><pre><code>    N(0,1)分布: [-2.00,2.00]  p=0.9545</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150226.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> st</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">t_p</span>(<span class="params">a,b,df=<span class="number">10</span></span>):</span>  <span class="comment">#t分布曲线下[a,b]上计算概率的面积图</span></span><br><span class="line">        x=np.arange(-<span class="number">4</span>,<span class="number">4</span>,<span class="number">0.1</span>) </span><br><span class="line">        y=st.t.pdf(x,df)         </span><br><span class="line">        x1=x[(a&lt;=x) &amp; (x&lt;=b)];x1 </span><br><span class="line">        y1=y[(a&lt;=x) &amp; (x&lt;=b)];y1 </span><br><span class="line">        p=st.t.cdf(b,df)-st.t.cdf(a,df);</span><br><span class="line">        print(<span class="string">&quot;      t(&quot;</span>+<span class="built_in">str</span>(df)+<span class="string">&quot;): [%3.2f, %3.2f]  p=%5.4f&quot;</span>%(a,b,p)) </span><br><span class="line">        plt.plot(x,y);<span class="comment">#plt.text(-0.7,0.2,&quot;p=%5.4f&quot;%p,fontsize=15);</span></span><br><span class="line">        plt.hlines(<span class="number">0</span>,-<span class="number">4</span>,<span class="number">4</span>); plt.vlines(x1,<span class="number">0</span>,y1,colors=<span class="string">&#x27;r&#x27;</span>); </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t_p(-<span class="number">2</span>,<span class="number">2</span>)  <span class="comment">#t:[-2,2], df=10</span></span><br></pre></td></tr></table></figure><pre><code>      t(10): [-2.00, 2.00]  p=0.9266</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070152527.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基于原始数据的t分布均值和置信区间</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">t_interval</span>(<span class="params">x,b=<span class="number">0.95</span></span>):</span>  <span class="comment">#这里b为置信水平，通常取95%</span></span><br><span class="line">    a=<span class="number">1</span>-b </span><br><span class="line">    n = <span class="built_in">len</span>(x) </span><br><span class="line">    ta=st.t.ppf(<span class="number">1</span>-a/<span class="number">2</span>,n-<span class="number">1</span>);ta     </span><br><span class="line">    <span class="keyword">from</span> math <span class="keyword">import</span> sqrt </span><br><span class="line">    se=x.std()/sqrt(n)</span><br><span class="line">    <span class="keyword">return</span>(x.mean()-ta*se, x.mean()+se*ta)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">t_interval(BSdata[<span class="string">&#x27;身高&#x27;</span>]) <span class="comment">#身高均值的 95%的置信区间</span></span><br></pre></td></tr></table></figure><pre><code>(166.28691128155606, 170.7515502569055)</code></pre><h3 id="6-3-2-参数的假设检验"><a href="#6-3-2-参数的假设检验" class="headerlink" title="6.3.2 参数的假设检验"></a>6.3.2 参数的假设检验</h3><p>6.3.2.2 样本均值 t 检验</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#单样本 t 检验函数进行均值的 t 检验 </span></span><br><span class="line">print(<span class="string">&quot;样本均值：&quot;</span>,BSdata.身高.mean())</span><br><span class="line">st.ttest_1samp(BSdata.身高,popmean = <span class="number">166</span>)</span><br></pre></td></tr></table></figure><pre><code>样本均值： 168.51923076923077Ttest_1sampResult(statistic=2.2656106477907243, pvalue=0.02775093534857837)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">st.ttest_1samp(BSdata.身高,popmean = <span class="number">170</span>)</span><br></pre></td></tr></table></figure><pre><code>Ttest_1sampResult(statistic=-1.3316948082433964, pvalue=0.188881956923451)</code></pre><h3 id="6-3-3-统计推断的可视化"><a href="#6-3-3-统计推断的可视化" class="headerlink" title="6.3.3 统计推断的可视化"></a>6.3.3 统计推断的可视化</h3><p>6.3.3.1 均值推断的可视化函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#定义单样本均值t检验图</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ttest_1plot</span>(<span class="params">X,mu=<span class="number">0</span>,k=<span class="number">0.1</span></span>):</span> </span><br><span class="line">    df=<span class="built_in">len</span>(X)-<span class="number">1</span>  <span class="comment">#df=n-1</span></span><br><span class="line">    t1p=st.ttest_1samp(X, popmean = mu);</span><br><span class="line">    x=np.arange(-<span class="number">4</span>,<span class="number">4</span>,k); y=st.t.pdf(x,df)</span><br><span class="line">    t=<span class="built_in">abs</span>(t1p[<span class="number">0</span>]);p=t1p[<span class="number">1</span>]</span><br><span class="line">    x1=x[x&lt;=-t]; y1=y[x&lt;=-t];</span><br><span class="line">    x2=x[x&gt;=t]; y2=y[x&gt;=t];</span><br><span class="line">    print(<span class="string">&quot;  样本均值： \t%8.4f &quot;</span>%X.mean())</span><br><span class="line">    print(<span class="string">&quot;  单样本t检验:    t=%6.3f  p=%6.4f&quot;</span>%(t,p))</span><br><span class="line">    t_interval=st.t.interval(<span class="number">0.95</span>,<span class="built_in">len</span>(X)-<span class="number">1</span>,X.mean(),X.std())</span><br><span class="line">    print(<span class="string">&quot;   t置信区间:\t(%7.4f, %7.4f)&quot;</span>%(t_interval[<span class="number">0</span>],t_interval[<span class="number">1</span>]))</span><br><span class="line">    plt.plot(x,y); plt.hlines(<span class="number">0</span>,-<span class="number">4</span>,<span class="number">4</span>);</span><br><span class="line">    plt.vlines(x1,<span class="number">0</span>,y1,colors=<span class="string">&#x27;r&#x27;</span>); plt.vlines(x2,<span class="number">0</span>,y2,colors=<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line">    plt.vlines(st.t.ppf(<span class="number">0.05</span>/<span class="number">2</span>,df),<span class="number">0</span>,<span class="number">0.2</span>,colors=<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">    plt.vlines(-st.t.ppf(<span class="number">0.05</span>/<span class="number">2</span>,df),<span class="number">0</span>,<span class="number">0.2</span>,colors=<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">    plt.text(-<span class="number">0.6</span>,<span class="number">0.2</span>,<span class="string">r&quot;$\alpha$=%3.2f&quot;</span>%<span class="number">0.05</span>,fontsize=<span class="number">15</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ttest_1plot(BSdata.身高,<span class="number">166</span>)  <span class="comment">#总体均值为166时的推断图 </span></span><br></pre></td></tr></table></figure><pre><code>  样本均值：     168.5192   单样本t检验:    t= 2.266  p=0.0278   t置信区间:    (152.4217, 184.6167)</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070150534.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ttest_1plot(BSdata.身高,<span class="number">170</span>)  <span class="comment">#总体均值为170时的推断图 </span></span><br></pre></td></tr></table></figure><pre><code>  样本均值：     168.5192   单样本t检验:    t= 1.332  p=0.1889   t置信区间:    (152.4217, 184.6167)</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070152901.png" alt="png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第6章-数据的统计分析及可视化&quot;&gt;&lt;a href=&quot;#第6章-数据的统计分析及可视化&quot; class=&quot;headerlink&quot; title=&quot;第6章 数据的统计分析及可视化&quot;&gt;&lt;/a&gt;第6章 数据的统计分析及可视化&lt;/h1&gt;&lt;h2 id=&quot;6-1-随机变量及其分布&quot;</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>第5章-数据的直观分析</title>
    <link href="https://zhangkh.top/36b38058.html"/>
    <id>https://zhangkh.top/36b38058.html</id>
    <published>2021-12-06T17:43:02.000Z</published>
    <updated>2021-12-06T17:53:57.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第5章-数据的直观分析及可视化"><a href="#第5章-数据的直观分析及可视化" class="headerlink" title="第5章  数据的直观分析及可视化"></a>第5章  数据的直观分析及可视化</h2><h2 id="5-1-特殊统计图的绘制"><a href="#5-1-特殊统计图的绘制" class="headerlink" title="5.1 特殊统计图的绘制"></a>5.1 特殊统计图的绘制</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基本设置</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np                             <span class="comment">#加载numpy包</span></span><br><span class="line">np.set_printoptions(precision=<span class="number">4</span>)               <span class="comment">#设置numpy输出为4位有效数</span></span><br></pre></td></tr></table></figure><h3 id="5-1-1-函数图"><a href="#5-1-1-函数图" class="headerlink" title="5.1.1 函数图"></a>5.1.1 函数图</h3><p>（1）初等函数图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> pi                 <span class="comment">#调用math中的圆周率参数</span></span><br><span class="line">x=np.linspace(<span class="number">0</span>,<span class="number">4</span>*pi,<span class="number">60</span>);x          <span class="comment">#生成[0,4*pi]上30个等差数列</span></span><br></pre></td></tr></table></figure><pre><code>array([ 0.    ,  0.213 ,  0.426 ,  0.639 ,  0.852 ,  1.0649,  1.2779,        1.4909,  1.7039,  1.9169,  2.1299,  2.3429,  2.5559,  2.7689,        2.9819,  3.1948,  3.4078,  3.6208,  3.8338,  4.0468,  4.2598,        4.4728,  4.6858,  4.8988,  5.1117,  5.3247,  5.5377,  5.7507,        5.9637,  6.1767,  6.3897,  6.6027,  6.8157,  7.0286,  7.2416,        7.4546,  7.6676,  7.8806,  8.0936,  8.3066,  8.5196,  8.7326,        8.9456,  9.1585,  9.3715,  9.5845,  9.7975, 10.0105, 10.2235,       10.4365, 10.6495, 10.8625, 11.0754, 11.2884, 11.5014, 11.7144,       11.9274, 12.1404, 12.3534, 12.5664])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> sin,cos,log,exp   <span class="comment">#调用numpy中的初等函数</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt     <span class="comment">#加载matplotlib包的绘图函数</span></span><br><span class="line">plt.plot(x,sin(x));                 <span class="comment">#正弦函数 y=sin(x)</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070144478.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,cos(x));                 <span class="comment">#余弦函数 y=cos(x)</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070144246.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,log(x+<span class="number">1</span>));               <span class="comment">#对数函数 y=log(x+1)</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070144222.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,exp(x));                 <span class="comment">#指数函数 y=exp(x)</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070145154.png" alt="png"></p><p>（2）椭圆函数图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t=np.linspace(<span class="number">0</span>,<span class="number">2</span>*pi);</span><br><span class="line">x=<span class="number">2</span>*sin(t);y=<span class="number">3</span>*cos(t);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,y,c=<span class="string">&#x27;red&#x27;</span>); </span><br><span class="line">plt.axvline(x=<span class="number">0</span>); plt.axhline(y=<span class="number">0</span>);</span><br><span class="line">plt.text(<span class="number">0.2</span>,<span class="number">1</span>,<span class="string">r&#x27;$\frac&#123;x^2&#125;&#123;a^2&#125;+\frac&#123;y^2&#125;&#123;b^2&#125;=1$&#x27;</span>,fontsize=<span class="number">15</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070146069.png" alt="png"></p><h4 id="5-1-2-气泡图"><a href="#5-1-2-气泡图" class="headerlink" title="5.1.2 气泡图"></a>5.1.2 气泡图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x=np.linspace(-<span class="number">4</span>,<span class="number">4</span>,<span class="number">20</span>); </span><br><span class="line">y=x**<span class="number">2</span>;                         <span class="comment"># y=x^2 抛物线</span></span><br><span class="line">plt.scatter(x,y);               <span class="comment">#二维散点图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070146010.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(x,y,s=<span class="number">8</span>*y);         <span class="comment">#二维气泡图,s=8y</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070146072.png" alt="png"></p><h3 id="5-1-3-三维散点图"><a href="#5-1-3-三维散点图" class="headerlink" title="5.1.3 三维散点图"></a>5.1.3 三维散点图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">X, Y = np.meshgrid(x, x)                <span class="comment">#从坐标向量x,y中返回坐标矩阵</span></span><br><span class="line">Z = np.sin(np.sqrt(X**<span class="number">2</span> + Y**<span class="number">2</span>))        <span class="comment">#Z=sin(sqrt(X^2+Y^2)) </span></span><br><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D </span><br><span class="line">fig = plt.figure() </span><br><span class="line">Axes3D(fig).scatter(X, Y, Z);</span><br></pre></td></tr></table></figure><pre><code>C:\Users\kit\AppData\Local\Temp/ipykernel_16656/3617781357.py:5: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.  Axes3D(fig).scatter(X, Y, Z);</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070146649.png" alt="png"></p><h3 id="5-1-4-三维曲面图"><a href="#5-1-4-三维曲面图" class="headerlink" title="5.1.4 三维曲面图"></a>5.1.4 三维曲面图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D </span><br><span class="line">fig = plt.figure() </span><br><span class="line">Axes3D(fig).plot_surface(X, Y, Z);</span><br></pre></td></tr></table></figure><pre><code>C:\Users\kit\AppData\Local\Temp/ipykernel_16656/932890556.py:3: MatplotlibDeprecationWarning: Axes3D(fig) adding itself to the figure is deprecated since 3.4. Pass the keyword argument auto_add_to_figure=False and use fig.add_axes(ax) to suppress this warning. The default value of auto_add_to_figure will change to False in mpl3.5 and True values will no longer work in 3.6.  This is consistent with other Axes classes.  Axes3D(fig).plot_surface(X, Y, Z);</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070146440.png" alt="png"></p><h3 id="5-2-Seaborn-统计绘图"><a href="#5-2-Seaborn-统计绘图" class="headerlink" title="5.2 Seaborn 统计绘图"></a>5.2 Seaborn 统计绘图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!pip install seaborn</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns  <span class="comment">#加载seaborn包</span></span><br></pre></td></tr></table></figure><h2 id="5-2-1-seaborn绘图特点"><a href="#5-2-1-seaborn绘图特点" class="headerlink" title="5.2.1  seaborn绘图特点"></a>5.2.1  seaborn绘图特点</h2><h3 id="5-2-1-1-统计图的绘制"><a href="#5-2-1-1-统计图的绘制" class="headerlink" title="5.2.1.1  统计图的绘制"></a>5.2.1.1  统计图的绘制</h3><h3 id="5-2-1-2-分组图的绘制"><a href="#5-2-1-2-分组图的绘制" class="headerlink" title="5.2.1.2  分组图的绘制"></a>5.2.1.2  分组图的绘制</h3><h3 id="5-2-1-3-分面图的绘制"><a href="#5-2-1-3-分面图的绘制" class="headerlink" title="5.2.1.3  分面图的绘制"></a>5.2.1.3  分面图的绘制</h3><h2 id="5-2-2-seaborn中的统计图"><a href="#5-2-2-seaborn中的统计图" class="headerlink" title="5.2.2 seaborn中的统计图"></a>5.2.2 seaborn中的统计图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#（1）读取绘图用数据</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">BSdata=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>);BSdata.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#（2）中文字体段时需设置字体</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt             </span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>]; <span class="comment">#设置中文字体为&#x27;黑体&#x27;</span></span><br><span class="line">plt.rc(<span class="string">&#x27;axes&#x27;</span>, unicode_minus=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h4 id="5-2-2-1-箱线图（boxplot）"><a href="#5-2-2-1-箱线图（boxplot）" class="headerlink" title="5.2.2.1 箱线图（boxplot）"></a>5.2.2.1 箱线图（boxplot）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.boxplot(x=BSdata[<span class="string">&#x27;身高&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070146232.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.boxplot(y=BSdata[<span class="string">&#x27;身高&#x27;</span>]); <span class="comment">#竖着放的箱线图，也就是将x换成y</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070146855.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分组绘制箱线图，分组因子是“性别”，在x轴不同位置绘制。</span></span><br><span class="line">sns.boxplot(x=<span class="string">&#x27;性别&#x27;</span>,y=<span class="string">&#x27;身高&#x27;</span>,data=BSdata);</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070146998.png" alt="png"><br>​    </p><h5 id="5-2-2-2-小提琴图（violinplot）"><a href="#5-2-2-2-小提琴图（violinplot）" class="headerlink" title="5.2.2.2 小提琴图（violinplot）"></a>5.2.2.2 小提琴图（violinplot）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.violinplot(x=<span class="string">&#x27;开设&#x27;</span>, y=<span class="string">&#x27;支出&#x27;</span>, hue=<span class="string">&#x27;性别&#x27;</span>, data=BSdata);</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147572.png" alt="png"><br>​    </p><h5 id="5-2-2-3-点图（stripplot，航线图）"><a href="#5-2-2-3-点图（stripplot，航线图）" class="headerlink" title="5.2.2.3 点图（stripplot，航线图）"></a>5.2.2.3 点图（stripplot，航线图）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.stripplot(x=<span class="string">&#x27;性别&#x27;</span>, y=<span class="string">&#x27;身高&#x27;</span>, data=BSdata, jitter=<span class="literal">True</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147294.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.stripplot(x=<span class="string">&#x27;性别&#x27;</span>, y=<span class="string">&#x27;身高&#x27;</span>, data=BSdata, jitter=<span class="literal">False</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147753.png" alt="png"></p><h5 id="5-2-2-4-条图（barplot）"><a href="#5-2-2-4-条图（barplot）" class="headerlink" title="5.2.2.4 条图（barplot）"></a>5.2.2.4 条图（barplot）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.barplot(x=<span class="string">&#x27;性别&#x27;</span>, y=<span class="string">&#x27;身高&#x27;</span>, data=BSdata); <span class="comment">#不同性别身高均值标准差图</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147582.png" alt="png"><br>​    </p><h5 id="5-2-2-5-计数图（countplot）"><a href="#5-2-2-5-计数图（countplot）" class="headerlink" title="5.2.2.5 计数图（countplot）"></a>5.2.2.5 计数图（countplot）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.countplot(x=<span class="string">&#x27;开设&#x27;</span>, hue=<span class="string">&quot;课程&quot;</span>, data=BSdata);</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147567.png" alt="png"><br>​    </p><h5 id="5-2-2-6-分组关系图（factorplot）"><a href="#5-2-2-6-分组关系图（factorplot）" class="headerlink" title="5.2.2.6 分组关系图（factorplot）"></a>5.2.2.6 分组关系图（factorplot）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> warnings  </span><br><span class="line">warnings.filterwarnings(<span class="string">&quot;ignore&quot;</span>)            <span class="comment">#忽略警告信息</span></span><br><span class="line">sns.factorplot(x=<span class="string">&#x27;性别&#x27;</span>,col=<span class="string">&quot;开设&quot;</span>,col_wrap=<span class="number">3</span>,data=BSdata,kind=<span class="string">&quot;count&quot;</span>,size=<span class="number">2</span>,aspect=<span class="number">1.5</span>);</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147539.png" alt="png"><br>​    </p><h5 id="5-2-2-7-概率分布图（distplot）"><a href="#5-2-2-7-概率分布图（distplot）" class="headerlink" title="5.2.2.7 概率分布图（distplot）"></a>5.2.2.7 概率分布图（distplot）</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;身高&#x27;</span>].hist(); </span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147773.png" alt="png"><br>​    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.distplot(BSdata[<span class="string">&#x27;身高&#x27;</span>], kde=<span class="literal">True</span>, bins=<span class="number">10</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147719.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#针对双变量，可使用Seaborn中的jointplot()函数。</span></span><br><span class="line">sns.jointplot(x=<span class="string">&#x27;身高&#x27;</span>, y=<span class="string">&#x27;体重&#x27;</span>, data=BSdata); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147612.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sns.pairplot(BSdata[[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,<span class="string">&#x27;支出&#x27;</span>]]); <span class="comment">#配对散点图</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147316.png" alt="png"><br>​    </p><h2 id="5-3-ggplot-绘图系统"><a href="#5-3-ggplot-绘图系统" class="headerlink" title="5.3 ggplot 绘图系统"></a>5.3 ggplot 绘图系统</h2><h3 id="5-3-1-ggplot与plotnine包"><a href="#5-3-1-ggplot与plotnine包" class="headerlink" title="5.3.1 ggplot与plotnine包"></a>5.3.1 ggplot与plotnine包</h3><h4 id="5-3-1-1-包的安装"><a href="#5-3-1-1-包的安装" class="headerlink" title="5.3.1.1 包的安装"></a>5.3.1.1 包的安装</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!pip install ggplot    #在系统上安装ggplot包</span></span><br><span class="line"><span class="comment">#!pip install plotnine    #在系统上安装plotnine包</span></span><br></pre></td></tr></table></figure><h4 id="5-3-1-2-包的加载与设置"><a href="#5-3-1-2-包的加载与设置" class="headerlink" title="5.3.1.2 包的加载与设置"></a>5.3.1.2 包的加载与设置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> plotnine <span class="keyword">import</span> *    <span class="comment">#加载和调用ggplot所有方法</span></span><br><span class="line">theme_set(theme_bw(base_family=<span class="string">&#x27;SimHei&#x27;</span>)); </span><br><span class="line"><span class="comment">#设置图形主题背景为白色bw、中文字体为黑体SimHei</span></span><br></pre></td></tr></table></figure><h3 id="5-3-2-ggplot-基本绘图"><a href="#5-3-2-ggplot-基本绘图" class="headerlink" title="5.3.2 ggplot 基本绘图"></a>5.3.2 ggplot 基本绘图</h3><h4 id="5-3-2-1-基本定义"><a href="#5-3-2-1-基本定义" class="headerlink" title="5.3.2.1  基本定义"></a>5.3.2.1  基本定义</h4><h4 id="5-3-2-2-ggplot中的图层"><a href="#5-3-2-2-ggplot中的图层" class="headerlink" title="5.3.2.2 ggplot中的图层"></a>5.3.2.2 ggplot中的图层</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GP=ggplot(BSdata,aes(x=<span class="string">&#x27;身高&#x27;</span>,y=<span class="string">&#x27;体重&#x27;</span>)); GP <span class="comment">#绘制直角坐标系</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147943.png" alt="png"><br>​    </p><pre><code>&lt;ggplot: (17305736)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GP + geom_point()  <span class="comment">#增加点图</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147968.png" alt="png"><br>​    </p><pre><code>&lt;ggplot: (17306649)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GP + geom_line()   <span class="comment">#增加线图</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147958.png" alt="png"><br>​    </p><pre><code>&lt;ggplot: (17305817)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GP + geom_point() + geom_line()  <span class="comment">#增加点和线图</span></span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147823.png" alt="png"><br>​    </p><pre><code>&lt;ggplot: (17401378)&gt;</code></pre><h4 id="5-3-3-常见统计图绘制"><a href="#5-3-3-常见统计图绘制" class="headerlink" title="5.3.3 常见统计图绘制"></a>5.3.3 常见统计图绘制</h4><h4 id="5-3-3-1-直方图"><a href="#5-3-3-1-直方图" class="headerlink" title="5.3.3.1 直方图"></a>5.3.3.1 直方图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(BSdata,aes(x=<span class="string">&#x27;身高&#x27;</span>)) + geom_histogram()</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070147885.png" alt="png"><br>​    </p><pre><code>&lt;ggplot: (17411199)&gt;</code></pre><h4 id="5-3-3-2-分组散点图"><a href="#5-3-3-2-分组散点图" class="headerlink" title="5.3.3.2 分组散点图"></a>5.3.3.2 分组散点图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(BSdata,aes(x=<span class="string">&#x27;身高&#x27;</span>,y=<span class="string">&#x27;体重&#x27;</span>,shape=<span class="string">&#x27;性别&#x27;</span>)) + geom_point() </span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070144844.png" alt="png"><br>​    </p><pre><code>&lt;ggplot: (17453695)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(BSdata,aes(x=<span class="string">&#x27;身高&#x27;</span>,y=<span class="string">&#x27;体重&#x27;</span>,color=<span class="string">&#x27;性别&#x27;</span>)) + geom_point()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070148705.png" alt="png"></p><pre><code>&lt;ggplot: (17400528)&gt;</code></pre><h4 id="5-3-3-3-折线图"><a href="#5-3-3-3-折线图" class="headerlink" title="5.3.3.3 折线图"></a>5.3.3.3 折线图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(BSdata,aes(x=<span class="string">&#x27;支出&#x27;</span>,y=<span class="string">&#x27;身高&#x27;</span>)) + geom_line() </span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070144232.png" alt="png"><br>​    </p><pre><code>&lt;ggplot: (17684008)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#共用一个坐标，绘制不同的y值</span></span><br><span class="line">ggplot(BSdata,aes(x=<span class="string">&#x27;支出&#x27;</span>))+geom_line(aes(y=<span class="string">&#x27;身高&#x27;</span>)) + geom_line(aes(y=<span class="string">&#x27;体重&#x27;</span>))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070148593.png" alt="png"></p><pre><code>&lt;ggplot: (17547030)&gt;</code></pre><h4 id="5-3-3-4-分面图"><a href="#5-3-3-4-分面图" class="headerlink" title="5.3.3.4 分面图"></a>5.3.3.4 分面图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在plotnine中可使用facet_wrap参数可以按类型绘制分面图。</span></span><br><span class="line">ggplot(BSdata,aes(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>)) + geom_point() + facet_wrap(<span class="string">&#x27;性别&#x27;</span>,nrow=<span class="number">2</span>) </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070148396.png" alt="png"></p><pre><code>&lt;ggplot: (17588264)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(BSdata,aes(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>)) + geom_point() + facet_wrap(<span class="string">&#x27;性别&#x27;</span>,nrow=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070144534.png" alt="png"></p><pre><code>&lt;ggplot: (17856503)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ggplot(BSdata,aes(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>)) + geom_line() + geom_point() + facet_wrap(<span class="string">&#x27;开设&#x27;</span>,nrow=<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070148044.png" alt="png"></p><pre><code>&lt;ggplot: (17893885)&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(ggplot(BSdata,aes(<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>)) + geom_point() </span><br><span class="line">       + facet_wrap(<span class="string">&#x27;~性别+开设&#x27;</span>,nrow=<span class="number">3</span>))</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070148027.png" alt="png"></p><pre><code>&lt;ggplot: (17934725)&gt;</code></pre><h2 id="5-4-pyecharts动态绘图"><a href="#5-4-pyecharts动态绘图" class="headerlink" title="5.4  pyecharts动态绘图"></a>5.4  pyecharts动态绘图</h2><h3 id="5-4-1-pyecharts简介"><a href="#5-4-1-pyecharts简介" class="headerlink" title="5.4.1  pyecharts简介"></a>5.4.1  pyecharts简介</h3><h4 id="5-4-1-1-关于pyecharts"><a href="#5-4-1-1-关于pyecharts" class="headerlink" title="5.4.1.1 关于pyecharts"></a>5.4.1.1 关于pyecharts</h4><h4 id="5-4-1-2-pyecharts安装与设置"><a href="#5-4-1-2-pyecharts安装与设置" class="headerlink" title="5.4.1.2 pyecharts安装与设置"></a>5.4.1.2 pyecharts安装与设置</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!pip install pyecharts      </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#加载 Jupyter lab中设置 pyecharts 全局显示参数</span></span><br><span class="line"><span class="keyword">from</span> pyecharts.<span class="built_in">globals</span> <span class="keyword">import</span> CurrentConfig, NotebookType</span><br><span class="line">CurrentConfig.NOTEBOOK_TYPE = NotebookType.JUPYTER_LAB     </span><br><span class="line"><span class="keyword">import</span> pyecharts.options <span class="keyword">as</span> opts                                     <span class="comment">#并加载pyecharts选项</span></span><br><span class="line">figsize=opts.InitOpts(width=<span class="string">&#x27;560px&#x27;</span>,height=<span class="string">&#x27;380px&#x27;</span>,bg_color=<span class="string">&#x27;white&#x27;</span>) <span class="comment">#设置图形大小和背景色</span></span><br></pre></td></tr></table></figure><h3 id="5-4-2-pyeharts基本绘图"><a href="#5-4-2-pyeharts基本绘图" class="headerlink" title="5.4.2  pyeharts基本绘图"></a>5.4.2  pyeharts基本绘图</h3><h4 id="5-4-2-1-仪表盘"><a href="#5-4-2-1-仪表盘" class="headerlink" title="5.4.2.1 仪表盘"></a>5.4.2.1 仪表盘</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Gauge</span><br><span class="line">Gauge().load_javascript() <span class="comment">#在Jupyterlab中制图前需加载一次JavaScript函数！！</span></span><br></pre></td></tr></table></figure><pre><code>&lt;pyecharts.render.display.Javascript at 0x1110fee0&gt;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Gauge().add(&quot;&quot;,[(&quot;完成率&quot;, 66.6)]).render_notebook()</span></span><br><span class="line">Gauge(figsize).add(<span class="string">&quot;&quot;</span>,[(<span class="string">&quot;完成率&quot;</span>, <span class="number">90</span>)]).render_notebook()</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="0f147b0fdf3640ce8f60025bd61b5ee3" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_0f147b0fdf3640ce8f60025bd61b5ee3 = echarts.init(            document.getElementById('0f147b0fdf3640ce8f60025bd61b5ee3'), 'white', {renderer: 'canvas'});        var option_0f147b0fdf3640ce8f60025bd61b5ee3 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "gauge",            "title": {                "show": true,                "offsetCenter": [                    0,                    "-40%"                ],                "color": "#333",                "fontStyle": "normal",                "fontWeight": "normal",                "fontFamily": "sans-serif",                "fontSize": 15,                "backgroundColor": "transparent",                "borderColor": "transparent",                "borderWidth": 0,                "borderRadius": 0,                "padding": 0,                "shadowColor": "transparent",                "shadowBlur": 0,                "shadowOffsetX": 0,                "shadowOffsetY": 0            },            "detail": {                "show": true,                "backgroundColor": "transparent",                "borderWidth": 0,                "borderColor": "transparent",                "offsetCenter": [                    0,                    "-40%"                ],                "formatter": "{value}%",                "color": "auto",                "fontStyle": "normal",                "fontWeight": "normal",                "fontFamily": "sans-serif",                "fontSize": 15,                "borderRadius": 0,                "padding": 0,                "shadowColor": "transparent",                "shadowBlur": 0,                "shadowOffsetX": 0,                "shadowOffsetY": 0            },            "min": 0,            "max": 100,            "splitNumber": 10,            "radius": "75%",            "startAngle": 225,            "endAngle": -45,            "clockwise": true,            "data": [                {                    "name": "\u5b8c\u6210\u7387",                    "value": 90                }            ],            "pointer": {                "show": true,                "length": "80%",                "width": 8            }        }    ],    "legend": [        {            "data": [                ""            ],            "selected": {                "": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    }};        chart_0f147b0fdf3640ce8f60025bd61b5ee3.setOption(option_0f147b0fdf3640ce8f60025bd61b5ee3);    </script></body></html><h4 id="5-4-2-2-条图"><a href="#5-4-2-2-条图" class="headerlink" title="5.4.2.2 条图"></a>5.4.2.2 条图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基本的pyecharts绘图是基于列表数据的</span></span><br><span class="line">X=[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>]</span><br><span class="line">Y=[<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">Z=[<span class="number">6</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">7</span>,<span class="number">4</span>,<span class="number">1</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Bar          <span class="comment">#加载pyecharts绘制条图(Bar)函数</span></span><br><span class="line">bar1=Bar(figsize)                         <span class="comment">#初始化条图</span></span><br><span class="line">bar1.add_xaxis(X).add_yaxis(<span class="string">&quot;垂直条图&quot;</span>,Y)   </span><br><span class="line">bar1.render_notebook()  </span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="c8c0a294d15146eaacbc7841b5e54541" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_c8c0a294d15146eaacbc7841b5e54541 = echarts.init(            document.getElementById('c8c0a294d15146eaacbc7841b5e54541'), 'white', {renderer: 'canvas'});        var option_c8c0a294d15146eaacbc7841b5e54541 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "name": "\u5782\u76f4\u6761\u56fe",            "legendHoverLink": true,            "data": [                1,                4,                7,                3,                2,                5,                6            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u5782\u76f4\u6761\u56fe"            ],            "selected": {                "\u5782\u76f4\u6761\u56fe": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_c8c0a294d15146eaacbc7841b5e54541.setOption(option_c8c0a294d15146eaacbc7841b5e54541);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Bar(figsize).add_xaxis(X).add_yaxis(<span class="string">&quot;&quot;</span>,Y).render_notebook()  <span class="comment">#链式写法</span></span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="46754134875e44beb57e1dfcc5ccb0fa" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_46754134875e44beb57e1dfcc5ccb0fa = echarts.init(            document.getElementById('46754134875e44beb57e1dfcc5ccb0fa'), 'white', {renderer: 'canvas'});        var option_46754134875e44beb57e1dfcc5ccb0fa = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "legendHoverLink": true,            "data": [                1,                4,                7,                3,                2,                5,                6            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                ""            ],            "selected": {                "": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_46754134875e44beb57e1dfcc5ccb0fa.setOption(option_46754134875e44beb57e1dfcc5ccb0fa);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bar2=Bar(figsize) </span><br><span class="line">bar2.add_xaxis(X).add_yaxis(<span class="string">&quot;水平条图&quot;</span>,Y).reversal_axis()     </span><br><span class="line">bar2.render_notebook()  </span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="7a76755de56c49a9b4e90bb5f7703258" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_7a76755de56c49a9b4e90bb5f7703258 = echarts.init(            document.getElementById('7a76755de56c49a9b4e90bb5f7703258'), 'white', {renderer: 'canvas'});        var option_7a76755de56c49a9b4e90bb5f7703258 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "name": "\u6c34\u5e73\u6761\u56fe",            "legendHoverLink": true,            "data": [                1,                4,                7,                3,                2,                5,                6            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u6c34\u5e73\u6761\u56fe"            ],            "selected": {                "\u6c34\u5e73\u6761\u56fe": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ]        }    ]};        chart_7a76755de56c49a9b4e90bb5f7703258.setOption(option_7a76755de56c49a9b4e90bb5f7703258);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bar3=Bar(figsize)</span><br><span class="line">bar3.add_xaxis(X).add_yaxis(<span class="string">&quot;条1&quot;</span>,Y).add_yaxis(<span class="string">&quot;条2&quot;</span>,Z) <span class="comment">#复试条图</span></span><br><span class="line">bar3.render_notebook()  </span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="0c7a6ab65b0d4a839c802a244d85acf0" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_0c7a6ab65b0d4a839c802a244d85acf0 = echarts.init(            document.getElementById('0c7a6ab65b0d4a839c802a244d85acf0'), 'white', {renderer: 'canvas'});        var option_0c7a6ab65b0d4a839c802a244d85acf0 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "name": "\u67611",            "legendHoverLink": true,            "data": [                1,                4,                7,                3,                2,                5,                6            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        },        {            "type": "bar",            "name": "\u67612",            "legendHoverLink": true,            "data": [                6,                5,                3,                2,                7,                4,                1            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u67611",                "\u67612"            ],            "selected": {                "\u67611": true,                "\u67612": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_0c7a6ab65b0d4a839c802a244d85acf0.setOption(option_0c7a6ab65b0d4a839c802a244d85acf0);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bar4=Bar(figsize)</span><br><span class="line">bar4.add_xaxis(X)           <span class="comment">#分段条图</span></span><br><span class="line">bar4.add_yaxis(<span class="string">&quot;条1&quot;</span>,Y,stack=<span class="string">&quot;stack1&quot;</span>)</span><br><span class="line">bar4.add_yaxis(<span class="string">&quot;条2&quot;</span>,Z,stack=<span class="string">&quot;stack1&quot;</span>)</span><br><span class="line">bar4.render_notebook()  </span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="c53fedcd4b614331884f4144dddd9eff" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_c53fedcd4b614331884f4144dddd9eff = echarts.init(            document.getElementById('c53fedcd4b614331884f4144dddd9eff'), 'white', {renderer: 'canvas'});        var option_c53fedcd4b614331884f4144dddd9eff = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "name": "\u67611",            "legendHoverLink": true,            "data": [                1,                4,                7,                3,                2,                5,                6            ],            "showBackground": false,            "stack": "stack1",            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        },        {            "type": "bar",            "name": "\u67612",            "legendHoverLink": true,            "data": [                6,                5,                3,                2,                7,                4,                1            ],            "showBackground": false,            "stack": "stack1",            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u67611",                "\u67612"            ],            "selected": {                "\u67611": true,                "\u67612": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_c53fedcd4b614331884f4144dddd9eff.setOption(option_c53fedcd4b614331884f4144dddd9eff);    </script></body></html><h4 id="5-4-2-3-饼图"><a href="#5-4-2-3-饼图" class="headerlink" title="5.4.2.3 饼图"></a>5.4.2.3 饼图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XY = [<span class="built_in">list</span>(z) <span class="keyword">for</span> z <span class="keyword">in</span> <span class="built_in">zip</span>(X,Y)];XY    <span class="comment">#形成饼图数据列表格式 </span></span><br><span class="line"><span class="comment">#XY.sort(key=lambda x: x[1]);XY         #数据从小到大排序  </span></span><br></pre></td></tr></table></figure><pre><code>[[&#39;A&#39;, 1], [&#39;B&#39;, 4], [&#39;C&#39;, 7], [&#39;D&#39;, 3], [&#39;E&#39;, 2], [&#39;F&#39;, 5], [&#39;G&#39;, 6]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Pie      <span class="comment">#加载pyecharts绘制饼图(Pie)函数</span></span><br><span class="line">Pie(figsize).add(<span class="string">&quot;饼图&quot;</span>,XY).render_notebook()      </span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="01c62a6f4fd644a8b9c7f6499042d0da" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_01c62a6f4fd644a8b9c7f6499042d0da = echarts.init(            document.getElementById('01c62a6f4fd644a8b9c7f6499042d0da'), 'white', {renderer: 'canvas'});        var option_01c62a6f4fd644a8b9c7f6499042d0da = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "pie",            "name": "\u997c\u56fe",            "clockwise": true,            "data": [                {                    "name": "A",                    "value": 1                },                {                    "name": "B",                    "value": 4                },                {                    "name": "C",                    "value": 7                },                {                    "name": "D",                    "value": 3                },                {                    "name": "E",                    "value": 2                },                {                    "name": "F",                    "value": 5                },                {                    "name": "G",                    "value": 6                }            ],            "radius": [                "0%",                "75%"            ],            "center": [                "50%",                "50%"            ],            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ],            "selected": {}        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    }};        chart_01c62a6f4fd644a8b9c7f6499042d0da.setOption(option_01c62a6f4fd644a8b9c7f6499042d0da);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(Pie(figsize)</span><br><span class="line">     .add(<span class="string">&quot;&quot;</span>,XY)</span><br><span class="line">     .set_series_opts(opts.LabelOpts(formatter=<span class="string">&quot;&#123;b&#125;:&#123;c&#125;&quot;</span>)) <span class="comment">#加标签饼图 </span></span><br><span class="line">     .render_notebook() </span><br><span class="line">)</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="36296169f50a486988f8ffa13a655b5c" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_36296169f50a486988f8ffa13a655b5c = echarts.init(            document.getElementById('36296169f50a486988f8ffa13a655b5c'), 'white', {renderer: 'canvas'});        var option_36296169f50a486988f8ffa13a655b5c = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "pie",            "clockwise": true,            "data": [                {                    "name": "A",                    "value": 1                },                {                    "name": "B",                    "value": 4                },                {                    "name": "C",                    "value": 7                },                {                    "name": "D",                    "value": 3                },                {                    "name": "E",                    "value": 2                },                {                    "name": "F",                    "value": 5                },                {                    "name": "G",                    "value": 6                }            ],            "radius": [                "0%",                "75%"            ],            "center": [                "50%",                "50%"            ],            "label": {                "show": true,                "position": "top",                "margin": 8,                "formatter": "{b}:{c}"            },            "rippleEffect": {                "show": true,                "brushType": "stroke",                "scale": 2.5,                "period": 4            }        }    ],    "legend": [        {            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ],            "selected": {}        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    }};        chart_36296169f50a486988f8ffa13a655b5c.setOption(option_36296169f50a486988f8ffa13a655b5c);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pie(figsize).add(<span class="string">&quot;玫瑰饼图&quot;</span>,XY,rosetype=<span class="string">&quot;radius&quot;</span>).render_notebook()</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="f0d0f75399c54d9a996a2b323d5b2f88" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_f0d0f75399c54d9a996a2b323d5b2f88 = echarts.init(            document.getElementById('f0d0f75399c54d9a996a2b323d5b2f88'), 'white', {renderer: 'canvas'});        var option_f0d0f75399c54d9a996a2b323d5b2f88 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "pie",            "name": "\u73ab\u7470\u997c\u56fe",            "clockwise": true,            "data": [                {                    "name": "A",                    "value": 1                },                {                    "name": "B",                    "value": 4                },                {                    "name": "C",                    "value": 7                },                {                    "name": "D",                    "value": 3                },                {                    "name": "E",                    "value": 2                },                {                    "name": "F",                    "value": 5                },                {                    "name": "G",                    "value": 6                }            ],            "radius": [                "0%",                "75%"            ],            "center": [                "50%",                "50%"            ],            "roseType": "radius",            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ],            "selected": {}        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    }};        chart_f0d0f75399c54d9a996a2b323d5b2f88.setOption(option_f0d0f75399c54d9a996a2b323d5b2f88);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pie(figsize).add(<span class="string">&#x27;圆圈图&#x27;</span>,XY,radius=[<span class="string">&#x27;10%&#x27;</span>,<span class="string">&#x27;75%&#x27;</span>]).render_notebook()</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="435eecb81cb24f5baf9c6ebb366ef981" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_435eecb81cb24f5baf9c6ebb366ef981 = echarts.init(            document.getElementById('435eecb81cb24f5baf9c6ebb366ef981'), 'white', {renderer: 'canvas'});        var option_435eecb81cb24f5baf9c6ebb366ef981 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "pie",            "name": "\u5706\u5708\u56fe",            "clockwise": true,            "data": [                {                    "name": "A",                    "value": 1                },                {                    "name": "B",                    "value": 4                },                {                    "name": "C",                    "value": 7                },                {                    "name": "D",                    "value": 3                },                {                    "name": "E",                    "value": 2                },                {                    "name": "F",                    "value": 5                },                {                    "name": "G",                    "value": 6                }            ],            "radius": [                "10%",                "75%"            ],            "center": [                "50%",                "50%"            ],            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ],            "selected": {}        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    }};        chart_435eecb81cb24f5baf9c6ebb366ef981.setOption(option_435eecb81cb24f5baf9c6ebb366ef981);    </script></body></html><h4 id="5-4-2-4-漏斗图"><a href="#5-4-2-4-漏斗图" class="headerlink" title="5.4.2.4 漏斗图"></a>5.4.2.4 漏斗图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Funnel</span><br><span class="line">fun1=Funnel(figsize)</span><br><span class="line">fun1.add(<span class="string">&quot;漏斗图&quot;</span>, XY)</span><br><span class="line">fun1.render_notebook()</span><br><span class="line"><span class="comment">#Funnel(figsize).add(&quot;漏斗图&quot;, XY).render_notebook()</span></span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="f87c7d278ae74c619f79100178ebe009" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_f87c7d278ae74c619f79100178ebe009 = echarts.init(            document.getElementById('f87c7d278ae74c619f79100178ebe009'), 'white', {renderer: 'canvas'});        var option_f87c7d278ae74c619f79100178ebe009 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "funnel",            "name": "\u6f0f\u6597\u56fe",            "data": [                {                    "name": "A",                    "value": 1                },                {                    "name": "B",                    "value": 4                },                {                    "name": "C",                    "value": 7                },                {                    "name": "D",                    "value": 3                },                {                    "name": "E",                    "value": 2                },                {                    "name": "F",                    "value": 5                },                {                    "name": "G",                    "value": 6                }            ],            "sort": "descending",            "gap": 0,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "C",                "B",                "F",                "D",                "A",                "G",                "E"            ],            "selected": {                "A": true,                "B": true,                "C": true,                "D": true,                "E": true,                "F": true,                "G": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    }};        chart_f87c7d278ae74c619f79100178ebe009.setOption(option_f87c7d278ae74c619f79100178ebe009);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fun2=Funnel(figsize)</span><br><span class="line">fun2.add(<span class="string">&quot;漏斗图&quot;</span>, XY,label_opts=opts.LabelOpts(position=<span class="string">&quot;inside&quot;</span>))     </span><br><span class="line">fun2.render_notebook()</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="a8845244b55a48bea0574ec31d5f2339" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_a8845244b55a48bea0574ec31d5f2339 = echarts.init(            document.getElementById('a8845244b55a48bea0574ec31d5f2339'), 'white', {renderer: 'canvas'});        var option_a8845244b55a48bea0574ec31d5f2339 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "funnel",            "name": "\u6f0f\u6597\u56fe",            "data": [                {                    "name": "A",                    "value": 1                },                {                    "name": "B",                    "value": 4                },                {                    "name": "C",                    "value": 7                },                {                    "name": "D",                    "value": 3                },                {                    "name": "E",                    "value": 2                },                {                    "name": "F",                    "value": 5                },                {                    "name": "G",                    "value": 6                }            ],            "sort": "descending",            "gap": 0,            "label": {                "show": true,                "position": "inside",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "C",                "B",                "F",                "D",                "A",                "G",                "E"            ],            "selected": {                "A": true,                "B": true,                "C": true,                "D": true,                "E": true,                "F": true,                "G": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    }};        chart_a8845244b55a48bea0574ec31d5f2339.setOption(option_a8845244b55a48bea0574ec31d5f2339);    </script></body></html><h4 id="5-4-2-5-折线图"><a href="#5-4-2-5-折线图" class="headerlink" title="5.4.2.5 折线图"></a>5.4.2.5 折线图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Line  <span class="comment">#加载pyecharts绘制线图（Line）函数</span></span><br><span class="line">Line(figsize).add_xaxis(X).add_yaxis(<span class="string">&#x27;线图&#x27;</span>,Y).render_notebook()</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="fbaafe1592d941599f54a8814e1ca1f8" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_fbaafe1592d941599f54a8814e1ca1f8 = echarts.init(            document.getElementById('fbaafe1592d941599f54a8814e1ca1f8'), 'white', {renderer: 'canvas'});        var option_fbaafe1592d941599f54a8814e1ca1f8 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "line",            "name": "\u7ebf\u56fe",            "connectNulls": false,            "symbolSize": 4,            "showSymbol": true,            "smooth": false,            "clip": true,            "step": false,            "data": [                [                    "A",                    1                ],                [                    "B",                    4                ],                [                    "C",                    7                ],                [                    "D",                    3                ],                [                    "E",                    2                ],                [                    "F",                    5                ],                [                    "G",                    6                ]            ],            "hoverAnimation": true,            "label": {                "show": true,                "position": "top",                "margin": 8            },            "lineStyle": {                "show": true,                "width": 1,                "opacity": 1,                "curveness": 0,                "type": "solid"            },            "areaStyle": {                "opacity": 0            },            "zlevel": 0,            "z": 0        }    ],    "legend": [        {            "data": [                "\u7ebf\u56fe"            ],            "selected": {                "\u7ebf\u56fe": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_fbaafe1592d941599f54a8814e1ca1f8.setOption(option_fbaafe1592d941599f54a8814e1ca1f8);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">line2=Line(figsize)</span><br><span class="line">line2.add_xaxis(X).add_yaxis(<span class="string">&quot;线1&quot;</span>,Y).add_yaxis(<span class="string">&quot;线2&quot;</span>,Z)</span><br><span class="line">line2.render_notebook()</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="8c6f387ca5e14c4f9965a71fe6576318" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_8c6f387ca5e14c4f9965a71fe6576318 = echarts.init(            document.getElementById('8c6f387ca5e14c4f9965a71fe6576318'), 'white', {renderer: 'canvas'});        var option_8c6f387ca5e14c4f9965a71fe6576318 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "line",            "name": "\u7ebf1",            "connectNulls": false,            "symbolSize": 4,            "showSymbol": true,            "smooth": false,            "clip": true,            "step": false,            "data": [                [                    "A",                    1                ],                [                    "B",                    4                ],                [                    "C",                    7                ],                [                    "D",                    3                ],                [                    "E",                    2                ],                [                    "F",                    5                ],                [                    "G",                    6                ]            ],            "hoverAnimation": true,            "label": {                "show": true,                "position": "top",                "margin": 8            },            "lineStyle": {                "show": true,                "width": 1,                "opacity": 1,                "curveness": 0,                "type": "solid"            },            "areaStyle": {                "opacity": 0            },            "zlevel": 0,            "z": 0        },        {            "type": "line",            "name": "\u7ebf2",            "connectNulls": false,            "symbolSize": 4,            "showSymbol": true,            "smooth": false,            "clip": true,            "step": false,            "data": [                [                    "A",                    6                ],                [                    "B",                    5                ],                [                    "C",                    3                ],                [                    "D",                    2                ],                [                    "E",                    7                ],                [                    "F",                    4                ],                [                    "G",                    1                ]            ],            "hoverAnimation": true,            "label": {                "show": true,                "position": "top",                "margin": 8            },            "lineStyle": {                "show": true,                "width": 1,                "opacity": 1,                "curveness": 0,                "type": "solid"            },            "areaStyle": {                "opacity": 0            },            "zlevel": 0,            "z": 0        }    ],    "legend": [        {            "data": [                "\u7ebf1",                "\u7ebf2"            ],            "selected": {                "\u7ebf1": true,                "\u7ebf2": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "A",                "B",                "C",                "D",                "E",                "F",                "G"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_8c6f387ca5e14c4f9965a71fe6576318.setOption(option_8c6f387ca5e14c4f9965a71fe6576318);    </script></body></html><h3 id="5-4-3-基于数据框的绘图"><a href="#5-4-3-基于数据框的绘图" class="headerlink" title="5.4.3  基于数据框的绘图"></a>5.4.3  基于数据框的绘图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">BS=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>);  <span class="comment">#继续使用BSdata数据</span></span><br><span class="line">BS.head()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>  </tbody></table></div><h4 id="5-4-3-1-原始数据散点图"><a href="#5-4-3-1-原始数据散点图" class="headerlink" title="5.4.3.1 原始数据散点图"></a>5.4.3.1 原始数据散点图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Scatter</span><br><span class="line">scatter1=Scatter(figsize)</span><br><span class="line">scatter1.add_xaxis(BS.身高).add_yaxis(<span class="string">&quot;&quot;</span>,BS.体重)</span><br><span class="line">scatter1.render_notebook()    <span class="comment">#默认散点图的x轴和y轴从0开始</span></span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="86edf0a706084951bb61ce887c3bb2b7" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_86edf0a706084951bb61ce887c3bb2b7 = echarts.init(            document.getElementById('86edf0a706084951bb61ce887c3bb2b7'), 'white', {renderer: 'canvas'});        var option_86edf0a706084951bb61ce887c3bb2b7 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "scatter",            "symbolSize": 10,            "data": [                [                    167,                    71                ],                [                    171,                    68                ],                [                    175,                    73                ],                [                    169,                    74                ],                [                    154,                    55                ],                [                    183,                    76                ],                [                    169,                    71                ],                [                    166,                    66                ],                [                    165,                    69                ],                [                    173,                    63                ],                [                    184,                    82                ],                [                    163,                    66                ],                [                    162,                    63                ],                [                    168,                    72                ],                [                    164,                    66                ],                [                    180,                    81                ],                [                    158,                    63                ],                [                    179,                    75                ],                [                    163,                    65                ],                [                    160,                    62                ],                [                    168,                    70                ],                [                    185,                    83                ],                [                    174,                    76                ],                [                    167,                    72                ],                [                    160,                    62                ],                [                    163,                    65                ],                [                    155,                    50                ],                [                    178,                    78                ],                [                    170,                    70                ],                [                    164,                    58                ],                [                    172,                    71                ],                [                    178,                    77                ],                [                    186,                    87                ],                [                    171,                    69                ],                [                    156,                    56                ],                [                    166,                    68                ],                [                    176,                    78                ],                [                    178,                    78                ],                [                    155,                    54                ],                [                    163,                    62                ],                [                    158,                    60                ],                [                    167,                    68                ],                [                    173,                    70                ],                [                    174,                    71                ],                [                    164,                    62                ],                [                    169,                    65                ],                [                    166,                    70                ],                [                    175,                    68                ],                [                    166,                    65                ],                [                    159,                    58                ],                [                    169,                    73                ],                [                    165,                    67                ]            ],            "label": {                "show": true,                "position": "right",                "margin": 8            }        }    ],    "legend": [        {            "data": [                ""            ],            "selected": {                "": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": null        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_86edf0a706084951bb61ce887c3bb2b7.setOption(option_86edf0a706084951bb61ce887c3bb2b7);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改x轴和y轴的刻度</span></span><br><span class="line">scatter2=(Scatter(figsize)</span><br><span class="line">   .add_xaxis(BS.身高) </span><br><span class="line">   .add_yaxis(<span class="string">&quot;散点图&quot;</span>,BS.体重,label_opts=opts.LabelOpts(is_show=<span class="literal">False</span>))  </span><br><span class="line">   .set_global_opts(</span><br><span class="line">       xaxis_opts=opts.AxisOpts(min_=<span class="number">150</span>), <span class="comment">#x轴最小150</span></span><br><span class="line">       yaxis_opts=opts.AxisOpts(min_=<span class="number">40</span>)   <span class="comment">#y轴最小40 </span></span><br><span class="line">   )</span><br><span class="line">)</span><br><span class="line">scatter2.render_notebook()</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="6ae697b9b4a743b2b581ecb436c197cf" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_6ae697b9b4a743b2b581ecb436c197cf = echarts.init(            document.getElementById('6ae697b9b4a743b2b581ecb436c197cf'), 'white', {renderer: 'canvas'});        var option_6ae697b9b4a743b2b581ecb436c197cf = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "scatter",            "name": "\u6563\u70b9\u56fe",            "symbolSize": 10,            "data": [                [                    167,                    71                ],                [                    171,                    68                ],                [                    175,                    73                ],                [                    169,                    74                ],                [                    154,                    55                ],                [                    183,                    76                ],                [                    169,                    71                ],                [                    166,                    66                ],                [                    165,                    69                ],                [                    173,                    63                ],                [                    184,                    82                ],                [                    163,                    66                ],                [                    162,                    63                ],                [                    168,                    72                ],                [                    164,                    66                ],                [                    180,                    81                ],                [                    158,                    63                ],                [                    179,                    75                ],                [                    163,                    65                ],                [                    160,                    62                ],                [                    168,                    70                ],                [                    185,                    83                ],                [                    174,                    76                ],                [                    167,                    72                ],                [                    160,                    62                ],                [                    163,                    65                ],                [                    155,                    50                ],                [                    178,                    78                ],                [                    170,                    70                ],                [                    164,                    58                ],                [                    172,                    71                ],                [                    178,                    77                ],                [                    186,                    87                ],                [                    171,                    69                ],                [                    156,                    56                ],                [                    166,                    68                ],                [                    176,                    78                ],                [                    178,                    78                ],                [                    155,                    54                ],                [                    163,                    62                ],                [                    158,                    60                ],                [                    167,                    68                ],                [                    173,                    70                ],                [                    174,                    71                ],                [                    164,                    62                ],                [                    169,                    65                ],                [                    166,                    70                ],                [                    175,                    68                ],                [                    166,                    65                ],                [                    159,                    58                ],                [                    169,                    73                ],                [                    165,                    67                ]            ],            "label": {                "show": false,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u6563\u70b9\u56fe"            ],            "selected": {                "\u6563\u70b9\u56fe": true            },            "show": true,            "padding": 5,            "itemGap": 10,            "itemWidth": 25,            "itemHeight": 14        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "min": 150,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": null        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "min": 40,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ],    "title": [        {            "padding": 5,            "itemGap": 10        }    ]};        chart_6ae697b9b4a743b2b581ecb436c197cf.setOption(option_6ae697b9b4a743b2b581ecb436c197cf);    </script></body></html><h3 id="5-4-3-2-统计数据的条图"><a href="#5-4-3-2-统计数据的条图" class="headerlink" title="5.4.3.2 统计数据的条图"></a>5.4.3.2 统计数据的条图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#基本的pyecharts绘图是基于列表数据的, 通常需将数据框转换成列表</span></span><br><span class="line">pt1=BS.pivot_table(index=[<span class="string">&#x27;性别&#x27;</span>],values=[<span class="string">&#x27;学号&#x27;</span>],aggfunc=<span class="built_in">len</span>); pt1</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>    </tr>    <tr>      <th>性别</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>女</th>      <td>25</td>    </tr>    <tr>      <th>男</th>      <td>27</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pyecharts.charts <span class="keyword">import</span> Bar  </span><br><span class="line">(Bar(figsize)</span><br><span class="line">     .add_xaxis(<span class="built_in">list</span>(pt1.index))</span><br><span class="line">     .add_yaxis(<span class="string">&quot;性别统计图&quot;</span>,<span class="built_in">list</span>(pt1.学号))</span><br><span class="line">     .render_notebook()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="b37b1ceb88514edd96a5d766a7589bcb" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_b37b1ceb88514edd96a5d766a7589bcb = echarts.init(            document.getElementById('b37b1ceb88514edd96a5d766a7589bcb'), 'white', {renderer: 'canvas'});        var option_b37b1ceb88514edd96a5d766a7589bcb = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "name": "\u6027\u522b\u7edf\u8ba1\u56fe",            "legendHoverLink": true,            "data": [                25,                27            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u6027\u522b\u7edf\u8ba1\u56fe"            ],            "selected": {                "\u6027\u522b\u7edf\u8ba1\u56fe": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "\u5973",                "\u7537"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_b37b1ceb88514edd96a5d766a7589bcb.setOption(option_b37b1ceb88514edd96a5d766a7589bcb);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt2=BS.pivot_table([<span class="string">&#x27;学号&#x27;</span>],[<span class="string">&#x27;开设&#x27;</span>],[<span class="string">&#x27;性别&#x27;</span>],aggfunc=<span class="built_in">len</span>); pt2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead tr th &#123;    text-align: left;&#125;.dataframe thead tr:last-of-type th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th colspan="2" halign="left">学号</th>    </tr>    <tr>      <th>性别</th>      <th>女</th>      <th>男</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>6</td>      <td>5</td>    </tr>    <tr>      <th>不清楚</th>      <td>9</td>      <td>3</td>    </tr>    <tr>      <th>有必要</th>      <td>10</td>      <td>19</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(Bar(figsize)</span><br><span class="line">     .add_xaxis(<span class="built_in">list</span>(pt2.index))</span><br><span class="line">     .add_yaxis(<span class="string">&quot;女&quot;</span>,<span class="built_in">list</span>(pt2.学号.女))</span><br><span class="line">     .add_yaxis(<span class="string">&quot;男&quot;</span>,<span class="built_in">list</span>(pt2.学号.男))</span><br><span class="line">     .render_notebook()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="faed7b7844bd4a33a2725666a3387566" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_faed7b7844bd4a33a2725666a3387566 = echarts.init(            document.getElementById('faed7b7844bd4a33a2725666a3387566'), 'white', {renderer: 'canvas'});        var option_faed7b7844bd4a33a2725666a3387566 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "name": "\u5973",            "legendHoverLink": true,            "data": [                6,                9,                10            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        },        {            "type": "bar",            "name": "\u7537",            "legendHoverLink": true,            "data": [                5,                3,                19            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u5973",                "\u7537"            ],            "selected": {                "\u5973": true,                "\u7537": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "\u4e0d\u5fc5\u8981",                "\u4e0d\u6e05\u695a",                "\u6709\u5fc5\u8981"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_faed7b7844bd4a33a2725666a3387566.setOption(option_faed7b7844bd4a33a2725666a3387566);    </script></body></html><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">pt3=BS.pivot_table([<span class="string">&quot;支出&quot;</span>],[<span class="string">&#x27;开设&#x27;</span>],aggfunc=&#123;np.mean,np.std&#125;);</span><br><span class="line">pt3=pt3.<span class="built_in">round</span>(<span class="number">2</span>); pt3   <span class="comment">#pt3[&#x27;支出&#x27;][&#x27;mean&#x27;]</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead tr th &#123;    text-align: left;&#125;.dataframe thead tr:last-of-type th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th colspan="2" halign="left">支出</th>    </tr>    <tr>      <th></th>      <th>mean</th>      <th>std</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>36.68</td>      <td>26.47</td>    </tr>    <tr>      <th>不清楚</th>      <td>26.29</td>      <td>20.87</td>    </tr>    <tr>      <th>有必要</th>      <td>19.16</td>      <td>18.06</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(Bar(figsize)</span><br><span class="line">      .add_xaxis(<span class="built_in">list</span>(pt3.index))</span><br><span class="line">      .add_yaxis(<span class="string">&quot;均值&quot;</span>,<span class="built_in">list</span>(pt3[<span class="string">&#x27;支出&#x27;</span>][<span class="string">&#x27;mean&#x27;</span>]))  <span class="comment">#list(pt3.iloc[:,0])</span></span><br><span class="line">      .add_yaxis(<span class="string">&quot;标准差&quot;</span>,<span class="built_in">list</span>(pt3[<span class="string">&#x27;支出&#x27;</span>][<span class="string">&#x27;std&#x27;</span>]))</span><br><span class="line">      .render_notebook()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><!DOCTYPE html><html><head>    <meta charset="UTF-8"></head><body>        <div id="a966c56b878941919a521438de07c423" class="chart-container" style="width:560px; height:380px;"></div>    <script>        var chart_a966c56b878941919a521438de07c423 = echarts.init(            document.getElementById('a966c56b878941919a521438de07c423'), 'white', {renderer: 'canvas'});        var option_a966c56b878941919a521438de07c423 = {    "backgroundColor": "white",    "animation": true,    "animationThreshold": 2000,    "animationDuration": 1000,    "animationEasing": "cubicOut",    "animationDelay": 0,    "animationDurationUpdate": 300,    "animationEasingUpdate": "cubicOut",    "animationDelayUpdate": 0,    "color": [        "#c23531",        "#2f4554",        "#61a0a8",        "#d48265",        "#749f83",        "#ca8622",        "#bda29a",        "#6e7074",        "#546570",        "#c4ccd3",        "#f05b72",        "#ef5b9c",        "#f47920",        "#905a3d",        "#fab27b",        "#2a5caa",        "#444693",        "#726930",        "#b2d235",        "#6d8346",        "#ac6767",        "#1d953f",        "#6950a1",        "#918597"    ],    "series": [        {            "type": "bar",            "name": "\u5747\u503c",            "legendHoverLink": true,            "data": [                36.68,                26.29,                19.16            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        },        {            "type": "bar",            "name": "\u6807\u51c6\u5dee",            "legendHoverLink": true,            "data": [                26.47,                20.87,                18.06            ],            "showBackground": false,            "barMinHeight": 0,            "barCategoryGap": "20%",            "barGap": "30%",            "large": false,            "largeThreshold": 400,            "seriesLayoutBy": "column",            "datasetIndex": 0,            "clip": true,            "zlevel": 0,            "z": 2,            "label": {                "show": true,                "position": "top",                "margin": 8            }        }    ],    "legend": [        {            "data": [                "\u5747\u503c",                "\u6807\u51c6\u5dee"            ],            "selected": {                "\u5747\u503c": true,                "\u6807\u51c6\u5dee": true            }        }    ],    "tooltip": {        "show": true,        "trigger": "item",        "triggerOn": "mousemove|click",        "axisPointer": {            "type": "line"        },        "showContent": true,        "alwaysShowContent": false,        "showDelay": 0,        "hideDelay": 100,        "textStyle": {            "fontSize": 14        },        "borderWidth": 0,        "padding": 5    },    "xAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            },            "data": [                "\u4e0d\u5fc5\u8981",                "\u4e0d\u6e05\u695a",                "\u6709\u5fc5\u8981"            ]        }    ],    "yAxis": [        {            "show": true,            "scale": false,            "nameLocation": "end",            "nameGap": 15,            "gridIndex": 0,            "inverse": false,            "offset": 0,            "splitNumber": 5,            "minInterval": 0,            "splitLine": {                "show": false,                "lineStyle": {                    "show": true,                    "width": 1,                    "opacity": 1,                    "curveness": 0,                    "type": "solid"                }            }        }    ]};        chart_a966c56b878941919a521438de07c423.setOption(option_a966c56b878941919a521438de07c423);    </script></body></html>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第5章-数据的直观分析及可视化&quot;&gt;&lt;a href=&quot;#第5章-数据的直观分析及可视化&quot; class=&quot;headerlink&quot; title=&quot;第5章  数据的直观分析及可视化&quot;&gt;&lt;/a&gt;第5章  数据的直观分析及可视化&lt;/h2&gt;&lt;h2 id=&quot;5-1-特殊统计图的绘</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>第4章-数据的探索性分析</title>
    <link href="https://zhangkh.top/ff915ea5.html"/>
    <id>https://zhangkh.top/ff915ea5.html</id>
    <published>2021-12-06T17:34:04.000Z</published>
    <updated>2021-12-06T17:41:11.737Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第4章-数据的探索性分析"><a href="#第4章-数据的探索性分析" class="headerlink" title="第4章 数据的探索性分析"></a>第4章 数据的探索性分析</h2><h3 id="4-1-数据的描述分析"><a href="#4-1-数据的描述分析" class="headerlink" title="4.1 数据的描述分析"></a>4.1 数据的描述分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_rows&#x27;</span>, <span class="number">10</span>)</span><br><span class="line">BSdata=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>); BSdata  <span class="comment">#读取数据</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>47</th>      <td>1538319004</td>      <td>男</td>      <td>175</td>      <td>68</td>      <td>44.4</td>      <td>不清楚</td>      <td>统计方法</td>      <td>SAS</td>    </tr>    <tr>      <th>48</th>      <td>1538254010</td>      <td>女</td>      <td>166</td>      <td>65</td>      <td>5.3</td>      <td>不清楚</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>49</th>      <td>1540294017</td>      <td>女</td>      <td>159</td>      <td>58</td>      <td>71.4</td>      <td>不清楚</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>50</th>      <td>1540365026</td>      <td>女</td>      <td>169</td>      <td>73</td>      <td>5.5</td>      <td>有必要</td>      <td>统计方法</td>      <td>Excel</td>    </tr>    <tr>      <th>51</th>      <td>1540388036</td>      <td>女</td>      <td>165</td>      <td>67</td>      <td>56.8</td>      <td>不必要</td>      <td>概率统计</td>      <td>SAS</td>    </tr>  </tbody></table><p>52 rows × 8 columns</p></div><h3 id="4-1-1-计数据汇总分析"><a href="#4-1-1-计数据汇总分析" class="headerlink" title="4.1.1 计数据汇总分析"></a>4.1.1 计数据汇总分析</h3><p>（1）频数：绝对数 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T1=BSdata[<span class="string">&#x27;性别&#x27;</span>].value_counts();T1 </span><br></pre></td></tr></table></figure><pre><code>男    27女    25Name: 性别, dtype: int64</code></pre><p>（2）频率：相对数 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T1/<span class="built_in">sum</span>(T1)*<span class="number">100</span></span><br></pre></td></tr></table></figure><pre><code>男    51.923077女    48.076923Name: 性别, dtype: float64</code></pre><h3 id="4-1-2-计量数据汇总分析"><a href="#4-1-2-计量数据汇总分析" class="headerlink" title="4.1.2 计量数据汇总分析"></a>4.1.2 计量数据汇总分析</h3><p>（1）均数（算术平均数）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X=BSdata.身高;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.mean()</span><br></pre></td></tr></table></figure><pre><code>168.51923076923077</code></pre><p>（2）中位数 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.median()</span><br></pre></td></tr></table></figure><pre><code>167.5</code></pre><p>（3）极差                      </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R=X.<span class="built_in">max</span>()-X.<span class="built_in">min</span>();R</span><br></pre></td></tr></table></figure><pre><code>32</code></pre><p>（4）方差</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.var() </span><br></pre></td></tr></table></figure><pre><code>64.29374057315235</code></pre><p>（5）标准差</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.std() </span><br></pre></td></tr></table></figure><pre><code>8.01833776871194</code></pre><p>（6）四分位数间距（IQR）                     </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.quantile(<span class="number">0.75</span>)-X.quantile(<span class="number">0.25</span>) </span><br></pre></td></tr></table></figure><pre><code>11.0</code></pre><p>（7）偏度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.skew() </span><br></pre></td></tr></table></figure><pre><code>0.29880755120910174</code></pre><p>（8）峰度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X.kurt()</span><br></pre></td></tr></table></figure><pre><code>-0.42072371559816935</code></pre><h3 id="4-1-3-汇总性统计量"><a href="#4-1-3-汇总性统计量" class="headerlink" title="4.1.3 汇总性统计量"></a>4.1.3 汇总性统计量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.describe()   <span class="comment">#默认为计算计量数据的基本统计量</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>    </tr>  </thead>  <tbody>    <tr>      <th>count</th>      <td>5.200000e+01</td>      <td>52.000000</td>      <td>52.000000</td>      <td>52.000000</td>    </tr>    <tr>      <th>mean</th>      <td>1.523270e+09</td>      <td>168.519231</td>      <td>68.500000</td>      <td>24.511538</td>    </tr>    <tr>      <th>std</th>      <td>1.899525e+07</td>      <td>8.018338</td>      <td>7.711718</td>      <td>21.432060</td>    </tr>    <tr>      <th>min</th>      <td>1.438120e+09</td>      <td>154.000000</td>      <td>50.000000</td>      <td>2.500000</td>    </tr>    <tr>      <th>25%</th>      <td>1.520377e+09</td>      <td>163.000000</td>      <td>63.000000</td>      <td>9.500000</td>    </tr>    <tr>      <th>50%</th>      <td>1.526685e+09</td>      <td>167.500000</td>      <td>68.500000</td>      <td>15.450000</td>    </tr>    <tr>      <th>75%</th>      <td>1.532229e+09</td>      <td>174.000000</td>      <td>73.000000</td>      <td>35.600000</td>    </tr>    <tr>      <th>max</th>      <td>1.540388e+09</td>      <td>186.000000</td>      <td>87.000000</td>      <td>85.600000</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#BSdata[[&#x27;性别&#x27;,&#x27;开设&#x27;,&#x27;课程&#x27;,&#x27;软件&#x27;]].describe() #计数数据统计</span></span><br></pre></td></tr></table></figure><blockquote><p>自编计算基本统计量函数</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">stats</span>(<span class="params">x</span>):</span> </span><br><span class="line">    stat=[x.count(),x.mean(),x.std(),x.<span class="built_in">min</span>(),x.quantile(<span class="number">.25</span>),x.median(), x.quantile(<span class="number">.75</span>),x.<span class="built_in">max</span>(),x.skew(),x.kurt()] </span><br><span class="line">    stat=pd.Series(stat,index=[<span class="string">&#x27;count&#x27;</span>,<span class="string">&#x27;mean&#x27;</span>,<span class="string">&#x27;std&#x27;</span>,<span class="string">&#x27;Min&#x27;</span>, <span class="string">&#x27;25%&#x27;</span>,<span class="string">&#x27;50%&#x27;</span>,<span class="string">&#x27;75%&#x27;</span>, <span class="string">&#x27;max&#x27;</span>,<span class="string">&#x27;skew&#x27;</span>,<span class="string">&#x27;kurt&#x27;</span>])</span><br><span class="line">    <span class="keyword">return</span>(stat) </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stats(BSdata.身高)</span><br></pre></td></tr></table></figure><pre><code>count     52.000000mean     168.519231std        8.018338Min      154.00000025%      163.00000050%      167.50000075%      174.000000max      186.000000skew       0.298808kurt      -0.420724dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stats(BSdata.支出)</span><br></pre></td></tr></table></figure><pre><code>count    52.000000mean     24.511538std      21.432060Min       2.50000025%       9.50000050%      15.45000075%      35.600000max      85.600000skew      1.268351kurt      0.673127dtype: float64</code></pre><h3 id="4-2-数据的直观分析"><a href="#4-2-数据的直观分析" class="headerlink" title="4.2 数据的直观分析"></a>4.2 数据的直观分析</h3><h4 id="4-2-1-常用的绘图函数"><a href="#4-2-1-常用的绘图函数" class="headerlink" title="4.2.1 常用的绘图函数"></a>4.2.1 常用的绘图函数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#绘制图形时，须作一些基本设置</span></span><br><span class="line">%config InlineBackend.figure_format=<span class="string">&#x27;retina&#x27;</span>   <span class="comment">#提高图形显示的清晰度</span></span><br></pre></td></tr></table></figure><h4 id="4-2-1-1-计数数据统计图"><a href="#4-2-1-1-计数数据统计图" class="headerlink" title="4.2.1.1  计数数据统计图"></a>4.2.1.1  计数数据统计图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>] </span><br><span class="line">Y=[<span class="number">1</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">6</span>] </span><br></pre></td></tr></table></figure><ul><li>条图（bar） </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt     <span class="comment">#加载基本绘图包</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.bar(X,Y);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136969.png" alt="png"></p><ul><li>饼图（pie） </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.pie(Y,labels=X); </span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136681.png" alt="png"><br>​    </p><h4 id="4-2-1-2-计量数据统计图"><a href="#4-2-1-2-计量数据统计图" class="headerlink" title="4.2.1.2  计量数据统计图"></a>4.2.1.2  计量数据统计图</h4><ul><li>线图（plot）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(X,Y);</span><br></pre></td></tr></table></figure><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136109.png" alt="png"><br>​    </p><ul><li>直方图（hist） </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.hist(BSdata.身高)    <span class="comment">#频数直方图 ，默认density=False</span></span><br></pre></td></tr></table></figure><pre><code>(array([4., 5., 5., 9., 9., 6., 5., 4., 1., 4.]), array([154. , 157.2, 160.4, 163.6, 166.8, 170. , 173.2, 176.4, 179.6,        182.8, 186. ]), &lt;BarContainer object of 10 artists&gt;)</code></pre><p>​<br><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136032.png" alt="png"><br>​    </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.hist(BSdata.体重)    <span class="comment">#频率直方图 ，density=True</span></span><br></pre></td></tr></table></figure><pre><code>(array([ 1.,  3.,  3.,  7., 12., 12.,  4.,  6.,  3.,  1.]), array([50. , 53.7, 57.4, 61.1, 64.8, 68.5, 72.2, 75.9, 79.6, 83.3, 87. ]), &lt;BarContainer object of 10 artists&gt;)</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136470.png" alt="png"></p><ul><li>散点图（scatter） </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.scatter(BSdata.身高, BSdata.体重); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136972.png" alt="png"></p><h4 id="4-2-1-3-图形参数的设置"><a href="#4-2-1-3-图形参数的设置" class="headerlink" title="4.2.1.3  图形参数的设置"></a>4.2.1.3  图形参数的设置</h4><blockquote><p>标题、标签、标尺及颜色</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(X,Y);                      <span class="comment">#控制图形的颜色colors，c=&#x27;red&#x27; 为红色</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136443.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(X,Y,c=<span class="string">&#x27;red&#x27;</span>);                      <span class="comment">#控制图形的颜色colors，c=&#x27;red&#x27; 为红色</span></span><br><span class="line">plt.ylim(<span class="number">0</span>,<span class="number">8</span>); </span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>];  <span class="comment">#设置中文黑体 </span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;姓名&#x27;</span>); plt.ylabel(<span class="string">&#x27;取值&#x27;</span>);  <span class="comment">#plt.xlabel、plt.ylabel：设置坐标轴名称；</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136024.png" alt="png"></p><blockquote><p>线型和符号 </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(X,Y, linestyle=<span class="string">&#x27;:&#x27;</span>, marker=<span class="string">&#x27;o&#x27;</span>); </span><br><span class="line"><span class="comment"># linestyle：控制连线的线型（-: 实线，--: 虚线，.: 点线）；</span></span><br><span class="line"><span class="comment"># marker：控制符号的类型，例如，&#x27;o&#x27; 绘制实心圆点图。</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070136899.png" alt="png"></p><blockquote><p>绘图函数附加图形 </p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(X,Y,<span class="string">&#x27;o--&#x27;</span>);</span><br><span class="line">plt.axvline(x=<span class="number">4</span>);  <span class="comment"># 水平线：在横坐标x处画水平（plt.axhline）</span></span><br><span class="line">plt.axhline(y=<span class="number">4</span>);  <span class="comment"># 垂直线：在纵坐标y处画垂直线（plt.axvline）</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137621.png" alt="png"></p><blockquote><p>文字函数：text(x, y, labels,…)，在(x, y)处添加用 labels 指定的文字</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(X,Y,<span class="string">&#x27;o--&#x27;</span>);</span><br><span class="line">plt.axvline(x=<span class="number">4</span>);  <span class="comment"># 水平线：在横坐标x处画水平（plt.axhline）</span></span><br><span class="line">plt.axhline(y=<span class="number">4</span>);  <span class="comment"># 垂直线：在纵坐标y处画垂直线（plt.axvline）</span></span><br><span class="line">plt.text(<span class="number">2</span>, <span class="number">7</span>, <span class="string">&#x27; peak point&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137640.png" alt="png"></p><blockquote><p>图例：绘制图形后，可使用 legend 函数给图形加图例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(X,Y,<span class="string">&#x27;.&#x27;</span>, label=<span class="string">&#x27;point&#x27;</span>); plt.legend();</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137900.png" alt="png"></p><blockquote><p>误差线图</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s=[<span class="number">0.1</span>,<span class="number">0.4</span>,<span class="number">0.7</span>,<span class="number">0.3</span>,<span class="number">0.2</span>,<span class="number">0.5</span>,<span class="number">0.6</span>]   <span class="comment">#误差值</span></span><br><span class="line">plt.plot(X,Y); plt.errorbar(X,Y,yerr=s,fmt=<span class="string">&#x27;o&#x27;</span>,capsize=<span class="number">4</span>);  </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137870.png" alt="png"></p><blockquote><p>误差条图</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.bar(X,Y,yerr=s,capsize=<span class="number">4</span>);   <span class="comment">#kw=&#123;&#x27;capsize&#x27;:4&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137838.png" alt="png"></p><h4 id="4-2-1-4-多图的排列与绘制"><a href="#4-2-1-4-多图的排列与绘制" class="headerlink" title="4.2.1.4 多图的排列与绘制"></a>4.2.1.4 多图的排列与绘制</h4><p>一行绘制两个图形 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.subplot(<span class="number">121</span>); plt.bar(X,Y); </span><br><span class="line">plt.subplot(<span class="number">122</span>); plt.plot(Y);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137219.png" alt="png"></p><p>一列绘制两个图形</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.subplot(<span class="number">211</span>); plt.bar(X,Y);</span><br><span class="line">plt.subplot(<span class="number">212</span>); plt.plot(Y);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137632.png" alt="png"></p><p>根据页面大小绘制两个图形</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fig,ax = plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">12</span>,<span class="number">6</span>))  </span><br><span class="line">ax[<span class="number">0</span>].bar(X,Y); ax[<span class="number">1</span>].plot(X,Y);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137784.png" alt="png"></p><p>一页绘制四个图形 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fig,ax=plt.subplots(<span class="number">2</span>,<span class="number">2</span>,figsize=(<span class="number">10</span>,<span class="number">8</span>)) </span><br><span class="line">ax[<span class="number">0</span>,<span class="number">0</span>].bar(X,Y)</span><br><span class="line">ax[<span class="number">0</span>,<span class="number">1</span>].pie(Y,labels=X)</span><br><span class="line">ax[<span class="number">1</span>,<span class="number">0</span>].plot(Y); </span><br><span class="line">ax[<span class="number">1</span>,<span class="number">1</span>].plot(Y,<span class="string">&#x27;.-&#x27;</span>,linewidth=<span class="number">3</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137956.png" alt="png"></p><h3 id="4-2-2-基于-pandas-的绘图"><a href="#4-2-2-基于-pandas-的绘图" class="headerlink" title="4.2.2 基于 pandas 的绘图"></a>4.2.2 基于 pandas 的绘图</h3><h4 id="4-2-2-1-计量数据统计图"><a href="#4-2-2-1-计量数据统计图" class="headerlink" title="4.2.2.1 计量数据统计图"></a>4.2.2.1 计量数据统计图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>]=[<span class="string">&#x27;SimHei&#x27;</span>];  <span class="comment">#设置中文黑体 </span></span><br><span class="line">BSdata[<span class="string">&#x27;体重&#x27;</span>].plot(kind=<span class="string">&#x27;line&#x27;</span>); <span class="comment">#线图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137634.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;体重&#x27;</span>].plot(kind=<span class="string">&#x27;hist&#x27;</span>); <span class="comment">#直方图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137088.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stats(BSdata.体重)</span><br></pre></td></tr></table></figure><pre><code>count    52.000000mean     68.500000std       7.711718Min      50.00000025%      63.00000050%      68.50000075%      73.000000max      87.000000skew      0.002935kurt      0.045948dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;体重&#x27;</span>].plot(kind=<span class="string">&#x27;box&#x27;</span>); <span class="comment">#箱型图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137330.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;体重&#x27;</span>].plot(kind=<span class="string">&#x27;hist&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137379.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;体重&#x27;</span>].plot(kind=<span class="string">&#x27;density&#x27;</span>,title=<span class="string">&#x27;Density&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137309.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,<span class="string">&#x27;支出&#x27;</span>]].plot(subplots=<span class="literal">True</span>,layout=(<span class="number">1</span>,<span class="number">3</span>),kind=<span class="string">&#x27;box&#x27;</span>,figsize=(<span class="number">10</span>,<span class="number">4</span>)); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137146.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,<span class="string">&#x27;支出&#x27;</span>]].plot(subplots=<span class="literal">True</span>,layout=(<span class="number">1</span>,<span class="number">3</span>),kind=<span class="string">&#x27;density&#x27;</span>,figsize=(<span class="number">10</span>,<span class="number">4</span>)); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137058.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>,<span class="string">&#x27;支出&#x27;</span>]].plot(subplots=<span class="literal">True</span>,layout=(<span class="number">3</span>,<span class="number">1</span>),kind=<span class="string">&#x27;density&#x27;</span>,figsize=(<span class="number">10</span>,<span class="number">6</span>));</span><br></pre></td></tr></table></figure><pre><code>C:\Users\kit\miniconda3\lib\site-packages\IPython\core\pylabtools.py:151: UserWarning: Glyph 8722 (\N&#123;MINUS SIGN&#125;) missing from current font.  fig.canvas.print_figure(bytes_io, **kw)</code></pre><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070137697.png" alt="png"></p><h4 id="4-2-2-2-计数数据统计图"><a href="#4-2-2-2-计数数据统计图" class="headerlink" title="4.2.2.2  计数数据统计图"></a>4.2.2.2  计数数据统计图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">T1=BSdata[<span class="string">&#x27;开设&#x27;</span>].value_counts();T1</span><br><span class="line">pd.DataFrame(&#123;<span class="string">&#x27;频数&#x27;</span>:T1,<span class="string">&#x27;频率&#x27;</span>:T1/T1.<span class="built_in">sum</span>()*<span class="number">100</span>&#125;) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>频数</th>      <th>频率</th>    </tr>  </thead>  <tbody>    <tr>      <th>有必要</th>      <td>29</td>      <td>55.769231</td>    </tr>    <tr>      <th>不清楚</th>      <td>12</td>      <td>23.076923</td>    </tr>    <tr>      <th>不必要</th>      <td>11</td>      <td>21.153846</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T1.plot(kind=<span class="string">&#x27;bar&#x27;</span>); <span class="comment">#T1.sort_values().plot(kind=&#x27;bar&#x27;); </span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138833.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T1.plot(kind=<span class="string">&#x27;pie&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138003.png" alt="png"></p><h3 id="4-3-数据的分组分析"><a href="#4-3-数据的分组分析" class="headerlink" title="4.3 数据的分组分析"></a>4.3 数据的分组分析</h3><h4 id="4-3-1-一维频数表与图"><a href="#4-3-1-一维频数表与图" class="headerlink" title="4.3.1 一维频数表与图"></a>4.3.1 一维频数表与图</h4><h5 id="4-3-1-1-计数数据频数分布"><a href="#4-3-1-1-计数数据频数分布" class="headerlink" title="4.3.1.1 计数数据频数分布"></a>4.3.1.1 计数数据频数分布</h5><ul><li>（1）value_counts </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;开设&#x27;</span>].value_counts() </span><br></pre></td></tr></table></figure><pre><code>有必要    29不清楚    12不必要    11Name: 开设, dtype: int64</code></pre><ul><li>（2）自定义计数汇总函数 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tab</span>(<span class="params">x, plot=<span class="literal">False</span></span>):</span> <span class="comment">#计数频数表</span></span><br><span class="line">       f=x.value_counts();f</span><br><span class="line">       s=<span class="built_in">sum</span>(f);</span><br><span class="line">       p=<span class="built_in">round</span>(f/s*<span class="number">100</span>, <span class="number">3</span>); p </span><br><span class="line">       T1=pd.concat([f,p], axis=<span class="number">1</span>); </span><br><span class="line">       T1.columns=[<span class="string">&#x27;例数&#x27;</span>,<span class="string">&#x27;构成比&#x27;</span>];</span><br><span class="line">       T2=pd.DataFrame(&#123;<span class="string">&#x27;例数&#x27;</span>:s,<span class="string">&#x27;构成比&#x27;</span>:<span class="number">100.00</span>&#125;, index=[<span class="string">&#x27;合计&#x27;</span>])</span><br><span class="line">       Tab=T1.append(T2) </span><br><span class="line">       <span class="keyword">if</span> plot: </span><br><span class="line">           fig,ax=plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">10</span>,<span class="number">4</span>)) </span><br><span class="line">           ax[<span class="number">0</span>].bar(f.index, f); <span class="comment">#条图 </span></span><br><span class="line">           ax[<span class="number">1</span>].pie(p, labels=p.index, autopct=<span class="string">&#x27;%1.2f%%&#x27;</span>);<span class="comment">#饼图</span></span><br><span class="line">       <span class="keyword">return</span>(<span class="built_in">round</span>(Tab, <span class="number">3</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tab(BSdata.软件,<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>例数</th>      <th>构成比</th>    </tr>  </thead>  <tbody>    <tr>      <th>Excel</th>      <td>15</td>      <td>28.846</td>    </tr>    <tr>      <th>SPSS</th>      <td>9</td>      <td>17.308</td>    </tr>    <tr>      <th>R</th>      <td>7</td>      <td>13.462</td>    </tr>    <tr>      <th>Python</th>      <td>6</td>      <td>11.538</td>    </tr>    <tr>      <th>SAS</th>      <td>6</td>      <td>11.538</td>    </tr>    <tr>      <th>Matlab</th>      <td>5</td>      <td>9.615</td>    </tr>    <tr>      <th>No</th>      <td>4</td>      <td>7.692</td>    </tr>    <tr>      <th>合计</th>      <td>52</td>      <td>100.000</td>    </tr>  </tbody></table></div><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138668.png" alt="png"></p><h4 id="4-3-1-2-计量数据频数分布"><a href="#4-3-1-2-计量数据频数分布" class="headerlink" title="4.3.1.2 计量数据频数分布"></a>4.3.1.2 计量数据频数分布</h4><p>（1）身高频数表与条图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H_cut=pd.cut(BSdata.身高, bins=<span class="number">10</span>); H_cut  <span class="comment">#身高分10组，bins=[150,160,170,180,190,200]</span></span><br></pre></td></tr></table></figure><pre><code>0       (166.8, 170.0]1       (170.0, 173.2]2       (173.2, 176.4]3       (166.8, 170.0]4     (153.968, 157.2]            ...       47      (173.2, 176.4]48      (163.6, 166.8]49      (157.2, 160.4]50      (166.8, 170.0]51      (163.6, 166.8]Name: 身高, Length: 52, dtype: categoryCategories (10, interval[float64, right]): [(153.968, 157.2] &lt; (157.2, 160.4] &lt; (160.4, 163.6] &lt; (163.6, 166.8] ... (173.2, 176.4] &lt; (176.4, 179.6] &lt; (179.6, 182.8] &lt; (182.8, 186.0]]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H_cut.value_counts() <span class="comment">#分组再统计 </span></span><br></pre></td></tr></table></figure><pre><code>(166.8, 170.0]      10(163.6, 166.8]       9(157.2, 160.4]       5(160.4, 163.6]       5(170.0, 173.2]       5(173.2, 176.4]       5(153.968, 157.2]     4(176.4, 179.6]       4(182.8, 186.0]       4(179.6, 182.8]       1Name: 身高, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H_cut.value_counts().plot(kind=<span class="string">&#x27;bar&#x27;</span>);   <span class="comment">#将结果画成垂直条图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138344.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.身高.hist();</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138480.png" alt="png"></p><p>（2）支出频数表 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O_cut=pd.cut(BSdata.支出, bins=[<span class="number">0</span>,<span class="number">10</span>,<span class="number">30</span>,<span class="number">100</span>]); <span class="comment">#O_cut</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O_cut.value_counts() </span><br></pre></td></tr></table></figure><pre><code>(10, 30]     21(0, 10]      16(30, 100]    15Name: 支出, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O_cut.value_counts().plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138267.png" alt="png"></p><p>（3）自定义计量频率分析函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">freq</span>(<span class="params">X,bins=<span class="number">10</span></span>):</span>      <span class="comment">#计量数据的频数表与直方图</span></span><br><span class="line">    H=plt.hist(X,bins);</span><br><span class="line">    a=H[<span class="number">1</span>][:-<span class="number">1</span>]; b=H[<span class="number">1</span>][<span class="number">1</span>:]; f=H[<span class="number">0</span>];    </span><br><span class="line">    p=f/<span class="built_in">sum</span>(f)*<span class="number">100</span>;p</span><br><span class="line">    cp=np.cumsum(p);cp</span><br><span class="line">    Freq=pd.DataFrame([a,b,f,p,cp])</span><br><span class="line">    Freq.index=[<span class="string">&#x27;[下限a&#x27;</span>,<span class="string">&#x27;上限b)&#x27;</span>,<span class="string">&#x27;频数f&#x27;</span>,<span class="string">&#x27;频率p(%)&#x27;</span>,<span class="string">&#x27;累计频数cp(%)&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span>(<span class="built_in">round</span>(Freq.T,<span class="number">2</span>))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">freq(BSdata.体重) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>[下限a</th>      <th>上限b)</th>      <th>频数f</th>      <th>频率p(%)</th>      <th>累计频数cp(%)</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>50.0</td>      <td>53.7</td>      <td>1.0</td>      <td>1.92</td>      <td>1.92</td>    </tr>    <tr>      <th>1</th>      <td>53.7</td>      <td>57.4</td>      <td>3.0</td>      <td>5.77</td>      <td>7.69</td>    </tr>    <tr>      <th>2</th>      <td>57.4</td>      <td>61.1</td>      <td>3.0</td>      <td>5.77</td>      <td>13.46</td>    </tr>    <tr>      <th>3</th>      <td>61.1</td>      <td>64.8</td>      <td>7.0</td>      <td>13.46</td>      <td>26.92</td>    </tr>    <tr>      <th>4</th>      <td>64.8</td>      <td>68.5</td>      <td>12.0</td>      <td>23.08</td>      <td>50.00</td>    </tr>    <tr>      <th>5</th>      <td>68.5</td>      <td>72.2</td>      <td>12.0</td>      <td>23.08</td>      <td>73.08</td>    </tr>    <tr>      <th>6</th>      <td>72.2</td>      <td>75.9</td>      <td>4.0</td>      <td>7.69</td>      <td>80.77</td>    </tr>    <tr>      <th>7</th>      <td>75.9</td>      <td>79.6</td>      <td>6.0</td>      <td>11.54</td>      <td>92.31</td>    </tr>    <tr>      <th>8</th>      <td>79.6</td>      <td>83.3</td>      <td>3.0</td>      <td>5.77</td>      <td>98.08</td>    </tr>    <tr>      <th>9</th>      <td>83.3</td>      <td>87.0</td>      <td>1.0</td>      <td>1.92</td>      <td>100.00</td>    </tr>  </tbody></table></div><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138360.png" alt="png"></p><h3 id="4-3-2-二维集聚表与图"><a href="#4-3-2-二维集聚表与图" class="headerlink" title="4.3.2 二维集聚表与图"></a>4.3.2 二维集聚表与图</h3><h4 id="4-3-2-1-计数数据的列联表"><a href="#4-3-2-1-计数数据的列联表" class="headerlink" title="4.3.2.1 计数数据的列联表"></a>4.3.2.1 计数数据的列联表</h4><p>（1）二维列联表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Pandas的crosstab()函数可以把双变量分类数据整理成二维表形式</span></span><br><span class="line">pd.crosstab(BSdata.开设, BSdata.课程)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>课程</th>      <th>概率统计</th>      <th>统计方法</th>      <th>编程技术</th>      <th>都学习过</th>      <th>都未学过</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>3</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>4</td>    </tr>    <tr>      <th>不清楚</th>      <td>3</td>      <td>3</td>      <td>3</td>      <td>2</td>      <td>1</td>    </tr>    <tr>      <th>有必要</th>      <td>5</td>      <td>10</td>      <td>6</td>      <td>7</td>      <td>1</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#行和列的合计可使用参数 margins=True</span></span><br><span class="line">pd.crosstab(BSdata.开设, BSdata.课程, margins=<span class="literal">True</span>) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>课程</th>      <th>概率统计</th>      <th>统计方法</th>      <th>编程技术</th>      <th>都学习过</th>      <th>都未学过</th>      <th>All</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>3</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>4</td>      <td>11</td>    </tr>    <tr>      <th>不清楚</th>      <td>3</td>      <td>3</td>      <td>3</td>      <td>2</td>      <td>1</td>      <td>12</td>    </tr>    <tr>      <th>有必要</th>      <td>5</td>      <td>10</td>      <td>6</td>      <td>7</td>      <td>1</td>      <td>29</td>    </tr>    <tr>      <th>All</th>      <td>11</td>      <td>15</td>      <td>10</td>      <td>10</td>      <td>6</td>      <td>52</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#normalize =&#x27;index&#x27;表示各数据占行的比例</span></span><br><span class="line">pd.crosstab(BSdata.开设, BSdata.课程, margins=<span class="literal">True</span>, normalize=<span class="string">&#x27;index&#x27;</span>) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>课程</th>      <th>概率统计</th>      <th>统计方法</th>      <th>编程技术</th>      <th>都学习过</th>      <th>都未学过</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>0.272727</td>      <td>0.181818</td>      <td>0.090909</td>      <td>0.090909</td>      <td>0.363636</td>    </tr>    <tr>      <th>不清楚</th>      <td>0.250000</td>      <td>0.250000</td>      <td>0.250000</td>      <td>0.166667</td>      <td>0.083333</td>    </tr>    <tr>      <th>有必要</th>      <td>0.172414</td>      <td>0.344828</td>      <td>0.206897</td>      <td>0.241379</td>      <td>0.034483</td>    </tr>    <tr>      <th>All</th>      <td>0.211538</td>      <td>0.288462</td>      <td>0.192308</td>      <td>0.192308</td>      <td>0.115385</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#normalize =&#x27;columns&#x27;表示各数据占列的比例</span></span><br><span class="line">pd.crosstab(BSdata.开设, BSdata.课程, margins=<span class="literal">True</span>, normalize=<span class="string">&#x27;columns&#x27;</span>) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>课程</th>      <th>概率统计</th>      <th>统计方法</th>      <th>编程技术</th>      <th>都学习过</th>      <th>都未学过</th>      <th>All</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>0.272727</td>      <td>0.133333</td>      <td>0.1</td>      <td>0.1</td>      <td>0.666667</td>      <td>0.211538</td>    </tr>    <tr>      <th>不清楚</th>      <td>0.272727</td>      <td>0.200000</td>      <td>0.3</td>      <td>0.2</td>      <td>0.166667</td>      <td>0.230769</td>    </tr>    <tr>      <th>有必要</th>      <td>0.454545</td>      <td>0.666667</td>      <td>0.6</td>      <td>0.7</td>      <td>0.166667</td>      <td>0.557692</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#normalize =&#x27;all&#x27;，表示各数据占总和的构成比例</span></span><br><span class="line">pd.crosstab(BSdata.开设, BSdata.课程, margins=<span class="literal">True</span>, normalize=<span class="string">&#x27;all&#x27;</span>).<span class="built_in">round</span>(<span class="number">2</span>) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>课程</th>      <th>概率统计</th>      <th>统计方法</th>      <th>编程技术</th>      <th>都学习过</th>      <th>都未学过</th>      <th>All</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>0.06</td>      <td>0.04</td>      <td>0.02</td>      <td>0.02</td>      <td>0.08</td>      <td>0.21</td>    </tr>    <tr>      <th>不清楚</th>      <td>0.06</td>      <td>0.06</td>      <td>0.06</td>      <td>0.04</td>      <td>0.02</td>      <td>0.23</td>    </tr>    <tr>      <th>有必要</th>      <td>0.10</td>      <td>0.19</td>      <td>0.12</td>      <td>0.13</td>      <td>0.02</td>      <td>0.56</td>    </tr>    <tr>      <th>All</th>      <td>0.21</td>      <td>0.29</td>      <td>0.19</td>      <td>0.19</td>      <td>0.12</td>      <td>1.00</td>    </tr>  </tbody></table></div><p>（2）复式条图</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T2=pd.crosstab(BSdata.开设, BSdata.课程);T2 </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th>课程</th>      <th>概率统计</th>      <th>统计方法</th>      <th>编程技术</th>      <th>都学习过</th>      <th>都未学过</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>3</td>      <td>2</td>      <td>1</td>      <td>1</td>      <td>4</td>    </tr>    <tr>      <th>不清楚</th>      <td>3</td>      <td>3</td>      <td>3</td>      <td>2</td>      <td>1</td>    </tr>    <tr>      <th>有必要</th>      <td>5</td>      <td>10</td>      <td>6</td>      <td>7</td>      <td>1</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">T2.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138236.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#stacked 参数设置为False时，作出的是分段式条形图；为True时，作出的是并列式条形图</span></span><br><span class="line">T2.plot(kind=<span class="string">&#x27;bar&#x27;</span>, stacked=<span class="literal">True</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138029.png" alt="png"></p><h4 id="4-3-2-2-计量数据的集聚表"><a href="#4-3-2-2-计量数据的集聚表" class="headerlink" title="4.3.2.2 计量数据的集聚表"></a>4.3.2.2 计量数据的集聚表</h4><p>（1）分组 groupby 函数 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按列分组 </span></span><br><span class="line">BSdata.groupby([<span class="string">&#x27;性别&#x27;</span>])</span><br><span class="line"><span class="built_in">type</span>(BSdata.groupby([<span class="string">&#x27;性别&#x27;</span>])) <span class="comment">#使用 groupby()函数生成的是一个中间分组变量，为 GroupBy 类型</span></span><br></pre></td></tr></table></figure><pre><code>pandas.core.groupby.generic.DataFrameGroupBy</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按分组统计 </span></span><br><span class="line">BSdata.groupby([<span class="string">&#x27;性别&#x27;</span>])[<span class="string">&#x27;身高&#x27;</span>].mean() </span><br></pre></td></tr></table></figure><pre><code>性别女    165.360000男    171.444444Name: 身高, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.groupby([<span class="string">&#x27;性别&#x27;</span>])[<span class="string">&#x27;身高&#x27;</span>].size() </span><br></pre></td></tr></table></figure><pre><code>性别女    25男    27Name: 身高, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.groupby([<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;开设&#x27;</span>])[<span class="string">&#x27;身高&#x27;</span>].mean() </span><br></pre></td></tr></table></figure><pre><code>性别  开设 女   不必要    165.166667    不清楚    164.555556    有必要    166.200000男   不必要    180.200000    不清楚    173.333333    有必要    168.842105Name: 身高, dtype: float64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 聚集函数 agg() </span></span><br><span class="line">BSdata.groupby([<span class="string">&#x27;性别&#x27;</span>])[<span class="string">&#x27;身高&#x27;</span>].agg([np.mean, np.std]) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>mean</th>      <th>std</th>    </tr>    <tr>      <th>性别</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>女</th>      <td>165.360000</td>      <td>5.179125</td>    </tr>    <tr>      <th>男</th>      <td>171.444444</td>      <td>9.103395</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 应用函数 apply()</span></span><br><span class="line">BSdata.groupby([<span class="string">&#x27;性别&#x27;</span>])[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>].apply(np.mean) </span><br></pre></td></tr></table></figure><pre><code>C:\Users\kit\AppData\Local\Temp/ipykernel_16520/1696986927.py:2: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.  BSdata.groupby([&#39;性别&#39;])[&#39;身高&#39;,&#39;体重&#39;].apply(np.mean)</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>    </tr>    <tr>      <th>性别</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>女</th>      <td>165.360000</td>      <td>66.240000</td>    </tr>    <tr>      <th>男</th>      <td>171.444444</td>      <td>70.592593</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.groupby([<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;开设&#x27;</span>])[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>].apply(np.mean) </span><br></pre></td></tr></table></figure><pre><code>C:\Users\kit\AppData\Local\Temp/ipykernel_16520/3542829955.py:1: FutureWarning: Indexing with multiple keys (implicitly converted to a tuple of keys) will be deprecated, use a list instead.  BSdata.groupby([&#39;性别&#39;,&#39;开设&#39;])[&#39;身高&#39;,&#39;体重&#39;].apply(np.mean)</code></pre><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>身高</th>      <th>体重</th>    </tr>    <tr>      <th>性别</th>      <th>开设</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="3" valign="top">女</th>      <th>不必要</th>      <td>165.166667</td>      <td>67.333333</td>    </tr>    <tr>      <th>不清楚</th>      <td>164.555556</td>      <td>64.666667</td>    </tr>    <tr>      <th>有必要</th>      <td>166.200000</td>      <td>67.000000</td>    </tr>    <tr>      <th rowspan="3" valign="top">男</th>      <th>不必要</th>      <td>180.200000</td>      <td>79.200000</td>    </tr>    <tr>      <th>不清楚</th>      <td>173.333333</td>      <td>72.666667</td>    </tr>    <tr>      <th>有必要</th>      <td>168.842105</td>      <td>68.000000</td>    </tr>  </tbody></table></div><h3 id="4-3-3-多维透视表与图"><a href="#4-3-3-多维透视表与图" class="headerlink" title="4.3.3 多维透视表与图"></a>4.3.3 多维透视表与图</h3><h4 id="4-3-3-1-计数数据透视表与图"><a href="#4-3-3-1-计数数据透视表与图" class="headerlink" title="4.3.3.1 计数数据透视表与图"></a>4.3.3.1 计数数据透视表与图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pt11=BSdata.pivot_table(values=[&#x27;学号&#x27;],index=[&#x27;性别&#x27;],aggfunc=len)</span></span><br><span class="line">pt11=BSdata.pivot_table([<span class="string">&#x27;学号&#x27;</span>],[<span class="string">&#x27;性别&#x27;</span>],aggfunc=<span class="built_in">len</span>); pt11   <span class="comment">#len分组长度</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>    </tr>    <tr>      <th>性别</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>女</th>      <td>25</td>    </tr>    <tr>      <th>男</th>      <td>27</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt11.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138242.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pt12=BSdata.pivot_table(values=[&#x27;学号&#x27;],index=[&#x27;性别&#x27;,&#x27;开设&#x27;],aggfunc=len)</span></span><br><span class="line">pt12=BSdata.pivot_table([<span class="string">&#x27;学号&#x27;</span>],[<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;开设&#x27;</span>],aggfunc=<span class="built_in">len</span>);pt12</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th></th>      <th>学号</th>    </tr>    <tr>      <th>性别</th>      <th>开设</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="3" valign="top">女</th>      <th>不必要</th>      <td>6</td>    </tr>    <tr>      <th>不清楚</th>      <td>9</td>    </tr>    <tr>      <th>有必要</th>      <td>10</td>    </tr>    <tr>      <th rowspan="3" valign="top">男</th>      <th>不必要</th>      <td>5</td>    </tr>    <tr>      <th>不清楚</th>      <td>3</td>    </tr>    <tr>      <th>有必要</th>      <td>19</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt12.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138608.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pt13=BSdata.pivot_table(values=[&#x27;学号&#x27;],index=[&#x27;开设&#x27;],columns=[&#x27;性别&#x27;],aggfunc=len);</span></span><br><span class="line">pt13=BSdata.pivot_table([<span class="string">&#x27;学号&#x27;</span>], [<span class="string">&#x27;开设&#x27;</span>], [<span class="string">&#x27;性别&#x27;</span>], aggfunc=<span class="built_in">len</span>); pt13 </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead tr th &#123;    text-align: left;&#125;.dataframe thead tr:last-of-type th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th colspan="2" halign="left">学号</th>    </tr>    <tr>      <th>性别</th>      <th>女</th>      <th>男</th>    </tr>    <tr>      <th>开设</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>不必要</th>      <td>6</td>      <td>5</td>    </tr>    <tr>      <th>不清楚</th>      <td>9</td>      <td>3</td>    </tr>    <tr>      <th>有必要</th>      <td>10</td>      <td>19</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt13.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070138329.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt13.plot(kind=<span class="string">&#x27;bar&#x27;</span>,stacked=<span class="literal">True</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139167.png" alt="png"></p><h4 id="4-3-3-2-计量数据透视表与图"><a href="#4-3-3-2-计量数据透视表与图" class="headerlink" title="4.3.3.2 计量数据透视表与图"></a>4.3.3.2 计量数据透视表与图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt21=BSdata.pivot_table(index=[<span class="string">&#x27;性别&#x27;</span>], values=[<span class="string">&quot;身高&quot;</span>], aggfunc=np.mean);pt21</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>    </tr>    <tr>      <th>性别</th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>女</th>      <td>165.360000</td>    </tr>    <tr>      <th>男</th>      <td>171.444444</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt21.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139444.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pt22=BSdata.pivot_table(index=[<span class="string">&#x27;性别&#x27;</span>], values=[<span class="string">&quot;身高&quot;</span>], aggfunc=[np.mean,np.std]);</span><br><span class="line">pt22</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead tr th &#123;    text-align: left;&#125;.dataframe thead tr:last-of-type th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th>mean</th>      <th>std</th>    </tr>    <tr>      <th></th>      <th>身高</th>      <th>身高</th>    </tr>    <tr>      <th>性别</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>女</th>      <td>165.360000</td>      <td>5.179125</td>    </tr>    <tr>      <th>男</th>      <td>171.444444</td>      <td>9.103395</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt22.iloc[:,<span class="number">0</span>].plot(kind=<span class="string">&#x27;bar&#x27;</span>,yerr=pt22.iloc[:,<span class="number">1</span>]); <span class="comment">#标准差条图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139267.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt23=BSdata.pivot_table(index=[<span class="string">&quot;性别&quot;</span>], values=[<span class="string">&quot;身高&quot;</span>,<span class="string">&quot;体重&quot;</span>]);pt23 <span class="comment"># 默认计算均值 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>体重</th>      <th>身高</th>    </tr>    <tr>      <th>性别</th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th>女</th>      <td>66.240000</td>      <td>165.360000</td>    </tr>    <tr>      <th>男</th>      <td>70.592593</td>      <td>171.444444</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt23.plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139241.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt23.plot(kind=<span class="string">&#x27;bar&#x27;</span>,subplots=<span class="literal">True</span>,layout=(<span class="number">1</span>,<span class="number">2</span>));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139627.png" alt="png"></p><h4 id="4-3-3-3-复合数据透视表与图"><a href="#4-3-3-3-复合数据透视表与图" class="headerlink" title="4.3.3.3 复合数据透视表与图"></a>4.3.3.3 复合数据透视表与图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BSdata.pivot_table(<span class="string">&#x27;学号&#x27;</span>, [<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;开设&#x27;</span>], <span class="string">&#x27;课程&#x27;</span>, aggfunc=<span class="built_in">len</span>,  </span><br><span class="line">                   margins=<span class="literal">True</span>, margins_name=<span class="string">&#x27;合计&#x27;</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>课程</th>      <th>概率统计</th>      <th>统计方法</th>      <th>编程技术</th>      <th>都学习过</th>      <th>都未学过</th>      <th>合计</th>    </tr>    <tr>      <th>性别</th>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="3" valign="top">女</th>      <th>不必要</th>      <td>1.0</td>      <td>1.0</td>      <td>NaN</td>      <td>1.0</td>      <td>3.0</td>      <td>6</td>    </tr>    <tr>      <th>不清楚</th>      <td>2.0</td>      <td>1.0</td>      <td>3.0</td>      <td>2.0</td>      <td>1.0</td>      <td>9</td>    </tr>    <tr>      <th>有必要</th>      <td>NaN</td>      <td>5.0</td>      <td>3.0</td>      <td>2.0</td>      <td>NaN</td>      <td>10</td>    </tr>    <tr>      <th rowspan="3" valign="top">男</th>      <th>不必要</th>      <td>2.0</td>      <td>1.0</td>      <td>1.0</td>      <td>NaN</td>      <td>1.0</td>      <td>5</td>    </tr>    <tr>      <th>不清楚</th>      <td>1.0</td>      <td>2.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>      <td>3</td>    </tr>    <tr>      <th>有必要</th>      <td>5.0</td>      <td>5.0</td>      <td>3.0</td>      <td>5.0</td>      <td>1.0</td>      <td>19</td>    </tr>    <tr>      <th>合计</th>      <th></th>      <td>11.0</td>      <td>15.0</td>      <td>10.0</td>      <td>10.0</td>      <td>6.0</td>      <td>52</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pt31=BSdata.pivot_table(<span class="string">&#x27;学号&#x27;</span>,[<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;开设&#x27;</span>],<span class="string">&#x27;课程&#x27;</span>,aggfunc=<span class="built_in">len</span>)</span><br><span class="line">pt31</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>课程</th>      <th>概率统计</th>      <th>统计方法</th>      <th>编程技术</th>      <th>都学习过</th>      <th>都未学过</th>    </tr>    <tr>      <th>性别</th>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="3" valign="top">女</th>      <th>不必要</th>      <td>1.0</td>      <td>1.0</td>      <td>NaN</td>      <td>1.0</td>      <td>3.0</td>    </tr>    <tr>      <th>不清楚</th>      <td>2.0</td>      <td>1.0</td>      <td>3.0</td>      <td>2.0</td>      <td>1.0</td>    </tr>    <tr>      <th>有必要</th>      <td>NaN</td>      <td>5.0</td>      <td>3.0</td>      <td>2.0</td>      <td>NaN</td>    </tr>    <tr>      <th rowspan="3" valign="top">男</th>      <th>不必要</th>      <td>2.0</td>      <td>1.0</td>      <td>1.0</td>      <td>NaN</td>      <td>1.0</td>    </tr>    <tr>      <th>不清楚</th>      <td>1.0</td>      <td>2.0</td>      <td>NaN</td>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>有必要</th>      <td>5.0</td>      <td>5.0</td>      <td>3.0</td>      <td>5.0</td>      <td>1.0</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt31.plot(kind=<span class="string">&#x27;bar&#x27;</span>,stacked=<span class="literal">False</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139609.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt32=BSdata.pivot_table([<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>],[<span class="string">&#x27;性别&#x27;</span>,<span class="string">&quot;开设&quot;</span>],aggfunc=[<span class="built_in">len</span>,np.mean,np.std]);pt32</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead tr th &#123;    text-align: left;&#125;.dataframe thead tr:last-of-type th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr>      <th></th>      <th></th>      <th colspan="2" halign="left">len</th>      <th colspan="2" halign="left">mean</th>      <th colspan="2" halign="left">std</th>    </tr>    <tr>      <th></th>      <th></th>      <th>体重</th>      <th>身高</th>      <th>体重</th>      <th>身高</th>      <th>体重</th>      <th>身高</th>    </tr>    <tr>      <th>性别</th>      <th>开设</th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>      <th></th>    </tr>  </thead>  <tbody>    <tr>      <th rowspan="3" valign="top">女</th>      <th>不必要</th>      <td>6</td>      <td>6</td>      <td>67.333333</td>      <td>165.166667</td>      <td>3.326660</td>      <td>2.786874</td>    </tr>    <tr>      <th>不清楚</th>      <td>9</td>      <td>9</td>      <td>64.666667</td>      <td>164.555556</td>      <td>6.000000</td>      <td>6.502136</td>    </tr>    <tr>      <th>有必要</th>      <td>10</td>      <td>10</td>      <td>67.000000</td>      <td>166.200000</td>      <td>5.333333</td>      <td>5.308274</td>    </tr>    <tr>      <th rowspan="3" valign="top">男</th>      <th>不必要</th>      <td>5</td>      <td>5</td>      <td>79.200000</td>      <td>180.200000</td>      <td>4.438468</td>      <td>4.147288</td>    </tr>    <tr>      <th>不清楚</th>      <td>3</td>      <td>3</td>      <td>72.666667</td>      <td>173.333333</td>      <td>5.033223</td>      <td>5.686241</td>    </tr>    <tr>      <th>有必要</th>      <td>19</td>      <td>19</td>      <td>68.000000</td>      <td>168.842105</td>      <td>9.165151</td>      <td>9.124224</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt32.iloc[:,:<span class="number">2</span>].plot(kind=<span class="string">&#x27;bar&#x27;</span>); </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139188.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt32.iloc[:,<span class="number">2</span>:<span class="number">4</span>].plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139534.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt32.iloc[:,<span class="number">4</span>:<span class="number">6</span>].plot(kind=<span class="string">&#x27;bar&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139939.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pt32.iloc[:,<span class="number">2</span>].plot(kind=<span class="string">&#x27;bar&#x27;</span>, yerr=pt32.iloc[:,<span class="number">4</span>]); <span class="comment">#基于性别和开设的体重标准差条图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070139298.png" alt="png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第4章-数据的探索性分析&quot;&gt;&lt;a href=&quot;#第4章-数据的探索性分析&quot; class=&quot;headerlink&quot; title=&quot;第4章 数据的探索性分析&quot;&gt;&lt;/a&gt;第4章 数据的探索性分析&lt;/h2&gt;&lt;h3 id=&quot;4-1-数据的描述分析&quot;&gt;&lt;a href=&quot;#4-</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>第2章-数据的收集与整理第3章-Python编程基础</title>
    <link href="https://zhangkh.top/2004cd38.html"/>
    <id>https://zhangkh.top/2004cd38.html</id>
    <published>2021-12-06T17:18:36.000Z</published>
    <updated>2021-12-06T17:32:47.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第2章-数据的收集与整理"><a href="#第2章-数据的收集与整理" class="headerlink" title="第2章  数据的收集与整理"></a>第2章  数据的收集与整理</h2><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112070132206.png" alt="img"></p><h2 id="2-1-数据的类型"><a href="#2-1-数据的类型" class="headerlink" title="2.1  数据的类型"></a>2.1  数据的类型</h2><h3 id="2-1-1-按度量尺度分"><a href="#2-1-1-按度量尺度分" class="headerlink" title="2.1.1  按度量尺度分"></a>2.1.1  按度量尺度分</h3><p>2.1.1.1 定性数据</p><p>性别:女,男,男,女,男,男,女,男,女,男,女,男,女,女,男</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">性别=[<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>];性别</span><br></pre></td></tr></table></figure><pre><code>[&#39;女&#39;, &#39;男&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;, &#39;女&#39;, &#39;女&#39;, &#39;男&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sex=[<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>];sex</span><br></pre></td></tr></table></figure><pre><code>[&#39;女&#39;, &#39;男&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;, &#39;女&#39;, &#39;女&#39;, &#39;男&#39;]</code></pre><p>2.1.1.2 定量数据</p><p>体重:67,66,83,68,70,90,70,58,63,72,65,76,71,66,77</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">体重=[<span class="number">67</span>,<span class="number">66</span>,<span class="number">83</span>,<span class="number">68</span>,<span class="number">70</span>,<span class="number">90</span>,<span class="number">70</span>,<span class="number">58</span>,<span class="number">63</span>,<span class="number">72</span>,<span class="number">65</span>,<span class="number">76</span>,<span class="number">71</span>,<span class="number">66</span>];体重</span><br></pre></td></tr></table></figure><pre><code>[67, 66, 83, 68, 70, 90, 70, 58, 63, 72, 65, 76, 71, 66]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">weight=[<span class="number">67</span>,<span class="number">66</span>,<span class="number">83</span>,<span class="number">68</span>,<span class="number">70</span>,<span class="number">90</span>,<span class="number">70</span>,<span class="number">58</span>,<span class="number">63</span>,<span class="number">72</span>,<span class="number">65</span>,<span class="number">76</span>,<span class="number">71</span>,<span class="number">66</span>];weight</span><br></pre></td></tr></table></figure><pre><code>[67, 66, 83, 68, 70, 90, 70, 58, 63, 72, 65, 76, 71, 66]</code></pre><h3 id="2-1-2-按时间状况分"><a href="#2-1-2-按时间状况分" class="headerlink" title="2.1.2  按时间状况分"></a>2.1.2  按时间状况分</h3><p>2.1.2.1 纵向数据</p><p>2.1.2.2 面板数据</p><h2 id="2-2-数据的收集"><a href="#2-2-数据的收集" class="headerlink" title="2.2  数据的收集"></a>2.2  数据的收集</h2><h3 id="2-2-1-横向数据的收集"><a href="#2-2-1-横向数据的收集" class="headerlink" title="2.2.1 横向数据的收集"></a>2.2.1 横向数据的收集</h3><p>使用问卷星设计网络化调查问卷，进入问卷星 <a href="https://www.wjx.cn/">https://www.wjx.cn</a> 网站可快速设计。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_rows&#x27;</span>, <span class="number">10</span>)</span><br><span class="line">pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>47</th>      <td>1538319004</td>      <td>男</td>      <td>175</td>      <td>68</td>      <td>44.4</td>      <td>不清楚</td>      <td>统计方法</td>      <td>SAS</td>    </tr>    <tr>      <th>48</th>      <td>1538254010</td>      <td>女</td>      <td>166</td>      <td>65</td>      <td>5.3</td>      <td>不清楚</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>49</th>      <td>1540294017</td>      <td>女</td>      <td>159</td>      <td>58</td>      <td>71.4</td>      <td>不清楚</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>50</th>      <td>1540365026</td>      <td>女</td>      <td>169</td>      <td>73</td>      <td>5.5</td>      <td>有必要</td>      <td>统计方法</td>      <td>Excel</td>    </tr>    <tr>      <th>51</th>      <td>1540388036</td>      <td>女</td>      <td>165</td>      <td>67</td>      <td>56.8</td>      <td>不必要</td>      <td>概率统计</td>      <td>SAS</td>    </tr>  </tbody></table><p>52 rows × 8 columns</p></div><h3 id="2-2-2-纵向数据的收集"><a href="#2-2-2-纵向数据的收集" class="headerlink" title="2.2.2 纵向数据的收集"></a>2.2.2 纵向数据的收集</h3><p>例2.2 季节数据：经济数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;YQdata&#x27;</span>) <span class="comment">#横向表</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>Year</th>      <th>Q1</th>      <th>Q2</th>      <th>Q3</th>      <th>Q4</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2001</td>      <td>2.330</td>      <td>2.565</td>      <td>2.687</td>      <td>3.384</td>    </tr>    <tr>      <th>1</th>      <td>2002</td>      <td>2.536</td>      <td>2.797</td>      <td>2.972</td>      <td>3.728</td>    </tr>    <tr>      <th>2</th>      <td>2003</td>      <td>2.886</td>      <td>3.101</td>      <td>3.346</td>      <td>4.249</td>    </tr>    <tr>      <th>3</th>      <td>2004</td>      <td>3.342</td>      <td>3.699</td>      <td>3.956</td>      <td>4.991</td>    </tr>    <tr>      <th>4</th>      <td>2005</td>      <td>3.912</td>      <td>4.280</td>      <td>4.474</td>      <td>5.828</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>10</th>      <td>2011</td>      <td>9.748</td>      <td>10.901</td>      <td>11.586</td>      <td>15.076</td>    </tr>    <tr>      <th>11</th>      <td>2012</td>      <td>10.837</td>      <td>11.963</td>      <td>12.574</td>      <td>16.573</td>    </tr>    <tr>      <th>12</th>      <td>2013</td>      <td>11.886</td>      <td>12.916</td>      <td>13.908</td>      <td>20.092</td>    </tr>    <tr>      <th>13</th>      <td>2014</td>      <td>12.821</td>      <td>14.083</td>      <td>15.086</td>      <td>21.656</td>    </tr>    <tr>      <th>14</th>      <td>2015</td>      <td>14.067</td>      <td>17.351</td>      <td>17.316</td>      <td>18.937</td>    </tr>  </tbody></table><p>15 rows × 5 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;QTdata&#x27;</span>) <span class="comment">#纵向表</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>YQ</th>      <th>GDP</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2001Q1</td>      <td>2.330</td>    </tr>    <tr>      <th>1</th>      <td>2001Q2</td>      <td>2.565</td>    </tr>    <tr>      <th>2</th>      <td>2001Q3</td>      <td>2.687</td>    </tr>    <tr>      <th>3</th>      <td>2001Q4</td>      <td>3.384</td>    </tr>    <tr>      <th>4</th>      <td>2002Q1</td>      <td>2.536</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>55</th>      <td>2014Q4</td>      <td>21.656</td>    </tr>    <tr>      <th>56</th>      <td>2015Q1</td>      <td>14.067</td>    </tr>    <tr>      <th>57</th>      <td>2015Q2</td>      <td>17.351</td>    </tr>    <tr>      <th>58</th>      <td>2015Q3</td>      <td>17.316</td>    </tr>    <tr>      <th>59</th>      <td>2015Q4</td>      <td>18.937</td>    </tr>  </tbody></table><p>60 rows × 2 columns</p></div><p>例2.3  日期数据：股票数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;Stock&#x27;</span>)</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>date</th>      <th>Open</th>      <th>High</th>      <th>Low</th>      <th>Close</th>      <th>Volume</th>      <th>Adjusted</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>2005-01-03</td>      <td>0.70247</td>      <td>0.71728</td>      <td>0.70247</td>      <td>0.71296</td>      <td>0.0</td>      <td>0.618499</td>    </tr>    <tr>      <th>1</th>      <td>2005-01-04</td>      <td>0.70988</td>      <td>0.72145</td>      <td>0.69414</td>      <td>0.69599</td>      <td>10958717.0</td>      <td>0.603777</td>    </tr>    <tr>      <th>2</th>      <td>2005-01-05</td>      <td>0.69506</td>      <td>0.70818</td>      <td>0.69506</td>      <td>0.70525</td>      <td>6165072.0</td>      <td>0.611810</td>    </tr>    <tr>      <th>3</th>      <td>2005-01-06</td>      <td>0.70231</td>      <td>0.70648</td>      <td>0.69614</td>      <td>0.69676</td>      <td>9845971.0</td>      <td>0.604445</td>    </tr>    <tr>      <th>4</th>      <td>2005-01-07</td>      <td>0.69599</td>      <td>0.70957</td>      <td>0.69460</td>      <td>0.70201</td>      <td>13667162.0</td>      <td>0.608999</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>3175</th>      <td>2017-12-25</td>      <td>12.73000</td>      <td>12.74000</td>      <td>12.25000</td>      <td>12.38000</td>      <td>65681626.0</td>      <td>12.380000</td>    </tr>    <tr>      <th>3176</th>      <td>2017-12-26</td>      <td>12.46000</td>      <td>12.54000</td>      <td>12.37000</td>      <td>12.52000</td>      <td>30913299.0</td>      <td>12.520000</td>    </tr>    <tr>      <th>3177</th>      <td>2017-12-27</td>      <td>12.54000</td>      <td>12.57000</td>      <td>12.10000</td>      <td>12.18000</td>      <td>53813380.0</td>      <td>12.180000</td>    </tr>    <tr>      <th>3178</th>      <td>2017-12-28</td>      <td>12.20000</td>      <td>12.28000</td>      <td>12.06000</td>      <td>12.18000</td>      <td>33692919.0</td>      <td>12.180000</td>    </tr>    <tr>      <th>3179</th>      <td>2017-12-29</td>      <td>12.18000</td>      <td>12.33000</td>      <td>12.14000</td>      <td>12.29000</td>      <td>25372331.0</td>      <td>12.290000</td>    </tr>  </tbody></table><p>3180 rows × 7 columns</p></div><h2 id="2-3-数据的管理"><a href="#2-3-数据的管理" class="headerlink" title="2.3  数据的管理"></a>2.3  数据的管理</h2><h3 id="2-3-1-表格管理数据"><a href="#2-3-1-表格管理数据" class="headerlink" title="2.3.1 表格管理数据"></a>2.3.1 表格管理数据</h3><h3 id="2-3-2-数据库管理数据"><a href="#2-3-2-数据库管理数据" class="headerlink" title="2.3.2 数据库管理数据"></a>2.3.2 数据库管理数据</h3><h3 id="2-3-3-Python数据管理"><a href="#2-3-3-Python数据管理" class="headerlink" title="2.3.3 Python数据管理"></a>2.3.3 Python数据管理</h3><h2 id="第3章-Python-编程基础"><a href="#第3章-Python-编程基础" class="headerlink" title="第3章 Python 编程基础"></a>第3章 Python 编程基础</h2><ul><li>网上有大量的Python编程基础知识介绍，如 <a href="http://www.runoob.com/Python/Python-dictionary.html">http://www.runoob.com/Python/Python-dictionary.html</a> </li></ul><blockquote><p>由于本书重点介绍Python的数据分析，所以对Python编程的基础知识将不展开讨论。</p></blockquote><h2 id="3-1-Python-编程运算"><a href="#3-1-Python-编程运算" class="headerlink" title="3.1 Python 编程运算"></a>3.1 Python 编程运算</h2><h3 id="3-1-1-基本运算"><a href="#3-1-1-基本运算" class="headerlink" title="3.1.1 基本运算"></a>3.1.1 基本运算</h3><h3 id="3-1-2-控制语句"><a href="#3-1-2-控制语句" class="headerlink" title="3.1.2 控制语句"></a>3.1.2 控制语句</h3><ul><li>3.1.2.1 循环语句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]: <span class="comment">#range(1,n)表示1到n-1的列表</span></span><br><span class="line">    print(i) </span><br></pre></td></tr></table></figure><pre><code>1234</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>)]  <span class="comment">#循环的简洁写法</span></span><br></pre></td></tr></table></figure><pre><code>[1, 2, 3, 4]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#fruits = [&#x27;banana&#x27;, &#x27;apple&#x27;, &#x27;mango&#x27;] </span></span><br><span class="line"><span class="keyword">for</span> fruit <span class="keyword">in</span> [<span class="string">&#x27;banana&#x27;</span>,<span class="string">&#x27;apple&#x27;</span>,<span class="string">&#x27;mango&#x27;</span>]:  <span class="comment">#fruits: </span></span><br><span class="line">    print(<span class="string">&#x27;当前水果 :&#x27;</span>, fruit)</span><br></pre></td></tr></table></figure><pre><code>当前水果 : banana当前水果 : apple当前水果 : mango</code></pre><ul><li>3.1.2.2 条件语句</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = -<span class="number">100</span></span><br><span class="line"><span class="keyword">if</span> a &lt; <span class="number">100</span>:</span><br><span class="line">    print(<span class="string">&quot;a的数值小于 100&quot;</span>) </span><br><span class="line"><span class="keyword">else</span>: </span><br><span class="line">    print(<span class="string">&quot;a的数值大于 100&quot;</span>)</span><br></pre></td></tr></table></figure><pre><code>a的数值小于 100</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a <span class="keyword">if</span> a&lt;<span class="number">0</span> <span class="keyword">else</span> a   <span class="comment">#ifelse的简洁语法</span></span><br></pre></td></tr></table></figure><pre><code>-100</code></pre><h3 id="3-1-3-函数定义"><a href="#3-1-3-函数定义" class="headerlink" title="3.1.3 函数定义"></a>3.1.3 函数定义</h3><ul><li><p>3.1.3.1 内置函数</p></li><li><p>3.1.3.2 自定义函数</p></li></ul><p>def 函数名(参数1, 参数2, …)：<br>      函数体<br>    return</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">xbar</span>(<span class="params">x</span>):</span> </span><br><span class="line">    n=<span class="built_in">len</span>(x) </span><br><span class="line">    S=<span class="built_in">sum</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> x])    </span><br><span class="line">    xbar=S/n              <span class="comment">#sum(x)/n</span></span><br><span class="line">    <span class="keyword">return</span>(xbar) </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>]; X </span><br></pre></td></tr></table></figure><pre><code>[1, 3, 6, 4, 9, 7, 5, 8, 2]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xbar(X)</span><br></pre></td></tr></table></figure><pre><code>5.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">np.mean(X)         <span class="comment">#Python已内建这些函数命令，可直接使用</span></span><br></pre></td></tr></table></figure><pre><code>5.0</code></pre><h3 id="3-1-4-面向对象"><a href="#3-1-4-面向对象" class="headerlink" title="3.1.4 面向对象"></a>3.1.4 面向对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SS1</span>(<span class="params">x</span>):</span>                       <span class="comment">#计算离均差平方和函数</span></span><br><span class="line">    n=<span class="built_in">len</span>(x) </span><br><span class="line">    S1=<span class="built_in">sum</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> x])        <span class="comment">#计算列表的和</span></span><br><span class="line">    S2x=<span class="built_in">sum</span>([i*i <span class="keyword">for</span> i <span class="keyword">in</span> x])     <span class="comment">#计算列表的平方和</span></span><br><span class="line">    Sx2=<span class="built_in">sum</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> x])**<span class="number">2</span>    <span class="comment">#计算列表和的平方</span></span><br><span class="line">    SS=S2x-Sx2/n     </span><br><span class="line">    <span class="keyword">return</span>(SS)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">9</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">2</span>]</span><br><span class="line">SS1(X) </span><br></pre></td></tr></table></figure><pre><code>60.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">SS2</span>(<span class="params">x</span>):</span>                       <span class="comment">#返回多个值函数</span></span><br><span class="line">    n=<span class="built_in">len</span>(x) </span><br><span class="line">    S1=<span class="built_in">sum</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> x])        <span class="comment">#计算列表的和</span></span><br><span class="line">    xbar=S1/n</span><br><span class="line">    S2x=<span class="built_in">sum</span>([i*i <span class="keyword">for</span> i <span class="keyword">in</span> x])     <span class="comment">#计算列表的平方和</span></span><br><span class="line">    Sx2=<span class="built_in">sum</span>([i <span class="keyword">for</span> i <span class="keyword">in</span> x])**<span class="number">2</span>    <span class="comment">#计算列表和的平方</span></span><br><span class="line">    SS=S2x-Sx2/n     </span><br><span class="line">    <span class="keyword">return</span>[n,S1,xbar,S2x,Sx2,SS]  </span><br><span class="line">    <span class="comment">#返回例数、均值、平方和、和的平方、离均差平方和的列表</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS2(X)  </span><br></pre></td></tr></table></figure><pre><code>[9, 45, 5.0, 285, 2025, 60.0]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS2(X)[<span class="number">0</span>] <span class="comment">#取第 1 个对象 </span></span><br></pre></td></tr></table></figure><pre><code>9</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS2(X)[<span class="number">1</span>] <span class="comment">#取第 2 个对象 </span></span><br></pre></td></tr></table></figure><pre><code>45</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS2(X)[<span class="number">2</span>] <span class="comment">#取第 3 个对象 </span></span><br></pre></td></tr></table></figure><pre><code>5.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS2(X)[<span class="number">3</span>] <span class="comment">#取第 4 个对象 </span></span><br></pre></td></tr></table></figure><pre><code>285</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS2(X)[<span class="number">4</span>] <span class="comment">#取第 5 个对象</span></span><br></pre></td></tr></table></figure><pre><code>2025</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SS2(X)[<span class="number">5</span>] <span class="comment">#取第 6 个对象</span></span><br></pre></td></tr></table></figure><pre><code>60.0</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可以使用 type 函数来查看数据或对象的类型</span></span><br><span class="line"><span class="built_in">type</span>(SS2(X)) </span><br></pre></td></tr></table></figure><pre><code>list</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>(SS2(X)[<span class="number">3</span>]) </span><br></pre></td></tr></table></figure><pre><code>int</code></pre><h2 id="3-2-数值分析库-numpy"><a href="#3-2-数值分析库-numpy" class="headerlink" title="3.2 数值分析库 numpy"></a>3.2 数值分析库 numpy</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell <span class="keyword">as</span> IS</span><br><span class="line">IS.ast_node_interactivity = <span class="string">&quot;all&quot;</span>            <span class="comment">#多行命令一次输出</span></span><br></pre></td></tr></table></figure><h2 id="3-2-1-一维数组"><a href="#3-2-1-一维数组" class="headerlink" title="3.2.1 一维数组"></a>3.2.1 一维数组</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np         <span class="comment">#加载数组包</span></span><br><span class="line">np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])      <span class="comment">#一维数组</span></span><br></pre></td></tr></table></figure><pre><code>array([1, 2, 3, 4, 5])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,np.nan,<span class="number">5</span>]) <span class="comment">#包含缺失值的数</span></span><br></pre></td></tr></table></figure><pre><code>array([ 1.,  2.,  3., nan,  5.])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">9</span>)               <span class="comment">#数组序列 </span></span><br></pre></td></tr></table></figure><pre><code>array([0, 1, 2, 3, 4, 5, 6, 7, 8])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.arange(<span class="number">1</span>,<span class="number">19</span>,<span class="number">0.5</span>)         <span class="comment">#等差数列 </span></span><br></pre></td></tr></table></figure><pre><code>array([ 1. ,  1.5,  2. ,  2.5,  3. ,  3.5,  4. ,  4.5,  5. ,  5.5,  6. ,        6.5,  7. ,  7.5,  8. ,  8.5,  9. ,  9.5, 10. , 10.5, 11. , 11.5,       12. , 12.5, 13. , 13.5, 14. , 14.5, 15. , 15.5, 16. , 16.5, 17. ,       17.5, 18. , 18.5])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.linspace(<span class="number">1</span>,<span class="number">19</span>,<span class="number">5</span>)         <span class="comment">#等距数列</span></span><br></pre></td></tr></table></figure><pre><code>array([ 1. ,  5.5, 10. , 14.5, 19. ])</code></pre><h3 id="3-2-2-二维数组"><a href="#3-2-2-二维数组" class="headerlink" title="3.2.2 二维数组"></a>3.2.2 二维数组</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B=np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">7</span>]]);B   <span class="comment">#二维数组</span></span><br></pre></td></tr></table></figure><pre><code>array([[1, 2],       [3, 4],       [5, 7]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>],[<span class="number">5</span>,<span class="number">6</span>,<span class="number">6</span>]])   <span class="comment">#二维数组</span></span><br></pre></td></tr></table></figure><pre><code>array([[1, 2, 3],       [3, 4, 5],       [5, 6, 6]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A=np.arange(<span class="number">9</span>).reshape((<span class="number">3</span>,<span class="number">3</span>));A <span class="comment">#形成 3×3 矩阵</span></span><br></pre></td></tr></table></figure><pre><code>array([[0, 1, 2],       [3, 4, 5],       [6, 7, 8]])</code></pre><h3 id="3-2-3-数组的操作"><a href="#3-2-3-数组的操作" class="headerlink" title="3.2.3 数组的操作"></a>3.2.3 数组的操作</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A.shape            <span class="comment">#数组的维度</span></span><br></pre></td></tr></table></figure><pre><code>(3, 3)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A.shape[<span class="number">0</span>]        <span class="comment">#数组的行数</span></span><br></pre></td></tr></table></figure><pre><code>3</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A.shape[<span class="number">1</span>]        <span class="comment">#数组的列数</span></span><br></pre></td></tr></table></figure><pre><code>3</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B.shape</span><br></pre></td></tr></table></figure><pre><code>(3, 2)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">np.diag(A)         <span class="comment">#对角阵    </span></span><br></pre></td></tr></table></figure><pre><code>array([0, 4, 8])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Z=np.zeros((<span class="number">3</span>,<span class="number">3</span>));Z    <span class="comment">#零矩阵 </span></span><br></pre></td></tr></table></figure><pre><code>array([[0., 0., 0.],       [0., 0., 0.],       [0., 0., 0.]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">J=np.ones((<span class="number">3</span>,<span class="number">3</span>));J     <span class="comment">#1矩阵</span></span><br></pre></td></tr></table></figure><pre><code>array([[1., 1., 1.],       [1., 1., 1.],       [1., 1., 1.]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I=np.eye(<span class="number">3</span>);I          <span class="comment">#单位阵</span></span><br></pre></td></tr></table></figure><pre><code>array([[1., 0., 0.],       [0., 1., 0.],       [0., 0., 1.]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Z+J+I</span><br></pre></td></tr></table></figure><pre><code>array([[2., 1., 1.],       [1., 2., 1.],       [1., 1., 2.]])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I*J</span><br></pre></td></tr></table></figure><pre><code>array([[1., 0., 0.],       [0., 1., 0.],       [0., 0., 1.]])</code></pre><h2 id="3-3-数据分析库-pandas"><a href="#3-3-数据分析库-pandas" class="headerlink" title="3.3 数据分析库 pandas"></a>3.3 数据分析库 pandas</h2><h3 id="3-3-1-序列：Series"><a href="#3-3-1-序列：Series" class="headerlink" title="3.3.1 序列：Series"></a>3.3.1 序列：Series</h3><p>（1）创建序列（向量、一维数组）</p><p>（2）生成序列 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd   <span class="comment">#加载数据分析包</span></span><br><span class="line"><span class="comment">#pd.Series()           #生成空序列 </span></span><br></pre></td></tr></table></figure><p>（3）根据列表构建序列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">9</span>];X</span><br><span class="line">weight=[<span class="number">67</span>,<span class="number">66</span>,<span class="number">83</span>,<span class="number">68</span>,<span class="number">70</span>]; weight</span><br><span class="line">sex=[<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>]; sex</span><br></pre></td></tr></table></figure><pre><code>[1, 3, 6, 4, 9][67, 66, 83, 68, 70][&#39;女&#39;, &#39;男&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S1=pd.Series(X);S1 </span><br></pre></td></tr></table></figure><pre><code>0    11    32    63    44    9dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S2=pd.Series(weight);S2 </span><br></pre></td></tr></table></figure><pre><code>0    671    662    833    684    70dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S3=pd.Series(sex);S3</span><br></pre></td></tr></table></figure><pre><code>0    女1    男2    男3    女4    男dtype: object</code></pre><p>（4）序列合并 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([S2,S3],axis=<span class="number">0</span>)   <span class="comment">#按行合并</span></span><br></pre></td></tr></table></figure><pre><code>0    671    662    833    684    700     女1     男2     男3     女4     男dtype: object</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([S1,S3],axis=<span class="number">1</span>)  <span class="comment">#按列合并</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>女</td>    </tr>    <tr>      <th>1</th>      <td>3</td>      <td>男</td>    </tr>    <tr>      <th>2</th>      <td>6</td>      <td>男</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>女</td>    </tr>    <tr>      <th>4</th>      <td>9</td>      <td>男</td>    </tr>  </tbody></table></div><p>（5）序列切片</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S1[<span class="number">2</span>] </span><br></pre></td></tr></table></figure><pre><code>6</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S3[<span class="number">1</span>:<span class="number">4</span>]</span><br></pre></td></tr></table></figure><pre><code>1    男2    男3    女dtype: object</code></pre><h3 id="3-3-2-数据框：DataFrame"><a href="#3-3-2-数据框：DataFrame" class="headerlink" title="3.3.2 数据框：DataFrame"></a>3.3.2 数据框：DataFrame</h3><p>（1）生成数据框 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame()      <span class="comment">#生成空数据框</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>    </tr>  </thead>  <tbody>  </tbody></table></div><p>（2）根据列表创建数据框</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(X) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>    </tr>    <tr>      <th>1</th>      <td>3</td>    </tr>    <tr>      <th>2</th>      <td>6</td>    </tr>    <tr>      <th>3</th>      <td>4</td>    </tr>    <tr>      <th>4</th>      <td>9</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.DataFrame(weight,columns=[<span class="string">&#x27;weight&#x27;</span>], index=[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>])</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>weight</th>    </tr>  </thead>  <tbody>    <tr>      <th>A</th>      <td>67</td>    </tr>    <tr>      <th>B</th>      <td>66</td>    </tr>    <tr>      <th>C</th>      <td>83</td>    </tr>    <tr>      <th>D</th>      <td>68</td>    </tr>    <tr>      <th>E</th>      <td>70</td>    </tr>  </tbody></table></div><p>（3）根据字典创建数据框</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df1=pd.DataFrame(&#123;<span class="string">&#x27;S1&#x27;</span>:S1,<span class="string">&#x27;S2&#x27;</span>:S2,<span class="string">&#x27;S3&#x27;</span>:S3&#125;); df1 </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>S1</th>      <th>S2</th>      <th>S3</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1</td>      <td>67</td>      <td>女</td>    </tr>    <tr>      <th>1</th>      <td>3</td>      <td>66</td>      <td>男</td>    </tr>    <tr>      <th>2</th>      <td>6</td>      <td>83</td>      <td>男</td>    </tr>    <tr>      <th>3</th>      <td>4</td>      <td>68</td>      <td>女</td>    </tr>    <tr>      <th>4</th>      <td>9</td>      <td>70</td>      <td>男</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2=pd.DataFrame(&#123;<span class="string">&#x27;sex&#x27;</span>:sex,<span class="string">&#x27;weight&#x27;</span>:weight&#125;,index=X);df2 </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sex</th>      <th>weight</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>女</td>      <td>67</td>    </tr>    <tr>      <th>3</th>      <td>男</td>      <td>66</td>    </tr>    <tr>      <th>6</th>      <td>男</td>      <td>83</td>    </tr>    <tr>      <th>4</th>      <td>女</td>      <td>68</td>    </tr>    <tr>      <th>9</th>      <td>男</td>      <td>70</td>    </tr>  </tbody></table></div><p>（4）增加数据框列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df2[<span class="string">&#x27;weight2&#x27;</span>]=df2[<span class="string">&#x27;weight&#x27;</span>]**<span class="number">2</span>; df2 </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sex</th>      <th>weight</th>      <th>weight2</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>女</td>      <td>67</td>      <td>4489</td>    </tr>    <tr>      <th>3</th>      <td>男</td>      <td>66</td>      <td>4356</td>    </tr>    <tr>      <th>6</th>      <td>男</td>      <td>83</td>      <td>6889</td>    </tr>    <tr>      <th>4</th>      <td>女</td>      <td>68</td>      <td>4624</td>    </tr>    <tr>      <th>9</th>      <td>男</td>      <td>70</td>      <td>4900</td>    </tr>  </tbody></table></div><p>（5）删除数据框列</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> df2[<span class="string">&#x27;weight2&#x27;</span>]; df2</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>sex</th>      <th>weight</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>女</td>      <td>67</td>    </tr>    <tr>      <th>3</th>      <td>男</td>      <td>66</td>    </tr>    <tr>      <th>6</th>      <td>男</td>      <td>83</td>    </tr>    <tr>      <th>4</th>      <td>女</td>      <td>68</td>    </tr>    <tr>      <th>9</th>      <td>男</td>      <td>70</td>    </tr>  </tbody></table></div><p>（6）缺失值处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df3=pd.DataFrame(&#123;<span class="string">&#x27;S2&#x27;</span>:S2,<span class="string">&#x27;S3&#x27;</span>:S3&#125;,index=S1);df3 </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>S2</th>      <th>S3</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>66.0</td>      <td>男</td>    </tr>    <tr>      <th>3</th>      <td>68.0</td>      <td>女</td>    </tr>    <tr>      <th>6</th>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>70.0</td>      <td>男</td>    </tr>    <tr>      <th>9</th>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df3.isnull()        <span class="comment">#是缺失值则返回 True，否则返回 False </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>S2</th>      <th>S3</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>3</th>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>6</th>      <td>True</td>      <td>True</td>    </tr>    <tr>      <th>4</th>      <td>False</td>      <td>False</td>    </tr>    <tr>      <th>9</th>      <td>True</td>      <td>True</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df3.isnull().<span class="built_in">sum</span>()  <span class="comment">#返回每列包含的缺失值的个数 </span></span><br></pre></td></tr></table></figure><pre><code>S2    2S3    2dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df3.dropna()       <span class="comment">#直接删除含有缺失值的行，多变量谨慎使用 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>S2</th>      <th>S3</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>66.0</td>      <td>男</td>    </tr>    <tr>      <th>3</th>      <td>68.0</td>      <td>女</td>    </tr>    <tr>      <th>4</th>      <td>70.0</td>      <td>男</td>    </tr>  </tbody></table></div><p>（7）数据框排序 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df3</span><br><span class="line">df3.sort_index()         <span class="comment">#按index排序 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>S2</th>      <th>S3</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>66.0</td>      <td>男</td>    </tr>    <tr>      <th>3</th>      <td>68.0</td>      <td>女</td>    </tr>    <tr>      <th>6</th>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>4</th>      <td>70.0</td>      <td>男</td>    </tr>    <tr>      <th>9</th>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>S2</th>      <th>S3</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>66.0</td>      <td>男</td>    </tr>    <tr>      <th>3</th>      <td>68.0</td>      <td>女</td>    </tr>    <tr>      <th>4</th>      <td>70.0</td>      <td>男</td>    </tr>    <tr>      <th>6</th>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>9</th>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df3.sort_values(by=<span class="string">&#x27;S3&#x27;</span>) <span class="comment">#按S3列值排序 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>S2</th>      <th>S3</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>68.0</td>      <td>女</td>    </tr>    <tr>      <th>1</th>      <td>66.0</td>      <td>男</td>    </tr>    <tr>      <th>4</th>      <td>70.0</td>      <td>男</td>    </tr>    <tr>      <th>6</th>      <td>NaN</td>      <td>NaN</td>    </tr>    <tr>      <th>9</th>      <td>NaN</td>      <td>NaN</td>    </tr>  </tbody></table></div><h3 id="3-3-3-数据框的读写"><a href="#3-3-3-数据框的读写" class="headerlink" title="3.3.3 数据框的读写"></a>3.3.3 数据框的读写</h3><ul><li>3.3.3.1 pandas 读取数据集 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_rows&#x27;</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#BSdata=pd.read_clipboard(); #从剪切板上复制数据 </span></span><br><span class="line"><span class="comment">#BSdata   #BSdata.head() 见下节</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BSdata=pd.read_csv(<span class="string">&quot;DaPy_BS.csv&quot;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)  <span class="comment">#GBK </span></span><br><span class="line">BSdata</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>47</th>      <td>1538319004</td>      <td>男</td>      <td>175</td>      <td>68</td>      <td>44.4</td>      <td>不清楚</td>      <td>统计方法</td>      <td>SAS</td>    </tr>    <tr>      <th>48</th>      <td>1538254010</td>      <td>女</td>      <td>166</td>      <td>65</td>      <td>5.3</td>      <td>不清楚</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>49</th>      <td>1540294017</td>      <td>女</td>      <td>159</td>      <td>58</td>      <td>71.4</td>      <td>不清楚</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>50</th>      <td>1540365026</td>      <td>女</td>      <td>169</td>      <td>73</td>      <td>5.5</td>      <td>有必要</td>      <td>统计方法</td>      <td>Excel</td>    </tr>    <tr>      <th>51</th>      <td>1540388036</td>      <td>女</td>      <td>165</td>      <td>67</td>      <td>56.8</td>      <td>不必要</td>      <td>概率统计</td>      <td>SAS</td>    </tr>  </tbody></table><p>52 rows × 8 columns</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata=pd.read_excel(<span class="string">&#x27;DaPy_data.xlsx&#x27;</span>,<span class="string">&#x27;BSdata&#x27;</span>);<span class="comment"># BSdata</span></span><br></pre></td></tr></table></figure><p>3.3.3.2 pandas 数据集的保存 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.to_csv(<span class="string">&#x27;BSdata1.csv&#x27;</span>)    <span class="comment">#将数据框BSdata保存到BSdata.csv文档中</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将数据框 BSdata 保存到BSdata1.xlsx 文档中</span></span><br><span class="line">BSdata.to_excel(<span class="string">&#x27;BSdata.xlsx&#x27;</span>,index=<span class="literal">False</span>)  <span class="comment">#index=False表示不保存行标签</span></span><br></pre></td></tr></table></figure><h3 id="3-3-4-数据框的操作"><a href="#3-3-4-数据框的操作" class="headerlink" title="3.3.4 数据框的操作"></a>3.3.4 数据框的操作</h3><ul><li>（1）基本信息</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.info()     <span class="comment">#数据框信息</span></span><br></pre></td></tr></table></figure><pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;RangeIndex: 52 entries, 0 to 51Data columns (total 8 columns): #   Column  Non-Null Count  Dtype  ---  ------  --------------  -----   0   学号      52 non-null     int64   1   性别      52 non-null     object  2   身高      52 non-null     int64   3   体重      52 non-null     int64   4   支出      52 non-null     float64 5   开设      52 non-null     object  6   课程      52 non-null     object  7   软件      52 non-null     object dtypes: float64(1), int64(3), object(4)memory usage: 3.4+ KB</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.head(<span class="number">10</span>)     <span class="comment">#显示前5行 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>    <tr>      <th>5</th>      <td>1516248014</td>      <td>男</td>      <td>183</td>      <td>76</td>      <td>85.6</td>      <td>不必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>6</th>      <td>1516352030</td>      <td>女</td>      <td>169</td>      <td>71</td>      <td>9.1</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>7</th>      <td>1516171019</td>      <td>女</td>      <td>166</td>      <td>66</td>      <td>2.5</td>      <td>不必要</td>      <td>都未学过</td>      <td>Excel</td>    </tr>    <tr>      <th>8</th>      <td>1516391008</td>      <td>女</td>      <td>165</td>      <td>69</td>      <td>35.6</td>      <td>不必要</td>      <td>都未学过</td>      <td>Excel</td>    </tr>    <tr>      <th>9</th>      <td>1520395019</td>      <td>男</td>      <td>173</td>      <td>63</td>      <td>22.8</td>      <td>有必要</td>      <td>统计方法</td>      <td>R</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.tail(<span class="number">10</span>)     <span class="comment">#显示后5行</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>42</th>      <td>1537288004</td>      <td>女</td>      <td>173</td>      <td>70</td>      <td>19.1</td>      <td>不清楚</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>43</th>      <td>1537359035</td>      <td>女</td>      <td>174</td>      <td>71</td>      <td>17.6</td>      <td>不清楚</td>      <td>概率统计</td>      <td>No</td>    </tr>    <tr>      <th>44</th>      <td>1438391022</td>      <td>女</td>      <td>164</td>      <td>62</td>      <td>10.3</td>      <td>有必要</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>45</th>      <td>1538399025</td>      <td>男</td>      <td>169</td>      <td>65</td>      <td>9.5</td>      <td>有必要</td>      <td>统计方法</td>      <td>SAS</td>    </tr>    <tr>      <th>46</th>      <td>1438120022</td>      <td>男</td>      <td>166</td>      <td>70</td>      <td>35.6</td>      <td>有必要</td>      <td>统计方法</td>      <td>R</td>    </tr>    <tr>      <th>47</th>      <td>1538319004</td>      <td>男</td>      <td>175</td>      <td>68</td>      <td>44.4</td>      <td>不清楚</td>      <td>统计方法</td>      <td>SAS</td>    </tr>    <tr>      <th>48</th>      <td>1538254010</td>      <td>女</td>      <td>166</td>      <td>65</td>      <td>5.3</td>      <td>不清楚</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>49</th>      <td>1540294017</td>      <td>女</td>      <td>159</td>      <td>58</td>      <td>71.4</td>      <td>不清楚</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>50</th>      <td>1540365026</td>      <td>女</td>      <td>169</td>      <td>73</td>      <td>5.5</td>      <td>有必要</td>      <td>统计方法</td>      <td>Excel</td>    </tr>    <tr>      <th>51</th>      <td>1540388036</td>      <td>女</td>      <td>165</td>      <td>67</td>      <td>56.8</td>      <td>不必要</td>      <td>概率统计</td>      <td>SAS</td>    </tr>  </tbody></table></div><ul><li>（2）数据框列名（变量名） </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.columns    <span class="comment">#查看列名称 </span></span><br></pre></td></tr></table></figure><pre><code>Index([&#39;学号&#39;, &#39;性别&#39;, &#39;身高&#39;, &#39;体重&#39;, &#39;支出&#39;, &#39;开设&#39;, &#39;课程&#39;, &#39;软件&#39;], dtype=&#39;object&#39;)</code></pre><ul><li>（3）数据框行名（样品名） </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.index      <span class="comment">#数据框行名 </span></span><br></pre></td></tr></table></figure><pre><code>RangeIndex(start=0, stop=52, step=1)</code></pre><ul><li>（4）数据框维度</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.shape      <span class="comment">#显示数据框的行数和列数</span></span><br></pre></td></tr></table></figure><pre><code>(52, 8)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.shape[<span class="number">0</span>]   <span class="comment">#数据框行数 </span></span><br></pre></td></tr></table></figure><pre><code>52</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.shape[<span class="number">1</span>]   <span class="comment">#数据框列数</span></span><br></pre></td></tr></table></figure><pre><code>8</code></pre><ul><li>（5）数据框值（数组） </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.values[:<span class="number">5</span>] <span class="comment">#数据框值数组 </span></span><br></pre></td></tr></table></figure><pre><code>array([[1510248008, &#39;女&#39;, 167, 71, 46.0, &#39;不清楚&#39;, &#39;都未学过&#39;, &#39;No&#39;],       [1510229019, &#39;男&#39;, 171, 68, 10.4, &#39;有必要&#39;, &#39;概率统计&#39;, &#39;Matlab&#39;],       [1512108019, &#39;女&#39;, 175, 73, 21.0, &#39;有必要&#39;, &#39;统计方法&#39;, &#39;SPSS&#39;],       [1512332010, &#39;男&#39;, 169, 74, 4.9, &#39;有必要&#39;, &#39;编程技术&#39;, &#39;Excel&#39;],       [1512331015, &#39;男&#39;, 154, 55, 25.9, &#39;有必要&#39;, &#39;都学习过&#39;, &#39;Python&#39;]],      dtype=object)</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BSdata.head()</span><br><span class="line">BSdata.tail()</span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>  </tbody></table></div><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>47</th>      <td>1538319004</td>      <td>男</td>      <td>175</td>      <td>68</td>      <td>44.4</td>      <td>不清楚</td>      <td>统计方法</td>      <td>SAS</td>    </tr>    <tr>      <th>48</th>      <td>1538254010</td>      <td>女</td>      <td>166</td>      <td>65</td>      <td>5.3</td>      <td>不清楚</td>      <td>编程技术</td>      <td>Python</td>    </tr>    <tr>      <th>49</th>      <td>1540294017</td>      <td>女</td>      <td>159</td>      <td>58</td>      <td>71.4</td>      <td>不清楚</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>50</th>      <td>1540365026</td>      <td>女</td>      <td>169</td>      <td>73</td>      <td>5.5</td>      <td>有必要</td>      <td>统计方法</td>      <td>Excel</td>    </tr>    <tr>      <th>51</th>      <td>1540388036</td>      <td>女</td>      <td>165</td>      <td>67</td>      <td>56.8</td>      <td>不必要</td>      <td>概率统计</td>      <td>SAS</td>    </tr>  </tbody></table></div><ul><li>3.3.4.2 选取变量</li></ul><p>（1）[‘ ‘]或“.”法或：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;身高&#x27;</span>].head()          <span class="comment">#取一列数据，一列时也可用BSdata.身高</span></span><br></pre></td></tr></table></figure><pre><code>0    1671    1712    1753    1694    154Name: 身高, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.身高.head()</span><br></pre></td></tr></table></figure><pre><code>0    1671    1712    1753    1694    154Name: 身高, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[[<span class="string">&#x27;性别&#x27;</span>,<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>]].head() <span class="comment">#取两列数据 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>性别</th>      <th>身高</th>      <th>体重</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>女</td>      <td>167</td>      <td>71</td>    </tr>    <tr>      <th>1</th>      <td>男</td>      <td>171</td>      <td>68</td>    </tr>    <tr>      <th>2</th>      <td>女</td>      <td>175</td>      <td>73</td>    </tr>    <tr>      <th>3</th>      <td>男</td>      <td>169</td>      <td>74</td>    </tr>    <tr>      <th>4</th>      <td>男</td>      <td>154</td>      <td>55</td>    </tr>  </tbody></table></div><p>（2）下标法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.iloc[<span class="number">1</span>:<span class="number">3</span>,<span class="number">2</span>:<span class="number">4</span>]      <span class="comment">#取第1列 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>171</td>      <td>68</td>    </tr>    <tr>      <th>2</th>      <td>175</td>      <td>73</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.iloc[<span class="number">1</span>:<span class="number">10</span>,<span class="number">2</span>:<span class="number">4</span>]   <span class="comment">#取3、4列 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>171</td>      <td>68</td>    </tr>    <tr>      <th>2</th>      <td>175</td>      <td>73</td>    </tr>    <tr>      <th>3</th>      <td>169</td>      <td>74</td>    </tr>    <tr>      <th>4</th>      <td>154</td>      <td>55</td>    </tr>    <tr>      <th>5</th>      <td>183</td>      <td>76</td>    </tr>    <tr>      <th>6</th>      <td>169</td>      <td>71</td>    </tr>    <tr>      <th>7</th>      <td>166</td>      <td>66</td>    </tr>    <tr>      <th>8</th>      <td>165</td>      <td>69</td>    </tr>    <tr>      <th>9</th>      <td>173</td>      <td>63</td>    </tr>  </tbody></table></div><ul><li>3.3.4.3 提取样品 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.loc[<span class="number">3</span>]        <span class="comment">#取第4行 </span></span><br></pre></td></tr></table></figure><pre><code>学号    1512332010性别             男身高           169体重            74支出           4.9开设           有必要课程          编程技术软件         ExcelName: 3, dtype: object</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.loc[<span class="number">3</span>:<span class="number">5</span>]      <span class="comment">#取3至5行 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>    </tr>    <tr>      <th>5</th>      <td>1516248014</td>      <td>男</td>      <td>183</td>      <td>76</td>      <td>85.6</td>      <td>不必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>  </tbody></table></div><ul><li>3.3.4.4  选取观测与变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.loc[<span class="number">1</span>:<span class="number">3</span>,[<span class="string">&#x27;身高&#x27;</span>,<span class="string">&#x27;体重&#x27;</span>]] <span class="comment"># 按照标签</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>171</td>      <td>68</td>    </tr>    <tr>      <th>2</th>      <td>175</td>      <td>73</td>    </tr>    <tr>      <th>3</th>      <td>169</td>      <td>74</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.iloc[<span class="number">1</span>:<span class="number">3</span>,<span class="number">1</span>:<span class="number">5</span>]  <span class="comment">#0至2行和1至5列数据</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>    </tr>  </thead>  <tbody>    <tr>      <th>1</th>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>    </tr>    <tr>      <th>2</th>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>    </tr>  </tbody></table></div><ul><li>3.3.4.5 条件选取 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[BSdata[<span class="string">&#x27;身高&#x27;</span>]&gt;<span class="number">180</span>] </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>5</th>      <td>1516248014</td>      <td>男</td>      <td>183</td>      <td>76</td>      <td>85.6</td>      <td>不必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>10</th>      <td>1520100029</td>      <td>男</td>      <td>184</td>      <td>82</td>      <td>10.3</td>      <td>有必要</td>      <td>都学习过</td>      <td>SAS</td>    </tr>    <tr>      <th>21</th>      <td>1525352033</td>      <td>男</td>      <td>185</td>      <td>83</td>      <td>5.1</td>      <td>有必要</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>32</th>      <td>1530243029</td>      <td>男</td>      <td>186</td>      <td>87</td>      <td>9.5</td>      <td>不必要</td>      <td>都未学过</td>      <td>No</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[(BSdata[<span class="string">&#x27;身高&#x27;</span>]&gt;<span class="number">180</span>) &amp; (BSdata[<span class="string">&#x27;体重&#x27;</span>]&gt;<span class="number">80</span>)] </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>10</th>      <td>1520100029</td>      <td>男</td>      <td>184</td>      <td>82</td>      <td>10.3</td>      <td>有必要</td>      <td>都学习过</td>      <td>SAS</td>    </tr>    <tr>      <th>21</th>      <td>1525352033</td>      <td>男</td>      <td>185</td>      <td>83</td>      <td>5.1</td>      <td>有必要</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>32</th>      <td>1530243029</td>      <td>男</td>      <td>186</td>      <td>87</td>      <td>9.5</td>      <td>不必要</td>      <td>都未学过</td>      <td>No</td>    </tr>  </tbody></table></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata[(BSdata[<span class="string">&#x27;身高&#x27;</span>]&gt;<span class="number">180</span>) | (BSdata[<span class="string">&#x27;体重&#x27;</span>]&gt;<span class="number">80</span>)] </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>    </tr>  </thead>  <tbody>    <tr>      <th>5</th>      <td>1516248014</td>      <td>男</td>      <td>183</td>      <td>76</td>      <td>85.6</td>      <td>不必要</td>      <td>编程技术</td>      <td>Excel</td>    </tr>    <tr>      <th>10</th>      <td>1520100029</td>      <td>男</td>      <td>184</td>      <td>82</td>      <td>10.3</td>      <td>有必要</td>      <td>都学习过</td>      <td>SAS</td>    </tr>    <tr>      <th>15</th>      <td>1523376027</td>      <td>男</td>      <td>180</td>      <td>81</td>      <td>64.1</td>      <td>有必要</td>      <td>统计方法</td>      <td>Excel</td>    </tr>    <tr>      <th>21</th>      <td>1525352033</td>      <td>男</td>      <td>185</td>      <td>83</td>      <td>5.1</td>      <td>有必要</td>      <td>都学习过</td>      <td>SPSS</td>    </tr>    <tr>      <th>32</th>      <td>1530243029</td>      <td>男</td>      <td>186</td>      <td>87</td>      <td>9.5</td>      <td>不必要</td>      <td>都未学过</td>      <td>No</td>    </tr>  </tbody></table></div><ul><li>3.3.4.6 数据框的运算 </li></ul><p>（1）生成新的数据框 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BSdata[<span class="string">&#x27;体重指数&#x27;</span>]=BSdata[<span class="string">&#x27;体重&#x27;</span>]/(BSdata[<span class="string">&#x27;身高&#x27;</span>]/<span class="number">100</span>)**<span class="number">2</span></span><br><span class="line"><span class="built_in">round</span>(BSdata[:<span class="number">5</span>],<span class="number">2</span>) </span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>学号</th>      <th>性别</th>      <th>身高</th>      <th>体重</th>      <th>支出</th>      <th>开设</th>      <th>课程</th>      <th>软件</th>      <th>体重指数</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>1510248008</td>      <td>女</td>      <td>167</td>      <td>71</td>      <td>46.0</td>      <td>不清楚</td>      <td>都未学过</td>      <td>No</td>      <td>25.46</td>    </tr>    <tr>      <th>1</th>      <td>1510229019</td>      <td>男</td>      <td>171</td>      <td>68</td>      <td>10.4</td>      <td>有必要</td>      <td>概率统计</td>      <td>Matlab</td>      <td>23.26</td>    </tr>    <tr>      <th>2</th>      <td>1512108019</td>      <td>女</td>      <td>175</td>      <td>73</td>      <td>21.0</td>      <td>有必要</td>      <td>统计方法</td>      <td>SPSS</td>      <td>23.84</td>    </tr>    <tr>      <th>3</th>      <td>1512332010</td>      <td>男</td>      <td>169</td>      <td>74</td>      <td>4.9</td>      <td>有必要</td>      <td>编程技术</td>      <td>Excel</td>      <td>25.91</td>    </tr>    <tr>      <th>4</th>      <td>1512331015</td>      <td>男</td>      <td>154</td>      <td>55</td>      <td>25.9</td>      <td>有必要</td>      <td>都学习过</td>      <td>Python</td>      <td>23.19</td>    </tr>  </tbody></table></div><p>（2）数据框的合并 concat() </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([BSdata.身高, BSdata.体重],axis=<span class="number">0</span>) <span class="comment"># 按行合并 axis=0</span></span><br></pre></td></tr></table></figure><pre><code>0     1671     1712     1753     1694     154     ... 47     6848     6549     5850     7351     67Length: 104, dtype: int64</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pd.concat([BSdata.身高, BSdata.体重],axis=<span class="number">1</span>) <span class="comment">#按列合并 axis=1 </span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>身高</th>      <th>体重</th>    </tr>  </thead>  <tbody>    <tr>      <th>0</th>      <td>167</td>      <td>71</td>    </tr>    <tr>      <th>1</th>      <td>171</td>      <td>68</td>    </tr>    <tr>      <th>2</th>      <td>175</td>      <td>73</td>    </tr>    <tr>      <th>3</th>      <td>169</td>      <td>74</td>    </tr>    <tr>      <th>4</th>      <td>154</td>      <td>55</td>    </tr>    <tr>      <th>...</th>      <td>...</td>      <td>...</td>    </tr>    <tr>      <th>47</th>      <td>175</td>      <td>68</td>    </tr>    <tr>      <th>48</th>      <td>166</td>      <td>65</td>    </tr>    <tr>      <th>49</th>      <td>159</td>      <td>58</td>    </tr>    <tr>      <th>50</th>      <td>169</td>      <td>73</td>    </tr>    <tr>      <th>51</th>      <td>165</td>      <td>67</td>    </tr>  </tbody></table><p>52 rows × 2 columns</p></div><p>（3）数据框转置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BSdata.iloc[:<span class="number">5</span>,:<span class="number">8</span>].T       <span class="comment">#数据框转置 .T</span></span><br></pre></td></tr></table></figure><div><style scoped>    .dataframe tbody tr th:only-of-type {        vertical-align: middle;    }<pre><code>.dataframe tbody tr th &#123;    vertical-align: top;&#125;.dataframe thead th &#123;    text-align: right;&#125;</code></pre><p></style></p><table border="1" class="dataframe">  <thead>    <tr style="text-align: right;">      <th></th>      <th>0</th>      <th>1</th>      <th>2</th>      <th>3</th>      <th>4</th>    </tr>  </thead>  <tbody>    <tr>      <th>学号</th>      <td>1510248008</td>      <td>1510229019</td>      <td>1512108019</td>      <td>1512332010</td>      <td>1512331015</td>    </tr>    <tr>      <th>性别</th>      <td>女</td>      <td>男</td>      <td>女</td>      <td>男</td>      <td>男</td>    </tr>    <tr>      <th>身高</th>      <td>167</td>      <td>171</td>      <td>175</td>      <td>169</td>      <td>154</td>    </tr>    <tr>      <th>体重</th>      <td>71</td>      <td>68</td>      <td>73</td>      <td>74</td>      <td>55</td>    </tr>    <tr>      <th>支出</th>      <td>46.0</td>      <td>10.4</td>      <td>21.0</td>      <td>4.9</td>      <td>25.9</td>    </tr>    <tr>      <th>开设</th>      <td>不清楚</td>      <td>有必要</td>      <td>有必要</td>      <td>有必要</td>      <td>有必要</td>    </tr>    <tr>      <th>课程</th>      <td>都未学过</td>      <td>概率统计</td>      <td>统计方法</td>      <td>编程技术</td>      <td>都学习过</td>    </tr>    <tr>      <th>软件</th>      <td>No</td>      <td>Matlab</td>      <td>SPSS</td>      <td>Excel</td>      <td>Python</td>    </tr>  </tbody></table></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第2章-数据的收集与整理&quot;&gt;&lt;a href=&quot;#第2章-数据的收集与整理&quot; class=&quot;headerlink&quot; title=&quot;第2章  数据的收集与整理&quot;&gt;&lt;/a&gt;第2章  数据的收集与整理&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>第1章-数据分析软件简介</title>
    <link href="https://zhangkh.top/799f587.html"/>
    <id>https://zhangkh.top/799f587.html</id>
    <published>2021-12-06T10:29:26.000Z</published>
    <updated>2021-12-06T10:44:02.690Z</updated>
    
    <content type="html"><![CDATA[<h1 id="《数据可视化》——-基于Python的应用"><a href="#《数据可视化》——-基于Python的应用" class="headerlink" title="《数据可视化》—— 基于Python的应用"></a>《数据可视化》—— 基于Python的应用</h1><h2 id="课程特点"><a href="#课程特点" class="headerlink" title="课程特点"></a>课程特点</h2><h3 id="Python应用-数据的分析-可视化展示"><a href="#Python应用-数据的分析-可视化展示" class="headerlink" title="Python应用 + 数据的分析 + 可视化展示"></a>Python应用 + 数据的分析 + 可视化展示</h3><h2 id="课程教材"><a href="#课程教材" class="headerlink" title="课程教材"></a>课程教材</h2><p><strong>Python数据分析基础教程——数据可视化（第2版）</strong></p><p><strong>王斌会 王术 电子工业出版社 2021.1</strong></p><h2 id="课程资源"><a href="#课程资源" class="headerlink" title="课程资源"></a>课程资源</h2><blockquote><p>课程博客：<a href="http://rstat.leanote.com/">http://Rstat.leanote.com</a> </p></blockquote><blockquote><p>课程平台：<a href="http://47.113.88.40:3838/Rstat">http://47.113.88.40:3838/Rstat</a></p></blockquote><h2 id="第1章-数据分析软件介绍"><a href="#第1章-数据分析软件介绍" class="headerlink" title="第1章  数据分析软件介绍"></a>第1章  数据分析软件介绍</h2><h2 id="1-1-数据分析软件简介"><a href="#1-1-数据分析软件简介" class="headerlink" title="1.1  数据分析软件简介"></a>1.1  数据分析软件简介</h2><h2 id="1-2-Python语言介绍"><a href="#1-2-Python语言介绍" class="headerlink" title="1.2  Python语言介绍"></a>1.2  Python语言介绍</h2><h3 id="1-2-1-Python简介"><a href="#1-2-1-Python简介" class="headerlink" title="1.2.1  Python简介"></a>1.2.1  Python简介</h3><h3 id="1-2-2-Python的功能"><a href="#1-2-2-Python的功能" class="headerlink" title="1.2.2  Python的功能"></a>1.2.2  Python的功能</h3><p>1.2.2.1  Python的特色</p><p>1.2.2.2  Python的特点</p><p>1.2.2.3  Python的库</p><h3 id="1-2-3-Python编程环境"><a href="#1-2-3-Python编程环境" class="headerlink" title="1.2.3  Python编程环境"></a>1.2.3  Python编程环境</h3><p>1.2.3.1  Python基础编程环境</p><blockquote><p>本书采用基于Anaconda的Jupyter平台进行数据分析。</p></blockquote><p>1.2.3.2  Anaconda计算发行包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在Jupyter中安装包夜很容易，执行下面的命令</span></span><br><span class="line"><span class="comment">#!pip install plotnine</span></span><br></pre></td></tr></table></figure><h2 id="1-3-Python数据分析平台"><a href="#1-3-Python数据分析平台" class="headerlink" title="1.3  Python数据分析平台"></a>1.3  Python数据分析平台</h2><h3 id="1-3-1-Jupyter数据分析平台"><a href="#1-3-1-Jupyter数据分析平台" class="headerlink" title="1.3.1  Jupyter数据分析平台"></a>1.3.1  Jupyter数据分析平台</h3><p>1.3.1.1  Jupyter 简介</p><p>1.3.1.2  Jupyter 的使用</p><ul><li>在AnacondaPrompt命令行输入</li></ul><blockquote><p>jupyter lab –notebook-dir=D:\DaPy2  </p></blockquote><blockquote><p>jupyter notebook –notebook-dir=D:\DaPy2</p></blockquote><p>1.3.1.3  Jupyter 的优点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无格式输出</span></span><br><span class="line"><span class="number">1</span> * <span class="number">8</span> + <span class="number">1</span></span><br><span class="line"><span class="number">12</span> * <span class="number">8</span> + <span class="number">2</span></span><br><span class="line"><span class="number">123</span> * <span class="number">8</span> + <span class="number">3</span> </span><br><span class="line"><span class="number">1234</span> * <span class="number">8</span> + <span class="number">4</span></span><br><span class="line"><span class="number">12345</span> * <span class="number">8</span> + <span class="number">5</span></span><br><span class="line"><span class="number">123456</span> * <span class="number">8</span> + <span class="number">6</span></span><br><span class="line"><span class="number">1234567</span> * <span class="number">8</span> + <span class="number">7</span></span><br><span class="line"><span class="number">12345678</span> * <span class="number">8</span> + <span class="number">8</span></span><br><span class="line"><span class="number">123456789</span> * <span class="number">8</span> + <span class="number">9</span></span><br></pre></td></tr></table></figure><pre><code>987654321</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 有格式输出</span></span><br><span class="line">print(<span class="string">&#x27;        1 * 8 + 1 =&#x27;</span>, <span class="number">1</span> * <span class="number">8</span> + <span class="number">1</span>)</span><br><span class="line">print(<span class="string">&#x27;       12 * 8 + 2 =&#x27;</span>, <span class="number">12</span> * <span class="number">8</span> + <span class="number">2</span>)</span><br><span class="line">print(<span class="string">&#x27;      123 * 8 + 3 =&#x27;</span>, <span class="number">123</span> * <span class="number">8</span> + <span class="number">3</span>) </span><br><span class="line">print(<span class="string">&#x27;     1234 * 8 + 4 =&#x27;</span>, <span class="number">1234</span> * <span class="number">8</span> + <span class="number">4</span>)</span><br><span class="line">print(<span class="string">&#x27;    12345 * 8 + 5 =&#x27;</span>, <span class="number">12345</span> * <span class="number">8</span> + <span class="number">5</span>)</span><br><span class="line">print(<span class="string">&#x27;   123456 * 8 + 6 =&#x27;</span>, <span class="number">123456</span> * <span class="number">8</span> + <span class="number">6</span>)</span><br><span class="line">print(<span class="string">&#x27;  1234567 * 8 + 7 =&#x27;</span>, <span class="number">1234567</span> * <span class="number">8</span> + <span class="number">7</span>)</span><br><span class="line">print(<span class="string">&#x27; 12345678 * 8 + 8 =&#x27;</span>, <span class="number">12345678</span> * <span class="number">8</span> + <span class="number">8</span>)</span><br><span class="line">print(<span class="string">&#x27;123456789 * 8 + 9 =&#x27;</span>, <span class="number">123456789</span> * <span class="number">8</span> + <span class="number">9</span>)</span><br></pre></td></tr></table></figure><pre><code>        1 * 8 + 1 = 9       12 * 8 + 2 = 98      123 * 8 + 3 = 987     1234 * 8 + 4 = 9876    12345 * 8 + 5 = 98765   123456 * 8 + 6 = 987654  1234567 * 8 + 7 = 9876543 12345678 * 8 + 8 = 98765432123456789 * 8 + 9 = 987654321</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 乘法口诀</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>): <span class="comment">#range(1,10)=[1,2,3,4,5,6,7,8,9]</span></span><br><span class="line">     <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,i+<span class="number">1</span>):</span><br><span class="line">        print(<span class="string">&quot;%d×%d=%d&quot;</span>%(j,i,j*i),end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">     print(<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><pre><code>1×1=1 1×2=2 2×2=4 1×3=3 2×3=6 3×3=9 1×4=4 2×4=8 3×4=12 4×4=16 1×5=5 2×5=10 3×5=15 4×5=20 5×5=25 1×6=6 2×6=12 3×6=18 4×6=24 5×6=30 6×6=36 1×7=7 2×7=14 3×7=21 4×7=28 5×7=35 6×7=42 7×7=49 1×8=8 2×8=16 3×8=24 4×8=32 5×8=40 6×8=48 7×8=56 8×8=64 1×9=9 2×9=18 3×9=27 4×9=36 5×9=45 6×9=54 7×9=63 8×9=72 9×9=81 </code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>];x</span><br><span class="line">y=[<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">10</span>];y         <span class="comment">#y=2x</span></span><br></pre></td></tr></table></figure><pre><code>[2, 4, 6, 8, 10]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt <span class="comment">#加载基本绘图包   </span></span><br><span class="line">plt.plot(x,y);                  <span class="comment">#线图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112061836589.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(x,y,<span class="string">&#x27;o-&#x27;</span>);            <span class="comment">#点线图</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112061836346.png" alt="png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> *    <span class="comment">#加载数值运算包</span></span><br><span class="line">t=linspace(<span class="number">0</span>,<span class="number">2</span>*pi)</span><br><span class="line">x=<span class="number">2</span>*sin(t);y=<span class="number">3</span>*cos(t)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt    <span class="comment">#加载基本绘图包</span></span><br><span class="line">plt.plot(x,y,c=<span class="string">&#x27;red&#x27;</span>); plt.axvline(x=<span class="number">0</span>); plt.axhline(y=<span class="number">0</span>);</span><br><span class="line">plt.text(<span class="number">0.2</span>,<span class="number">1</span>,<span class="string">r&#x27;$\frac&#123;x^2&#125;&#123;2^2&#125;+\frac&#123;y^2&#125;&#123;3^2&#125;=1$&#x27;</span>,fontsize=<span class="number">15</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202112061836351.png" alt="png"></p><h3 id="1-3-2-Python在线分析平台"><a href="#1-3-2-Python在线分析平台" class="headerlink" title="1.3.2  Python在线分析平台"></a>1.3.2  Python在线分析平台</h3><p>国外（较慢）：<a href="http://www.jupyter.org/">www.jupyter.org</a></p><p>国内（注册）：<a href="https://www.heywhale.com/mw/project/5f619f7aae300e004602aa3d?token=3aff97571dcb6299">https://www.heywhale.com/mw/project/5f619f7aae300e004602aa3d?token=3aff97571dcb6299</a></p><h2 id="1-4-Python编程入门"><a href="#1-4-Python编程入门" class="headerlink" title="1.4  Python编程入门"></a>1.4  Python编程入门</h2><h3 id="1-4-1-Python的工作目录"><a href="#1-4-1-Python的工作目录" class="headerlink" title="1.4.1  Python的工作目录"></a>1.4.1  Python的工作目录</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#获得当前目录</span></span><br><span class="line">%pwd</span><br></pre></td></tr></table></figure><pre><code>&#39;E:\\6.py\\Course\\DaPy\\DaPy2-Code&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#改变工作目录</span></span><br><span class="line">%cd <span class="string">&quot;D:\\DaPy&quot;</span></span><br><span class="line">%pwd  </span><br></pre></td></tr></table></figure><pre><code>[WinError 2] 系统找不到指定的文件。: &#39;D:\\\\DaPy&#39;E:\6.py\Course\DaPy\DaPy2-Code&#39;E:\\6.py\\Course\\DaPy\\DaPy2-Code&#39;</code></pre><h3 id="1-4-2-Python的分析用包"><a href="#1-4-2-Python的分析用包" class="headerlink" title="1.4.2  Python的分析用包"></a>1.4.2  Python的分析用包</h3><p>1.4.2.1 常用的数据分析包1.4.2.2 Python包的安装与加载</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!pip install plotnine  <span class="comment">#安装 plotnine 包</span></span><br></pre></td></tr></table></figure><pre><code>ERROR: Invalid requirement: &#39;#安装&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math            <span class="comment">#基础数学包</span></span><br><span class="line"><span class="keyword">import</span> numpy           <span class="comment">#数值分析包</span></span><br><span class="line"><span class="keyword">import</span> pandas          <span class="comment">#数据操作包</span></span><br><span class="line"><span class="keyword">import</span> matplotlib      <span class="comment">#基本绘图包</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt, log, pi</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.interactiveshell <span class="keyword">import</span> InteractiveShell <span class="keyword">as</span> IS</span><br><span class="line">IS.ast_node_interactivity = <span class="string">&quot;all&quot;</span>            <span class="comment">#多行命令一次输出</span></span><br></pre></td></tr></table></figure><h3 id="1-4-3-Python的数据类型"><a href="#1-4-3-Python的数据类型" class="headerlink" title="1.4.3  Python的数据类型"></a>1.4.3  Python的数据类型</h3><p>1.4.3.1  Python对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看数据对象</span></span><br><span class="line"><span class="comment">#%who</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成数据对象 </span></span><br><span class="line">x=<span class="number">10.12</span> <span class="comment">#创建对象 x</span></span><br><span class="line"><span class="comment">#%who</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除数据对象 </span></span><br><span class="line"><span class="keyword">del</span> x <span class="comment">#删除对象 x</span></span><br><span class="line"><span class="comment">#%who</span></span><br></pre></td></tr></table></figure><p>1.4.3.2  基本数据类型<br>（1）数值型 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">10</span>             <span class="comment">#整数</span></span><br><span class="line">n                <span class="comment">#无格式输出，相当于 print(n)</span></span><br></pre></td></tr></table></figure><pre><code>10</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;n=&quot;</span>,n)    <span class="comment">#有格式输出</span></span><br><span class="line">x=<span class="number">10.234</span>         <span class="comment">#实数</span></span><br><span class="line">x</span><br><span class="line">print(x) </span><br><span class="line">print(<span class="string">&quot;x=%10.5f&quot;</span>%x)</span><br></pre></td></tr></table></figure><pre><code>n= 1010.23410.234x=  10.23400</code></pre><p>（2）逻辑型 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="literal">True</span>;a </span><br><span class="line">b=<span class="literal">False</span>;b</span><br></pre></td></tr></table></figure><pre><code>TrueFalse</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span>&gt;<span class="number">3</span></span><br><span class="line"><span class="number">10</span>&lt;<span class="number">3</span></span><br></pre></td></tr></table></figure><pre><code>TrueFalse</code></pre><p>（3）字符型 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;I love Python&#x27;</span>;</span><br><span class="line">s</span><br><span class="line">s[<span class="number">7</span>]</span><br><span class="line">s[<span class="number">2</span>:<span class="number">6</span>] </span><br><span class="line">s+<span class="string">&#x27; &#x27;</span>+s </span><br><span class="line">s*<span class="number">2</span></span><br></pre></td></tr></table></figure><pre><code>&#39;I love Python&#39;&#39;P&#39;&#39;love&#39;&#39;I love Python I love Python&#39;&#39;I love PythonI love Python&#39;</code></pre><p>1.4.3.3 标准数据类型<br>（1）List（列表）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list1 =[]          <span class="comment"># 空列表</span></span><br><span class="line">list1 </span><br></pre></td></tr></table></figure><pre><code>[]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list1 = [<span class="string">&#x27;Python&#x27;</span>, <span class="number">786</span> , <span class="number">2.23</span>, <span class="string">&#x27;R&#x27;</span>, <span class="number">70.2</span>]</span><br><span class="line">list1               <span class="comment"># 输出完整列表</span></span><br></pre></td></tr></table></figure><pre><code>[&#39;Python&#39;, 786, 2.23, &#39;R&#39;, 70.2]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list1[<span class="number">0</span>]            <span class="comment"># 输出列表的第一个元素 </span></span><br></pre></td></tr></table></figure><pre><code>&#39;Python&#39;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">list1[<span class="number">1</span>:<span class="number">3</span>]          <span class="comment"># 输出第二个至第三个元素 </span></span><br></pre></td></tr></table></figure><pre><code>[786, 2.23]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">list1[<span class="number">2</span>:]           <span class="comment"># 输出从第三个开始至列表末尾的所有元素</span></span><br><span class="line">list1 * <span class="number">2</span>           <span class="comment"># 输出列表两次 </span></span><br><span class="line">list1 + list1[<span class="number">2</span>:<span class="number">4</span>]  <span class="comment"># 打印组合的列表</span></span><br></pre></td></tr></table></figure><pre><code>[2.23, &#39;R&#39;, 70.2][&#39;Python&#39;, 786, 2.23, &#39;R&#39;, 70.2, &#39;Python&#39;, 786, 2.23, &#39;R&#39;, 70.2][&#39;Python&#39;, 786, 2.23, &#39;R&#39;, 70.2, 2.23, &#39;R&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">9</span>];X</span><br></pre></td></tr></table></figure><pre><code>[1, 3, 6, 4, 9]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sex=[<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;男&#x27;</span>]</span><br><span class="line">sex </span><br></pre></td></tr></table></figure><pre><code>[&#39;女&#39;, &#39;男&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;]</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">weight=[<span class="number">67</span>,<span class="number">66</span>,<span class="number">83</span>,<span class="number">68</span>,<span class="number">70</span>]; </span><br><span class="line">weight</span><br></pre></td></tr></table></figure><pre><code>[67, 66, 83, 68, 70]</code></pre><p>（2）Dictionary（字典） </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#125; <span class="comment">#空字典</span></span><br></pre></td></tr></table></figure><pre><code>&#123;&#125;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict1=&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;john&#x27;</span>,<span class="string">&#x27;code&#x27;</span>:<span class="number">6734</span>,<span class="string">&#x27;dept&#x27;</span>:<span class="string">&#x27;sales&#x27;</span>&#125;;dict1 <span class="comment">#定义字典 </span></span><br></pre></td></tr></table></figure><pre><code>&#123;&#39;name&#39;: &#39;john&#39;, &#39;code&#39;: 6734, &#39;dept&#39;: &#39;sales&#39;&#125;</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict1[<span class="string">&#x27;code&#x27;</span>] <span class="comment"># 输出键为&#x27;code&#x27; 的值</span></span><br></pre></td></tr></table></figure><pre><code>6734</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict1.keys() <span class="comment"># 输出所有键 </span></span><br></pre></td></tr></table></figure><pre><code>dict_keys([&#39;name&#39;, &#39;code&#39;, &#39;dept&#39;])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict1.values() <span class="comment"># 输出所有值</span></span><br></pre></td></tr></table></figure><pre><code>dict_values([&#39;john&#39;, 6734, &#39;sales&#39;])</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict2=&#123;<span class="string">&#x27;sex&#x27;</span>: sex,<span class="string">&#x27;weight&#x27;</span>:weight&#125;; dict2 <span class="comment">#根据列表构成字典</span></span><br></pre></td></tr></table></figure><pre><code>&#123;&#39;sex&#39;: [&#39;女&#39;, &#39;男&#39;, &#39;男&#39;, &#39;女&#39;, &#39;男&#39;], &#39;weight&#39;: [67, 66, 83, 68, 70]&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;《数据可视化》——-基于Python的应用&quot;&gt;&lt;a href=&quot;#《数据可视化》——-基于Python的应用&quot; class=&quot;headerlink&quot; title=&quot;《数据可视化》—— 基于Python的应用&quot;&gt;&lt;/a&gt;《数据可视化》—— 基于Python的应用&lt;/</summary>
      
    
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/categories/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
    
    <category term="《数据可视化》——基于Python的应用" scheme="https://zhangkh.top/tags/%E3%80%8A%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E3%80%8B%E2%80%94%E2%80%94%E5%9F%BA%E4%BA%8EPython%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>石河子大学网络教育平台ppt不限制批量下载pdf</title>
    <link href="https://zhangkh.top/c29e6364.html"/>
    <id>https://zhangkh.top/c29e6364.html</id>
    <published>2021-11-14T08:45:27.000Z</published>
    <updated>2021-11-14T09:19:42.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="石河子大学网络教育平台ppt不限制批量下载pdf"><a href="#石河子大学网络教育平台ppt不限制批量下载pdf" class="headerlink" title="石河子大学网络教育平台ppt不限制批量下载pdf"></a>石河子大学网络教育平台ppt不限制批量下载pdf</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>这不是老有些朋友让把学校网络教育平台的老师在线课件下载下来，闲时就整理下思路，写好代码并且封装成软件，下次再出现这种事就简单了</p><h2 id="CONTENT"><a href="#CONTENT" class="headerlink" title="CONTENT"></a>CONTENT</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>石河子大学网络教育平台ppt不限制批量下载pdf</p><p><strong>注意！！！</strong></p><p><strong>本程序会获取你的账户信息，网上ppt都为石大老师精心编排，特别是只让在线看的，仅供学习交流用完资料请删除，切勿牟利传播</strong></p><p><strong>本程序会获取你的账户信息，网上ppt都为石大老师精心编排，特别是只让在线看的，仅供学习交流用完资料请删除，切勿牟利传播</strong></p><p><strong>本程序会获取你的账户信息，网上ppt都为石大老师精心编排，特别是只让在线看的，仅供学习交流用完资料请删除，切勿牟利传播</strong></p><p>用户只用获取ppt列表页面链接和输入账户信息Cookies即可不限制批量下载pdf课件</p><h3 id="下载代码或者软件"><a href="#下载代码或者软件" class="headerlink" title="下载代码或者软件"></a>下载代码或者软件</h3><ol><li><a href="https://gitee.com/zhangkaiheng/shzu_eol_down_pdf">代码</a></li><li><a href="https://gitee.com/zhangkaiheng/shzu_eol_down_pdf/releases/1.0">exe软件</a></li></ol><h3 id="获取ppt列表页面链接和账户信息Cookies"><a href="#获取ppt列表页面链接和账户信息Cookies" class="headerlink" title="获取ppt列表页面链接和账户信息Cookies"></a>获取ppt列表页面链接和账户信息Cookies</h3><ol><li><p>登录网络教育平台——选择课程进入——课程资源找到ppt页面按钮</p></li><li><p>右键在新标签页打开</p><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202111141306461.png" alt="image-20211114130655487"></p></li><li><p>在新的页面右键检查或者直接F12后，点击网络-文档-清理图标-刷新网页</p><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202111141308319.png" alt="image-20211114130853986"></p></li><li><p>网页地址栏链接即ppt列表页面链接，再点击唯一的文档会出现详情页面，找到Cookie后面的右键复制值即可得到账户信息Cookies</p><p><img src="https://gitee.com/cit_k/pictures/raw/master/picture/202111141314768.png" alt="image-20211114131441104"></p></li></ol><h3 id="运行PY文件或exe软件"><a href="#运行PY文件或exe软件" class="headerlink" title="运行PY文件或exe软件"></a>运行PY文件或exe软件</h3><ol><li>如果你有Python环境就可以直接运行.py文件</li><li>如果没有就下载发行版的.exe文件在本地运行然后根据提示粘贴上面获取到的链接和Cookies</li></ol><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>总的来说，爬虫就是可见即可爬，就是通过网页抓包链接来抓取数据嘛</p><p>后期有闲情时再做个用户界面吧</p><p>参考文章：</p><ul><li>无</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;石河子大学网络教育平台ppt不限制批量下载pdf&quot;&gt;&lt;a href=&quot;#石河子大学网络教育平台ppt不限制批量下载pdf&quot; class=&quot;headerlink&quot; title=&quot;石河子大学网络教育平台ppt不限制批量下载pdf&quot;&gt;&lt;/a&gt;石河子大学网络教育平台ppt</summary>
      
    
    
    
    <category term="Python" scheme="https://zhangkh.top/categories/Python/"/>
    
    
    <category term="Python" scheme="https://zhangkh.top/tags/Python/"/>
    
  </entry>
  
</feed>
