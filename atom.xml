<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>爱爬虫与大数据 | 张凯恒的个人博客</title>
  <icon>https://www.gravatar.com/avatar/2e41654fe4ea52b82f9e4f5f11453362</icon>
  
  <link href="https://zhangkh.top/atom.xml" rel="self"/>
  
  <link href="https://zhangkh.top/"/>
  <updated>2021-03-06T12:05:37.000Z</updated>
  <id>https://zhangkh.top/</id>
  
  <author>
    <name>Kit</name>
    <email>2514154656@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MATLAB R2020b官方v9.8.0Mac/Win原版及安装激活教程</title>
    <link href="https://zhangkh.top/6933ffae.html"/>
    <id>https://zhangkh.top/6933ffae.html</id>
    <published>2021-03-06T12:05:37.000Z</published>
    <updated>2021-03-06T12:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MATLAB-R2020b官方v9-8-0Mac-Win原版及安装激活教程"><a href="#MATLAB-R2020b官方v9-8-0Mac-Win原版及安装激活教程" class="headerlink" title="MATLAB R2020b官方v9.8.0Mac/Win原版及安装激活教程"></a>MATLAB R2020b官方v9.8.0Mac/Win原版及安装激活教程</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>MathWorks MATLAB R2020a v9.8.0.1323502 x64 最新版已经更新;Matlab是matrix&amp;laboratory两个词的组合，意为矩阵工厂（矩阵实验室）。是由美国mathworks公司发布的主要面对科学计算、可视化以及交互式程序设计的高科技计算环境。它将数值分析、矩阵计算、科学数据可视化以及非线性动态系统的建模和仿真等诸多强大功能集成在一个易于使用的视窗环境中，为科学研究、工程设计以及必须进行有效数值计算的众多科学领域提供了一种全面的解决方案，并在很大程度上摆脱了传统非交互式程序设计语言（如C、Fortran）的编辑模式，代表了当今国际科学计算软件的先进水平。<br> MATLAB和Mathematica、Maple并称为三大数学软件。它在数学类科技应用软件中在数值计算方面首屈一指。MATLAB可以进行矩阵运算、绘制函数和数据、实现算法、创建用户界面、连接其他编程语言的程序等，主要应用于工程计算、控制设计、信号处理与通讯、图像处理、信号检测、金融建模设计与分析等领域。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/E73OEnn4aq6kajdTgg90dxIKjvgp4CMI.png" alt="img"></p><h2 id="Mac环境安装"><a href="#Mac环境安装" class="headerlink" title="Mac环境安装"></a>Mac环境安装</h2><h3 id="Mac版Matlab-R2020b下载"><a href="#Mac版Matlab-R2020b下载" class="headerlink" title="Mac版Matlab R2020b下载"></a>Mac版Matlab R2020b下载</h3><p><a href="https://citpan.herokuapp.com/CITpan/CIT%E5%B0%8F%E7%BB%84%E8%B5%84%E6%BA%90/MatLab/">不限速下载链接</a>，建议NDM等多线程下载，可达到最佳速度</p><h3 id="Mac安装过程"><a href="#Mac安装过程" class="headerlink" title="Mac安装过程"></a>Mac安装过程</h3><p>Mac版本安装包极大,如果出现错误请先对比MD5码;</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_e0DVNgGgBV.png" alt="img"></p><p> 1.先断网！之后打开安装包,双击InstallForMacOSX开始安装;(文件太大,安装程序启动很慢,耐心等待) </p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_sMyZ9HlHoo.png" alt="img"></p><p> 2.同意一些协之后输入安装Key:<code>09806-07443-53955-64350-21751-41297</code></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_kjyvnpdFgy.png" alt="img"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_rKaAfFvf03.png" alt="img"></p><p>3.提示选择许可证，解压Matlabr2020_Mac_Patch.zip文件,得到Crack文件夹,选择其中的<code>license_standalone.lic</code>许可证文件,点击下一步;选择安装位置,默认下一步即可</p><p><img src= "/image/loading.gif" data-lazy-src="https://img2.macxin.com/images/2020/04/16/vVJ7BKGuwc.gif"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/%E6%88%AA%E5%B1%8F2021-03-04%2001.55.44.png"></p><p>4.选择要安装的组件,自己选择,如果全选也可以,就是安装时间较长;点击下一步开始安装过程,大概半小时左右可以安装完成;(视磁盘性能而定)</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_JTFrGviXk9.png"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_3UOorU2m69.png"></p><p> 5.安装完成后,拷贝Crack文件夹中的<code>libmwlmgrimpl.dylib</code>文件到目录<code>/applications/Polyspace/r2020a/bin/maci64/matlab_startup_plugins/lmgrimpl/</code>替换同名文件即可;</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_rEXwPA4h2U.png"></p><p> 6.完成了;关于启动程序,在路径<code>/applications/Polyspace/r2020a/bin/maci64/MATLABWindow</code>中,右键新建一个替身拖到桌面即可;</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_7OV80PvUHt.png"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/7XCnOGx4Nq.gif"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_MOtBJE1B9b.png"></p><h2 id="Win安装过程"><a href="#Win安装过程" class="headerlink" title="Win安装过程"></a>Win安装过程</h2><h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>如果没有毒盘VIP或者一定手段，不建议用下面链接（由于文件太大手机能打开，电脑网页端等会显示404）</p><p>链接：<a href="https://pan.baidu.com/s/1QFnBlCFjIfOh8ggEudtZXQ">https://pan.baidu.com/s/1QFnBlCFjIfOh8ggEudtZXQ</a> 提取码：sx6r</p><p>建议用下面👇链接</p><p><a href="https://zuaazjueducn-my.sharepoint.com/:f:/g/personal/zy2018_zuaa_zju_edu_cn/EicaBPZ5-uJEjwXrW3w98msBGWFXbT1SUhXVSdIrwRMh2w?e=KBYkCP">Onedrive链接</a>，密码：2020，解压密码：<a href="http://www.macxin.com/">www.macxin.com</a></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210306025815946.png" alt="image-20210306025815946"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>1.断网,右击ISO镜像文件选择挂载(我用了2019的图演示,道理是一样的)这个时候计算机里就会出现一个虚拟光驱,右击打开虚拟光驱之后进入bin文件夹,选择以管理员身份运行Setup.exe启动安装程序(如动图<br><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210306024702234.png" alt="image-20210306024702234"><br> 2.同意一些协议之类的,之后输入安装Key:<code>09806-07443-53955-64350-21751-41297</code><strong>注意:这个时候你的电脑一定要断网!</strong></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_rNaSGia6eR.png"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_JMPDcASpx4.png"></p><p>3.之后会提示让你选择许可证,解压下载的<code>Matlab R2020a Win64 Crack.zip</code>文件,选择里面的<code>icense_standalone.lic</code>文件,点击下一步,之后选择要安装的位置,安装大概需要30G+的硬盘空间;之后选择安装组件,推荐勾掉第一个Server组件,其他的自己选择就行了,之后就是漫长的等待安装完成;(如图<br> <img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/9Ob37kWPRb.gif" alt="img"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/mstsc_0a0JTvJrF4.png"></p><p>4.软件激活,替换文件,打开解压好的<code>Matlab R2020a Win64 Crack</code>文件夹复制里面的R2020a文件夹,替换到软件安装目录{如图</p><p><img src= "/image/loading.gif" data-lazy-src="https://img2.macxin.com/images/2020/03/26/RSbCluaTTv.gif"></p><p>5.创建快捷方式,默认软件安装完成只创建一个Polyspace R2020a快捷方式,我们可以进入安装目录再创建一个Matlab的快捷方式,如图</p><p><img src= "/image/loading.gif" data-lazy-src="https://img2.macxin.com/images/2020/03/26/QR1DarNaFx.gif"></p><p> 6.试运行</p><p><img src= "/image/loading.gif" data-lazy-src="https://img2.macxin.com/images/2020/03/27/8jbC6jTTwa.gif"></p><p>参考：</p><ul><li><a href="https://www.macxin.com/archives/18891.html">MATLAB R2020a v9.8.0 Mac/Win/Linux 官方原版+安装激活教程</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MATLAB-R2020b官方v9-8-0Mac-Win原版及安装激活教程&quot;&gt;&lt;a href=&quot;#MATLAB-R2020b官方v9-8-0Mac-Win原版及安装激活教程&quot; class=&quot;headerlink&quot; title=&quot;MATLAB R2020b官方v9.</summary>
      
    
    
    
    <category term="数学建模" scheme="https://zhangkh.top/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数学建模" scheme="https://zhangkh.top/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="Matlab" scheme="https://zhangkh.top/tags/Matlab/"/>
    
  </entry>
  
  <entry>
    <title>ffmpeg无损快速剪切截取合并视频</title>
    <link href="https://zhangkh.top/fe4b7fcd.html"/>
    <id>https://zhangkh.top/fe4b7fcd.html</id>
    <published>2021-03-05T04:05:37.000Z</published>
    <updated>2021-03-05T04:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="FFmpeg无损快速剪切截取合并视频"><a href="#FFmpeg无损快速剪切截取合并视频" class="headerlink" title="FFmpeg无损快速剪切截取合并视频"></a>FFmpeg无损快速剪切截取合并视频</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>市场调研培训的视频时长10个多小时，太大（B站过审限制为10G，超过的要分P），但我只想把其中的广告剪去掉就能满足要求。用Final Cut Pro剪辑视频时导出367G？？？压缩还得好几十G。无奈，只好无损剪切视频。</p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>很多人都有这样的需求：就是把一部电影中的某一段单独保存下来。或用于编辑或用于保存这样的事情，通常被称为“分割”，或“切割”。其实，说截取比较好一些。就是从一段视频中把一小段截取出来做为已用。视频的截取，分为两种。一种是另存，一种是分割。这二者的区别在于：分割是无损的，速度快，基本上和拷贝的速度差不多；而另存，是重新编码，速度慢，如果你的机器很慢的话，那么就不是一个<em>“</em>慢<em>”</em>字了得了，如果你感情足够脆弱的话，会哭的<em>……</em></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>感谢<a href="https://github.com/FFmpeg/FFmpeg">FFmpeg</a></p><p>Mac安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install ffmpeg</span><br></pre></td></tr></table></figure><p>其他环境请自行百度谷歌</p><h2 id="截取视频"><a href="#截取视频" class="headerlink" title="截取视频"></a>截取视频</h2><p>截取INPUT视频从START到DURATION的片段输出为OUTPUT：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -y -ss START -t DURATION -i INPUT -c copy OUTPUT</span><br></pre></td></tr></table></figure><p>-y 覆盖已经存在的文件；</p><p>-ss 开始时间，如： 0:5:20，表示从5分20秒开始；</p><p>-t 时长，如： 0:9:39，表示截取4分19秒长的视频；</p><p>-i 输入，后面是空格，紧跟着就是输入视频文件；</p><p>-c copy，拷贝所有流；</p><p>INPUT，输入视频文件；</p><p>OUTPUT，输出视频文件；</p><p>例如截取input.mp4视频从0:5:20到0:9:39的片段输出为output.mp4：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -y -ss 0:5:20 -t 0:9:39 -i input.mp4 -c copy output.mp4</span><br></pre></td></tr></table></figure><h2 id="合并视频"><a href="#合并视频" class="headerlink" title="合并视频"></a>合并视频</h2><p>FFmpeg合并视频有很多方法，但首推使用<strong>FFmpeg concat 分离器</strong></p><p>先在要合并视频的文件夹内新建list.txt，里面编辑格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">file &#39;input1.mp4&#39;</span><br><span class="line">file &#39;input2.mp4&#39;</span><br><span class="line">file &#39;input3.mp4&#39;</span><br><span class="line">···</span><br></pre></td></tr></table></figure><p>然后进行读取txt文件里文件名进行concat合并视频：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -f concat -i list.txt -c copy output.mp4</span><br></pre></td></tr></table></figure><p>例如：将1.mp4与2.mp4进行合并，先打开终端切换到视频文件路径，在创建list.txt文件后进行编辑保存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file 1.mp4</span><br><span class="line">file 2.mp4</span><br></pre></td></tr></table></figure><p>终端执行下面代码进行合并</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -f concat -i list.txt -c copy output.mp4</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210305114637107.png" alt="image-20210305114637107"></p><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><p>我的要传到的B站视频有1.67G，时长10:47:07，按照要求要把视频时长减为10小时以内，这样就只许把里面的广告剪切掉就行：首先利用截取视频提取不是广告的片段，然后利用合并视频将视频片段按照顺序进行合并。全程不到5分钟，而且视频无损，效率远大于视频剪辑。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210305115405989.png" alt="image-20210305115405989"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>FFmpeg能力不止于此，还是非常强大的，比如视频格式转化、下载You-get不能下载的保护视频等</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;FFmpeg无损快速剪切截取合并视频&quot;&gt;&lt;a href=&quot;#FFmpeg无损快速剪切截取合并视频&quot; class=&quot;headerlink&quot; title=&quot;FFmpeg无损快速剪切截取合并视频&quot;&gt;&lt;/a&gt;FFmpeg无损快速剪切截取合并视频&lt;/h1&gt;&lt;h2 id=&quot;背</summary>
      
    
    
    
    <category term="FFmpeg" scheme="https://zhangkh.top/categories/FFmpeg/"/>
    
    
    <category term="FFmpeg" scheme="https://zhangkh.top/tags/FFmpeg/"/>
    
  </entry>
  
  <entry>
    <title>Vercel加速GitHub Pages</title>
    <link href="https://zhangkh.top/d746f3f.html"/>
    <id>https://zhangkh.top/d746f3f.html</id>
    <published>2021-03-01T04:05:37.000Z</published>
    <updated>2021-03-01T04:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Vercel加速GitHub-Pages"><a href="#Vercel加速GitHub-Pages" class="headerlink" title="Vercel加速GitHub Pages"></a>Vercel加速GitHub Pages</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>CloudFlare加速Github Page国内延迟和速度不是最优的，碰巧了解到Vercel也能加速Github Pages，效果还更好，故在此进行记录总结。</p><h2 id="Vercel是什么"><a href="#Vercel是什么" class="headerlink" title="Vercel是什么"></a>Vercel是什么</h2><p>前身是Zeit now（电信线路极为优秀），后改名改名为 Vercel了（好像被收购了）。相比于Netlify，Vercel（下文全都用此名称）CDN分布广、免费功能较为齐全（Vercel免费用户提供每个月100GB的流量，跟Github Pages是一样的）、在中国大陆访问站点在台湾速度快以及有命令行程序CLI等，但缺点也有许多：不能像Netlify那样插入代码等。但对于我的博客实在够用了，话不多说，开干！！！</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ul><li>Github Pages博客</li><li>域名</li><li>电子邮箱（最好谷歌邮箱，QQ邮箱有部分人反应会出错）</li></ul><h2 id="注册Vercel账号"><a href="#注册Vercel账号" class="headerlink" title="注册Vercel账号"></a>注册Vercel账号</h2><p>在<a href="https://zeit.co/">Vercel官方网站</a>用准备好的邮箱注册一个账号，可以用Github/Gitlab登陆，然后点击Sign Up注册一个账号或者点击Login登录。<br><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/format,png.png" alt="在这里插入图片描述"></p><h2 id="导入仓库"><a href="#导入仓库" class="headerlink" title="导入仓库"></a>导入仓库</h2><p>点击<a href="https://vercel.com/dashboard">New Project</a>进入给予github权限选择github账户下的你的博客仓库。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210301170211828.png" alt="image-20210301170211828"></p><h2 id="部署及域名绑定"><a href="#部署及域名绑定" class="headerlink" title="部署及域名绑定"></a>部署及域名绑定</h2><p>导入之后会发现它已经分配给你一个.verel.app的域名，此时我们只需在上面的输入框输入自己的域名点击add后按照提示绑定就行</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210301171704544.png" alt="image-20210301171704544"></p><h2 id="部署后"><a href="#部署后" class="headerlink" title="部署后"></a>部署后</h2><p>ping一下，几乎都是绿的</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210301172647731.png" alt="image-20210301172647731"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>挺不错的，暂时用它了！</p><p>参考：</p><ul><li><a href="https://www.tangruiping.com/post/zeit-github-pages-hexo-sync.html#Zeit-Github-Cloudflare-Netlify%E9%80%9F%E5%BA%A6%E5%AF%B9%E6%AF%94">Vercel Zeit now自动部署Github为hexo博客加速</a></li><li><a href="https://www.iaia.cc/posts/2418998582.html">优雅的使用Vercel加速GitHub Pages</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Vercel加速GitHub-Pages&quot;&gt;&lt;a href=&quot;#Vercel加速GitHub-Pages&quot; class=&quot;headerlink&quot; title=&quot;Vercel加速GitHub Pages&quot;&gt;&lt;/a&gt;Vercel加速GitHub Pages&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="Hexo" scheme="https://zhangkh.top/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://zhangkh.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Namesilo购买解析域名+CloudFlare加速Github Page</title>
    <link href="https://zhangkh.top/a10d2364.html"/>
    <id>https://zhangkh.top/a10d2364.html</id>
    <published>2021-02-25T04:05:37.000Z</published>
    <updated>2021-02-25T04:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Namesilo购买解析域名-CloudFlare加速Github-Page"><a href="#Namesilo购买解析域名-CloudFlare加速Github-Page" class="headerlink" title="Namesilo购买解析域名+CloudFlare加速Github Page"></a>Namesilo购买解析域名+CloudFlare加速Github Page</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在gitee、github双部署后，github pages国内速度太慢，有点强迫症，就套一层 cloudflare CDN加速github page（需要域名，免费版本是有请求次数限制的，每天 10W 次，博客足够了；哪天官方不提供免费套餐了，把 DNS 的 NS 解析记录回去就行）。可又没有域名，无奈，就花点小钱买来玩玩吧。</p><h2 id="域名选择"><a href="#域名选择" class="headerlink" title="域名选择"></a>域名选择</h2><p><strong>如果准备买国内服务器，建议在阿里云或者腾讯云购买域名，虽然要实名认证，但是国内服务器本身也要备案</strong>。如果是准备购买国外服务器，建议在 Namesilo 购买域名。千万 千万 不要在 Godaddy 购买域名，这是个坑！！</p><h2 id="Namesilo"><a href="#Namesilo" class="headerlink" title="Namesilo"></a>Namesilo</h2><p>如果有优惠码，价格不错，虽说可能没 Godaddy 便宜，但是至少比国内域名便宜，而且 Godaddy 的便宜是有代价的。最后域名本身也不贵，也没必要在乎十多块钱的差价。主要还是体验，Namesilo 续费不会留坑，隐私保护的好，Godaddy 如果用信用卡付款，还会被抽到验证身份，这是最坑的，可能需要上传身份证照片，贼恶心。</p><h2 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h2><p>namesilo注册视频的话可以看<a href="https://www.bilibili.com/video/BV11E411L7AA?from=search&seid=15025364950076604501">这个</a></p><p>总之邮箱注册+身份填写+域名搜索+选择购买下单，很简单。其中这一步要留意</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/2-2.png" alt="《2019 Namesilo 购买域名 解析域名 图文教程》"></p><p>这里内容比较多，最为重要。第一个箭头和我一样即可。第二个箭头位置 Auto-Renew，设置域名是否自动续费，自行确定，支付宝不虚。第三个箭头位置 Privacy Setting 代表域名隐私保护设置，建议设置成 WHOIS Privacy ，反正是免费的。第四个箭头代表 购买几年。使用优惠码好像第一次只能一年。。。最后箭头代表优惠码，如果填写优惠码会便宜 1 美元。本来我这里是 $6.99 ，优惠会是 $5.99。</p><h2 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a>解析域名</h2><p>通过域名提供商，修改刚刚的域名解析，通过 A 记录分别解析到以下 4 个 IP：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure><p>比如我的：</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210224195345660.png" alt="image-20210224195345660"></p><p>设置完之后通过命令行验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig monkeywie.cn +noall +answer</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210224184654805.png" alt="image-20210224184654805"></p><p>如果ip是上面的就代表已经生效了。当记录全部解析生效时，就可以通过<code>http://zhangkh.top</code>访问到博客了，这个时候再开启<code>HTTPS</code>，示例图：</p><p><img src= "/image/loading.gif" data-lazy-src="https://monkeywie.cn/2020/08/20/fast-github-page-with-cloudflare/2020-08-20-18-24-13.png" alt="img"></p><p>然后 github 会自动签发提供给<code>zhangkh.top</code>域名使用的 SSL 证书，等待一段时间后，就可以通过<code>HTTPS</code>即<code>https://zhangkh.top</code>访问博客了。</p><h3 id="CloudFlare-CDN配置"><a href="#CloudFlare-CDN配置" class="headerlink" title="CloudFlare CDN配置"></a>CloudFlare CDN配置</h3><p>先通过<a href="https://dash.cloudflare.com/sign-up%E9%93%BE%E6%8E%A5%E8%BF%9B%E8%A1%8C%E6%B3%A8%E5%86%8C%EF%BC%8C%E7%84%B6%E5%90%8E%E6%B7%BB%E5%8A%A0%E7%AB%99%E7%82%B9%EF%BC%88%E6%B3%A8%E6%84%8F%E6%98%AF%E5%A1%AB%E5%86%99%E5%9F%9F%E5%90%8D%EF%BC%89%EF%BC%8C%E6%8F%90%E4%BA%A4%E4%B9%8B%E5%90%8E%E4%BC%9A%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%9F%9F%E5%90%8D%E5%AF%B9%E5%BA%94%E7%9A%84%E8%A7%A3%E6%9E%90%E8%AE%B0%E5%BD%95%EF%BC%8C%E4%B8%8B%E4%B8%80%E6%AD%A5%E5%B0%B1%E6%98%AF%E6%BF%80%E6%B4%BB%E4%BA%86%EF%BC%9A%E9%80%9A%E8%BF%87%E5%9F%9F%E5%90%8D%E7%9A%84%E8%BF%90%E8%90%A5%E5%95%86%E4%BF%AE%E6%94%B9%E5%AF%B9%E5%BA%94%E7%9A%84">https://dash.cloudflare.com/sign-up链接进行注册，然后添加站点（注意是填写域名），提交之后会自动扫描域名对应的解析记录，下一步就是激活了：通过域名的运营商修改对应的</a> NS 记录</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210224174816363.png" alt="image-20210224174816363"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210224174902676.png" alt="image-20210224174902676"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210224175004015.png" alt="image-20210224175004015"></p><p>反正都免费，能开的都开</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210224175126008.png" alt="image-20210224175126008"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210224175215210.png" alt="image-20210224175215210"></p><p>这样就设置完毕了，等一段时间再用命令行验证一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig monkeywie.cn +noall +answer</span><br></pre></td></tr></table></figure><p>例如我的</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210224185800492.png" alt="image-20210224185800492"></p><p>可以看到 dns 解析的 ip 已经变了，已经被 cloudflare 接管了，<br>然后清除下浏览器 DNS 缓存，chrome 浏览器输入<code>chrome://net-internals/#dns</code>进入清除页：</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/2020-08-20-18-41-14.png" alt="img"></p><p>再次访问<code>https://monkeywie.cn</code>，F12 打开网络面板可以看到已经用上了 CDN 了：</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-2021022419buibl8404%202.png" alt="image-2021022419buibl8404 2"></p><p>参考：</p><ul><li><a href="https://guozh.net/buy-domain-name-from-namesilo-course/">2019 Namesilo 购买域名 解析域名 图文教程</a></li><li><a href="https://monkeywie.cn/2020/08/20/fast-github-page-with-cloudflare/">使用cloudflare免费加速github page</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Namesilo购买解析域名-CloudFlare加速Github-Page&quot;&gt;&lt;a href=&quot;#Namesilo购买解析域名-CloudFlare加速Github-Page&quot; class=&quot;headerlink&quot; title=&quot;Namesilo购买解析域名+C</summary>
      
    
    
    
    <category term="Hexo" scheme="https://zhangkh.top/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://zhangkh.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Gitee与Github Pages 自动部署站点</title>
    <link href="https://zhangkh.top/d3134430.html"/>
    <id>https://zhangkh.top/d3134430.html</id>
    <published>2021-02-24T04:05:37.000Z</published>
    <updated>2021-02-24T04:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Gitee与Github-Pages-自动部署站点"><a href="#Hexo-Gitee与Github-Pages-自动部署站点" class="headerlink" title="Hexo Gitee与Github Pages 自动部署站点"></a>Hexo Gitee与Github Pages 自动部署站点</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Github在国内访问还是偏慢的，尽管我们将所有能弄的静态资源都移到拥有国内节点的JSDelivr上了。这里决定将博客在Gitee建立一个镜像，这样如果国内访问太慢的话我们可以从Gitee也就是“码云”来访问网站。</p><p>这样博客站点使用了Github作为主站，又使用了Gitee作为镜像站。但是Gitee免费账户是不支持提交后自动部署的，所以有大佬开发了在Github上使用的动作：<code>gitee-pages-action</code>（<a href="https://github.com/yanglbme/gitee-pages-action">点击查看</a>）。只要在某个仓库配置好这个动作就能在往这个仓库提交任何内容时自动让Gitee部署Gitee里面指定仓库的内容。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>我们按照这个仓库的文档往Hexo站点的<code>source</code>目录添加<code>.github\workflows\sync.yml</code>这个文件，并在这个文件里面配置要使用的Gitee站点仓库和用户名。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Sync</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Gitee</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">yanglbme/gitee-pages-action@main</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 用户名</span></span><br><span class="line">          <span class="attr">gitee-username:</span> <span class="string">改成你的Gitee用户名</span></span><br><span class="line">          <span class="comment"># 注意在 Settings-&gt;Secrets 配置 GITEE_PASSWORD</span></span><br><span class="line">          <span class="attr">gitee-password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITEE_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错</span></span><br><span class="line">          <span class="attr">gitee-repo:</span> <span class="string">改成你的Gitee仓库（用户名斜杠仓库名）</span></span><br><span class="line">          <span class="comment"># 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）</span></span><br><span class="line">          <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>对于我来说就是</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Sync</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span> <span class="string">Gitee</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">yanglbme/gitee-pages-action@main</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 用户名</span></span><br><span class="line">          <span class="attr">gitee-username:</span> <span class="string">zhangkaiheng</span></span><br><span class="line">          <span class="comment"># 注意在 Settings-&gt;Secrets 配置 GITEE_PASSWORD</span></span><br><span class="line">          <span class="attr">gitee-password:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.GITEE_PASSWORD</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="comment"># 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错</span></span><br><span class="line">          <span class="attr">gitee-repo:</span> <span class="string">zhangkaiheng/zhangkaiheng</span></span><br><span class="line">          <span class="comment"># 要部署的分支，默认是 master，若是其他分支，则需要指定（指定的分支必须存在）</span></span><br><span class="line">          <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>注意Github的部署仓库后台的Settings里面也要按照最上面那个仓库说明中那样配置Secrets（<code>GITEE_RSA_PRIVATE_KEY</code>和<code>GITEE_PASSWORD</code>的两个密钥。其中：<code>GITEE_RSA_PRIVATE_KEY</code>存放<code>id_rsa</code>私钥；<code>GITEE_PASSWORD</code>存放Gitee帐号的密码），这一步不要忘记了。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210223225834378.png" alt="image-20210223225834378"></p><p>但是一个比较严重的问题是鄙人要让Github这边部署站点的仓库更新时触发这个动作，鄙人用的是Hexo，如果鄙人在<code>source</code>目录配置了<code>.github</code>目录时使用Hexo的<code>generate</code>命令是不会向Github提交这个动作的配置的。国内也没有一个比较好的解决方案，只好去查Hexo的文档。</p><p>经过查阅<a href="https://hexo.io/zh-cn/docs/configuration">Hexo文档</a>发现，Hexo默认会忽略隐藏文件和文件夹（包括名称以下划线和 <strong><code>.</code>开头的文件和文件夹</strong>，Hexo的<code>_posts</code>和<code>_data</code>等目录除外）。因此需要在后台仓库的<code>_config.yml</code>文件添加这样的配置才能把<code>.github</code>的目录也给带进来。可能已经预留了<code>include</code>属性，建议先搜索这个属性，然后直接往这里面添加。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">include:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.github/**/*&quot;</span></span><br></pre></td></tr></table></figure><p>但是这样即使配置了添加这些文件，他默认也会把这个源文件也给渲染，所以我们还需要设置忽略这个文件的渲染。继续在<code>_config.yml</code>文件查找<code>skip_render</code>属性，添加这个文件名。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;.github/**/*&quot;</span></span><br></pre></td></tr></table></figure><p>还有一处也需要修改，往远程仓库部署时要设置不能跳过隐藏的文件，因为Git Bash是按Linux设计的，默认会将<code>.</code>开头的文件和文件夹视为隐藏文件。所以要继续在<code>_config.yml</code>文件查找<code>deploy</code>属性，设置里面<code>ignore_hidden</code>为<code>false</code>。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">ignore_hidden:</span> <span class="literal">false</span> <span class="comment"># 添加这个属性值为false</span></span><br><span class="line">  <span class="attr">repo:</span> </span><br><span class="line">    <span class="attr">gitee:</span> <span class="string">git@gitee.com:你的Gitee仓库.git,要使用的分支名</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:你的Github仓库.git,要使用的分支名</span></span><br><span class="line">    <span class="comment"># 可以先提交Gitee然后再提交Github，也就是把这个Gitee的地址放在前面。这样保证Gitee的站点内容能在Github开始动作之前完成提交。</span></span><br></pre></td></tr></table></figure><p>这样设置之后就可以在Github完成部署仓库提交之后通过配置的动作自动使Gitee也部署站点。</p><p>参考：</p><ul><li><a href="https://github.com/yanglbme/gitee-pages-action">gitee-pages-action</a></li><li><a href="https://blog.csdn.net/qq_35977139/article/details/113764322">Hexo Gitee Pages 自动部署站点</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo-Gitee与Github-Pages-自动部署站点&quot;&gt;&lt;a href=&quot;#Hexo-Gitee与Github-Pages-自动部署站点&quot; class=&quot;headerlink&quot; title=&quot;Hexo Gitee与Github Pages 自动部署站点&quot;&gt;</summary>
      
    
    
    
    <category term="Hexo" scheme="https://zhangkh.top/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://zhangkh.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Mac 配置多 Git 账户</title>
    <link href="https://zhangkh.top/a3cc4771.html"/>
    <id>https://zhangkh.top/a3cc4771.html</id>
    <published>2021-02-23T04:05:37.000Z</published>
    <updated>2021-02-23T04:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mac-配置多-Git-账户"><a href="#Mac-配置多-Git-账户" class="headerlink" title="Mac 配置多 Git 账户"></a>Mac 配置多 Git 账户</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>我们经常将代码托管到github、gitlab这样的网站上。为了避免每次push代码时都要输入用户名和密码，通常会选择使用ssh协议，将公钥保存到托管网站上。在实际开发中，往往要将代码托管到多个不同的网站上。比如，公司的代码需要托管到coding上，自己的开源代码托管到GitHub上，私有代码托管到gitlab上等等，每个托管网站都对应一个git账户。默认情况下，一台电脑的Git只对应一个账户，只能往一个网站push代码，非常不便。这就需要配置多个 Git 账户，以向不同的网站 push 代码。本文将介绍如何在一个Git终端中配置多个账户，同时管理多个托管网站的代码。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>首先，需要准备好对Git的全局用户进行配置。在初次安装Git时，往往会使用如下的命令配置全局用户名和邮箱：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxx&quot; &#x2F;&#x2F; 配置全局用户名，如Github上注册的用户名</span><br><span class="line">git config --global user.email &quot;yyy@mail.com&quot; &#x2F;&#x2F; 配置全局邮箱，如Github上配置的邮箱</span><br></pre></td></tr></table></figure><p>这个<code>--global</code>选项，是指这里配置的<code>user.name</code>和<code>user.email</code>是相对于全局进行配置的，即不同的Git仓库默认的用户名和邮箱都是这个值。由于需要管理多个账户，所以仅仅使用这个全局值是不够的，<strong>需要在每个仓库中单独配置</strong>。对此，有两种处理方法：</p><p>如果之前已经使用该命令进行配置，则先使用如下命令清除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset user.name</span><br><span class="line">git config --global --unset user.email</span><br></pre></td></tr></table></figure><p>如果不确定是否已经配置过，可以使用下面的命令查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name</span><br><span class="line">git config --global user.email</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="对每个账户生成一对密钥"><a href="#对每个账户生成一对密钥" class="headerlink" title="对每个账户生成一对密钥"></a>对每个账户生成一对密钥</h3><p>首先进入保存秘钥的目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;.ssh &#x2F;&#x2F; 进入目录，该目录下保存生成的秘钥</span><br></pre></td></tr></table></figure><p>然后，根据账户或者账户邮箱生成秘钥。例如我在GitHub账户是Kit139，账户邮箱是<a href="mailto:&#50;&#53;&#49;&#52;&#x31;&#x35;&#x34;&#x36;&#53;&#54;&#x40;&#113;&#113;&#46;&#99;&#x6f;&#109;">&#50;&#53;&#49;&#52;&#x31;&#x35;&#x34;&#x36;&#53;&#54;&#x40;&#113;&#113;&#46;&#99;&#x6f;&#109;</a>，则命令为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Kit139&quot;</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Kit139&quot;</span><br></pre></td></tr></table></figure><p>输入完成后，会有如下提示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Generating public&#x2F;private rsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;Users&#x2F;liugui&#x2F;.ssh&#x2F;id_rsa):</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/1hiafgblagiqyvglb.jpg" alt="1hiafgblagiqyvglb"></p><p>这里要求对秘钥进行命名，默认的文件名是<code>id_rsa</code>。为了方便区分，我这里命名为<code>id_rsa_github</code>。接下来的提示都直接进行回车，直到秘钥生成。通过<code>ls</code>命令，可以看到刚刚生成的密钥对<code>id_rsa_github</code>和<code>id_rsa_github.pub</code>。其中<code>id_rsa_github.pub</code>是公钥。</p><p>同样，对于GitLab上的账户，我是用另一个邮箱注册的，按照同样的步骤生成<code>id_rsa_gitlab</code>的秘钥对。接下来的步骤，除额外说明外，两个账户的操作完全相同。</p><h3 id="私钥添加到本地"><a href="#私钥添加到本地" class="headerlink" title="私钥添加到本地"></a>私钥添加到本地</h3><p>SSH协议的原理，就是在托管网站上使用公钥，在本地使用私钥，这样本地仓库就可以和远程仓库进行通信。在上一步已经生成了秘钥文件，接下来需要使用秘钥文件，首先是在本地使用秘钥文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-add ~&#x2F;.ssh&#x2F;id_rsa_github &#x2F;&#x2F; 将GitHub私钥添加到本地</span><br><span class="line">ssh-add ~&#x2F;.ssh&#x2F;id_rsa_gitlab &#x2F;&#x2F; 将GitLab私钥添加到本地</span><br></pre></td></tr></table></figure><p>为了检验本地是否添加成功，可以使用<code>ssh-add -l</code>命令进行查看</p><h3 id="对本地秘钥进行配置"><a href="#对本地秘钥进行配置" class="headerlink" title="对本地秘钥进行配置"></a>对本地秘钥进行配置</h3><p>由于添加了多个密钥文件，所以需要对这多个密钥进行管理。在<code>.ssh</code>目录下新建一个config文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch config</span><br></pre></td></tr></table></figure><p>文件中的内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Host github &#x2F;&#x2F; 网站的别名，随意取</span><br><span class="line">HostName github.com &#x2F;&#x2F; 托管网站的域名</span><br><span class="line">User liugui &#x2F;&#x2F; 托管网站上的用户名</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_github &#x2F;&#x2F; 使用的密钥文件</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; GitLab的配置相同</span><br><span class="line">Host gitlab</span><br><span class="line">HostName gitlab.com</span><br><span class="line">User liugui</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_gitlab</span><br></pre></td></tr></table></figure><p>例如我的是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">HostName github.com</span><br><span class="line">User Kit139</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_kit139_mac</span><br><span class="line"></span><br><span class="line">Host gitee.com</span><br><span class="line">HostName gitee.com</span><br><span class="line">User zhangkaiheng</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa_zkh_gitee</span><br></pre></td></tr></table></figure><h3 id="公钥添加到托管网站"><a href="#公钥添加到托管网站" class="headerlink" title="公钥添加到托管网站"></a>公钥添加到托管网站</h3><p>以GitHub为例，先在本地复制公钥。进入<code>.ssh</code>目录，使用<code>cat id_rsa_github.pub</code>或者用vscode打开id_rsa_github.pub文件查看生成的GitHub公钥，全选进行复制。</p><p>登录GitHub，点击右上角头像选择<code>settings</code>，在打开的页面中选择SSH and GPG keys，</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/3250450123-5b8e880ae25ea_articlex.png" alt="图片描述"></p><p>在打开的页面的Key输入框中粘贴刚刚复制的公钥，title的名字自己随便去，然后点击下方的<code>Add SSH key</code>按钮：<br><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/1793513036-5b8e88180ee14_articlex.png" alt="图片描述"></p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>至此，托管网站的公钥添加完成。总结来说，就是针对每个托管网站分别生成一对密钥，然后分别添加到本地和托管网站。</p><p>这时候，可以测试一下配置是否成功，测试命令使用别名。例如，对于GitHub，本来应该使用的测试命令是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>在config文件中，给GitHub网站配置的别名就是github，所以直接使用别名，就是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github</span><br></pre></td></tr></table></figure><blockquote><p>如果你配置的 Coding ，需要注意 <code>HostName</code> 要填写你的团队的地址，Coding 现在对于新用户都是注册为团队，并为每个团队单独创建了一个二级域名，比如我的账户二级域名：<code>sjzcode.coding.net</code>。直接写 <code>coding.net</code> 无法认证成功。</p></blockquote><p>命令 <code>ssh -T git@别名</code> 验证是否配置成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~&#x2F;.ssh ssh -T git@github.com</span><br><span class="line">Hi xxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class="line"></span><br><span class="line">~&#x2F;.ssh ssh -T git@sjzcode.coding.net</span><br><span class="line">Coding 提示: Hello xxx, You&#39;ve connected to Coding.net via SSH. This is a personal key.</span><br><span class="line">xx，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥.</span><br><span class="line">公钥指纹：xxxxxxxxx</span><br></pre></td></tr></table></figure><p>参考：</p><ul><li><a href="https://juejin.cn/post/6844904132990468103">Mac 多 Git 账户配置</a></li><li><a href="https://blog.csdn.net/weixin_34355559/article/details/88748270">Mac下配置多个Git账户</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Mac-配置多-Git-账户&quot;&gt;&lt;a href=&quot;#Mac-配置多-Git-账户&quot; class=&quot;headerlink&quot; title=&quot;Mac 配置多 Git 账户&quot;&gt;&lt;/a&gt;Mac 配置多 Git 账户&lt;/h1&gt;&lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot;</summary>
      
    
    
    
    <category term="Hexo" scheme="https://zhangkh.top/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://zhangkh.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客优化——推荐插件</title>
    <link href="https://zhangkh.top/d340ea43.html"/>
    <id>https://zhangkh.top/d340ea43.html</id>
    <published>2021-02-22T04:05:37.000Z</published>
    <updated>2021-02-22T04:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo博客优化——推荐插件"><a href="#Hexo博客优化——推荐插件" class="headerlink" title="Hexo博客优化——推荐插件"></a>Hexo博客优化——推荐插件</h1><h1 id="Hexo-abbrlink生成唯一永久文章链接"><a href="#Hexo-abbrlink生成唯一永久文章链接" class="headerlink" title="Hexo-abbrlink生成唯一永久文章链接"></a>Hexo-abbrlink生成唯一永久文章链接</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在做次优化之前，hexo-next文章链接默认的生成规则是：<code>:year/:month/:day/:title</code>，是按照年、月、日、标题来生成的。<br>比如：<code>https://www.liaofuzhan.com/2019/08/12/hello-world/</code> 这样，如果文章标题是中文的话，URL链接是也会是中文，</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/agdyuaccbslc.png" alt="agdyuaccbslc"></p><p>复制后的链接是一长串，非常不利于阅读，也不简洁。。。😢</p><p><a href="https://links.jianshu.com/go?to=http://localhost:4000/2019/08/13/tech/hexo/Hexo%20Next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%93%88%E6%9E%97%E6%91%87%E7%89%B9%E6%95%88/">http://localhost:4000/2019/08/13/tech/hexo/Hexo%20Next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%93%88%E6%9E%97%E6%91%87%E7%89%B9%E6%95%88/</a></p><p>一种解决方案是：使用**<code>hexo-permalink-pinyin插件</code>**，将中文转英文，参考这篇文章：<a href="https://www.liaofuzhan.com/posts/781435405.html">Hexo NexT中文链接转拼音(关于中文md文件名的问题)</a></p><p>这样方案也存在一定的缺陷，比如修改了文章标题，重新<code>hexo</code>三连后，<code>URL</code>就变了，以前的文章地址变成了<code>404</code>。而且这样生成的URL层级也很深，不利于SEO。</p><p>那能不能生成唯一不变的URl链接呢？答案是可以的，已经有人给我们实现了。这就是我们要说的<code>hexo-abbrlink</code>插件，简单易用</p><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><blockquote><p>执行此命令可能会不成功，提示你缺少相应的依赖<br>比如<code>babel-eslint</code>、<code>mini-css-extract-plugin</code>、<code>webpack-cli</code>…<br>使用npm命令安装即可，比如<code>npm install eslint@4.x babel-eslint@8 --save-dev</code></p></blockquote><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>修改根目录站点配置文件<code>config.yml</code>，改为：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink.html  # 此处可以自己设置，也可以直接使用 :/abbrlink</span><br><span class="line">abbrlink:</span><br><span class="line">    alg: crc32   #算法： crc16(default) and crc32</span><br><span class="line">    rep: hex     #进制： dec(default) and hex</span><br></pre></td></tr></table></figure><p>生成的链接将会是这样的(官方样例)：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/66c8.html</span></span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/65535.html</span></span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/8ddf18fb.html</span></span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/1690090958.html</span></span><br></pre></td></tr></table></figure><p>生成完后，原<code>md</code>文件的Front-matter 内会增加<code>abbrlink</code> 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。</p><h1 id="hexo-generator-feed生成RSS文件的插件"><a href="#hexo-generator-feed生成RSS文件的插件" class="headerlink" title="hexo-generator-feed生成RSS文件的插件"></a>hexo-generator-feed生成RSS文件的插件</h1><h2 id="安装所需插件"><a href="#安装所需插件" class="headerlink" title="安装所需插件"></a>安装所需插件</h2><p>hexo博客中有一个可以生成RSS的xml文件的插件<code>hexo-generator-feed</code>，使用命令行对其进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">BASH</span><br><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure><h2 id="启用插件"><a href="#启用插件" class="headerlink" title="启用插件"></a>启用插件</h2><p>安装成功之后通过hexo博客根目录下的<code>_config.yml</code>文件的修改来启用插件，修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">YAML</span><br><span class="line"># Extensions</span><br><span class="line">plugins:</span><br><span class="line">    hexo-generator-feed</span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">    type: atom # 生成的类型，RSS对应atom</span><br><span class="line">    path: atom.xml # 生成的文件名</span><br><span class="line">    limit: 20 # 选取推送的文章数量</span><br></pre></td></tr></table></figure><h2 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h2><p>通过<code>hexo g</code>生成新的public目录，已经能看到里面有atom.xml文件了。</p><p>发布之后就可以进行正常使用</p><h1 id="Hexo自动为站内链接加上nofollow插件"><a href="#Hexo自动为站内链接加上nofollow插件" class="headerlink" title="Hexo自动为站内链接加上nofollow插件"></a>Hexo自动为站内链接加上nofollow插件</h1><p><a href="https://blog.kaygb.com/go/aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWZpbHRlci1ub2ZvbGxvdw==">hexo-filter-nofollow</a> 是一个自动为 Hexo 博客中的外链添加 <code>rel=&quot;external nofollow noreferrer&quot;</code> 的插件。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><a href="https://blog.kaygb.com/go/aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvLWZpbHRlci1ub2ZvbGxvdw==">hexo-filter-nofollow</a> 会为你的博客中的外链自动添加 <code>rel=&quot;external nofollow noreferrer&quot;</code> 属性，从而 <a href="https://blog.kaygb.com/go/aHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRNTC9MaW5rX3R5cGVz">改善你的网站的安全性和 SEO</a>。</p><p>关于SEO这点，网站内部有大量的外链会影响网站的权重,不利于SEO。</p><p>“nofollow” 标签是Google、Yahoo和微软公司前几年一起提出的一个标签，链接加上这个标签后就不会被计算权值，搜索引擎支持nofollow属性，在很大程度上抑制博客或论坛的垃圾留言。对站长来说是一件大好事。</p><p>nofollow是HTML元标签(meta)的content属性和链接标签(a)的rel属性的一个值，告诉机器(爬虫)无需追踪目标页，为了对抗blogspam(博客垃圾留言信息)，Google推荐使用nofollow，告诉搜索引擎爬虫无需抓取目标页，同时告诉搜索引擎无需将的当前页的Pagerank传递到目标页。但是如果你是通过sitemap直接提交该页面，爬虫还是会爬取，这里的nofollow只是当前页对目标页的一种态度，并不代表其他页对目标页的态度。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i hexo-filter-nofollow --save</span><br></pre></td></tr></table></figure><p>如果你使用 yarn 作为你的 Hexo 的包管理器，你也可以使用下述命令：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-filter-nofollow</span><br></pre></td></tr></table></figure><h2 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h2><p>打开hexo的配置文件_config.yml，注意是hexo而不是主题。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nofollow:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;exclude1.com&#x27;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;exclude2.com&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>enable</strong> - 是否启用插件，默认值为 <code>true</code></li><li><strong>field</strong> - 插件的处理范围，默认值为 <code>site</code>，可选 <code>post</code> 或 <code>site</code><ul><li><code>post</code> - 仅处理文章内容</li><li><code>site</code> - 处理全站所有页面</li></ul></li><li><strong>exclude</strong> - 域名白名单，不同的子域名视为不同的域名（如 <code>www</code>）<ul><li><code>exclude1.com</code>不包括 <code>www.exclude1.com</code> 或 <code>en.exclude1.com</code></li></ul></li></ul><h2 id="从-hexo-autonofollow-迁移"><a href="#从-hexo-autonofollow-迁移" class="headerlink" title="从 hexo-autonofollow 迁移"></a>从 hexo-autonofollow 迁移</h2><p><a href="https://blog.kaygb.com/go/aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvaGV4by1hdXRvbm9mb2xsb3c=">hexo-autonofollow</a> 是由 liuzc 在 2016 年开发的为 Hexo 所有页面中的外链添加 <code>rel=&quot;external nofollow&quot;</code> 属性的插件。hexo-filter-nofollow 相比 hexo-autonofollow 有以下区别：</p><ul><li><code>enable</code> 配置 默认值为 <code>true</code>，默认启用插件</li><li>新增 <code>field</code> 配置，支持设置插件处理范围</li><li>移除 cheerio 依赖，使用正则表达式匹配</li><li>已加入 Hexo 官方插件，由 Hexo 官方团队维护</li></ul><p>如果你之前已经安装了 hexo-autonofollow，可以直接卸载 hexo-autonofollow 并安装 hexo-filter-nofollow。hexo-filter-nofollow 的配置和 hexo-autonofollow 的配置完全兼容。</p><p>原文链接：<a href="https://blog.kaygb.com/go/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2JpZ2JlYXIwMDAwNy9hcnRpY2xlL2RldGFpbHMvODA3NTgyNzk=">https://blog.csdn.net/bigbear00007/article/details/80758279</a></p><p>原文链接：<a href="https://blog.kaygb.com/go/aHR0cHM6Ly9ibG9nLnNray5tb2UvcG9zdC9oZXhvLWZpbHRlci1ub2ZvbGxvdy1qb2luZWQtaGV4by1vZmZpY2lhbC1wbHVnaW4v">https://blog.skk.moe/post/hexo-filter-nofollow-joined-hexo-official-plugin/</a></p><h1 id="hexo-generator-sitemap等插件生成sitemap"><a href="#hexo-generator-sitemap等插件生成sitemap" class="headerlink" title="hexo-generator-sitemap等插件生成sitemap"></a>hexo-generator-sitemap等插件生成sitemap</h1><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>为了让博文被google或百度检索</p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>sitemap:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>baidusitemap:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h2><p>sitemap: You can configure this plugin in <code>_config.yml</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sitemap:</span><br><span class="line">  path: sitemap.xml</span><br><span class="line">  template: .&#x2F;sitemap_template.xml</span><br><span class="line">  rel: false</span><br><span class="line">  tags: true</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure><p>baidusitemap: You can configure this plugin in <code>_config.yml</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">baidusitemap: </span><br><span class="line">path: baidusitemap.xml</span><br></pre></td></tr></table></figure><h1 id="添加-robots-txt"><a href="#添加-robots-txt" class="headerlink" title="添加 robots.txt"></a>添加 robots.txt</h1><p><code>robots.txt</code>是搜索引擎蜘蛛协议，告诉引擎哪些要收录，哪些禁止收录，这样显得更规范一些。<br><code>source</code>文件夹下新建 robots.txt，内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Allow: &#x2F;</span><br><span class="line">Allow: &#x2F;home&#x2F;</span><br><span class="line">Allow: &#x2F;about&#x2F;</span><br><span class="line">Allow: &#x2F;archives&#x2F;</span><br><span class="line">Allow: &#x2F;categories&#x2F;</span><br><span class="line">Allow: &#x2F;tags&#x2F;</span><br><span class="line">Disallow: &#x2F;js&#x2F;</span><br><span class="line">Disallow: &#x2F;css&#x2F;</span><br><span class="line">Disallow: &#x2F;fonts&#x2F;</span><br><span class="line"></span><br><span class="line">Sitemap: https:&#x2F;&#x2F;zhangkaiheng.gitee.io&#x2F;sitemap.xml</span><br><span class="line">Sitemap: https:&#x2F;&#x2F;zhangkaiheng.gitee.io&#x2F;baidusitemap.xml</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>参考：</p><ul><li><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a></li><li><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a></li><li><a href="https://github.com/hexojs/hexo-filter-nofollow">hexo-filter-nofollow</a></li><li><a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a></li><li><a href="https://github.com/coneycode/hexo-generator-baidu-sitemap">hexo-generator-baidu-sitemap</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hexo博客优化——推荐插件&quot;&gt;&lt;a href=&quot;#Hexo博客优化——推荐插件&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客优化——推荐插件&quot;&gt;&lt;/a&gt;Hexo博客优化——推荐插件&lt;/h1&gt;&lt;h1 id=&quot;Hexo-abbrlink生成唯一</summary>
      
    
    
    
    <category term="Hexo" scheme="https://zhangkh.top/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="https://zhangkh.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>爬取蛋卷基金各类数据+动态可视化展示</title>
    <link href="https://zhangkh.top/af10e3f2.html"/>
    <id>https://zhangkh.top/af10e3f2.html</id>
    <published>2021-02-21T12:05:37.000Z</published>
    <updated>2021-02-21T12:05:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="爬取蛋卷基金各类数据-动态可视化展示"><a href="#爬取蛋卷基金各类数据-动态可视化展示" class="headerlink" title="爬取蛋卷基金各类数据+动态可视化展示"></a>爬取蛋卷基金各类数据+动态可视化展示</h2><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>爬取『蛋卷基金』数据，通过pyecharts<strong>动图可视化</strong>方式展示基金的<strong>涨跌</strong>情况。</p><p>本文将围绕这<strong>三点</strong>去进行爬取数据，动图可视化展示数据：</p><ul><li>近一月涨跌幅前10名</li><li>基金各个阶段涨跌幅</li><li>近30个交易日净值情况</li></ul><h2 id="数据来源"><a href="#数据来源" class="headerlink" title="数据来源"></a>数据来源</h2><p>本文的数据来源：『蛋卷基金』</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;danjuanapp.com&#x2F;</span><br></pre></td></tr></table></figure><h2 id="数据分析"><a href="#数据分析" class="headerlink" title="数据分析"></a>数据分析</h2><p>接下爬取的数据涉及五大类（五种基金）</p><ol><li><strong>股票型基金</strong></li><li><strong>混合型基金</strong></li><li><strong>债券型基金</strong></li><li><strong>指数型基金</strong></li><li><strong>QDII型基金</strong></li></ol><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/640" alt="图片"></p><p>通过抓包分析<strong>ajax异步交互</strong>链接的<strong>规律：</strong></p><ul><li><p>type是对应的五种基金的代号</p></li><li><p>order_by是对应最近多久的基金涨跌幅排序</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;近一周&#39;:&#39;1w&#39;&#39;近一月&#39;:&#39;1m&#39;&#39;近三月&#39;:&#39;3m&#39;&#39;近六月&#39;:&#39;6m&#39;&#39;近1年&#39;:&#39;1y&#39;&#39;近2年&#39;:&#39;2y&#39;&#39;近3年&#39;:&#39;3y&#39;&#39;近5年&#39;:&#39;5y&#39;</span><br></pre></td></tr></table></figure><ul><li>page是对应的页数，从第1页开始</li></ul><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/640-20210221215503923" alt="图片"></p><p><strong>备注：</strong>『蛋卷基金』这个网站<strong>没有反爬</strong>！！！，请求不需要<strong>cookie</strong>！！！</p><p>ok，这些都清楚之后，接下来就可以<strong>开始爬取</strong>数据了！</p><h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><p>由于<strong>『蛋卷基金』</strong>这个网站*<strong>*没有反爬\</strong>！！！**，所以数据爬取和可视化分析放一起了（直接爬取数据后就进行可视化！）</p><h3 id="分析1：近一月涨跌幅前10名"><a href="#分析1：近一月涨跌幅前10名" class="headerlink" title="分析1：近一月涨跌幅前10名"></a>分析1：近一月涨跌幅前10名</h3><h3 id="爬虫代码"><a href="#爬虫代码" class="headerlink" title="爬虫代码"></a>爬虫代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">###基金类型</span><br><span class="line">dict_type&#x3D;&#123;&quot;股票型&quot;:1,&quot;混合型&quot;:3,&quot;债券型&quot;:2,&quot;指数型&quot;:5,&quot;QDII型&quot;:11&#125;</span><br><span class="line">###时间</span><br><span class="line">dict_time&#x3D;&#123;&#39;近一周&#39;:&#39;1w&#39;,&#39;近一月&#39;:&#39;1m&#39;,&#39;近三月&#39;:&#39;3m&#39;,&#39;近六月&#39;:&#39;6m&#39;,&#39;近1年&#39;:&#39;1y&#39;,&#39;近2年&#39;:&#39;2y&#39;,&#39;近3年&#39;:&#39;3y&#39;,&#39;近5年&#39;:&#39;5y&#39;&#125;</span><br><span class="line"></span><br><span class="line">for key in dict_type:</span><br><span class="line">    url &#x3D; &quot;https:&#x2F;&#x2F;danjuanapp.com&#x2F;djapi&#x2F;v3&#x2F;filter&#x2F;fund?type&#x3D;&quot;+str(dict_type[key])+&quot;&amp;order_by&#x3D;1w&amp;size&#x3D;10&amp;page&#x3D;1&quot;</span><br><span class="line">    res &#x3D; requests.get(url, headers&#x3D;headers)</span><br><span class="line">    res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">    s &#x3D; json.loads(res.text)</span><br><span class="line">    s &#x3D; s[&#39;data&#39;][&#39;items&#39;]</span><br><span class="line">    name &#x3D; []</span><br><span class="line">    value &#x3D; []</span><br><span class="line">    for i in range(0,len(s)):</span><br><span class="line">        print(s[i][&#39;fd_name&#39;]+&quot;:&quot;+s[i][&#39;yield&#39;])</span><br><span class="line">        name.append(s[i][&#39;fd_name&#39;])</span><br><span class="line">        value.append(s[i][&#39;yield&#39;])</span><br><span class="line">    ###开始绘图</span><br><span class="line">    pie(name, value, str(key)+&quot;基金涨跌幅&quot;, &quot;[&quot;+str(key)+&quot;]基金近一月涨跌幅前10名&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/640-20210221215515468" alt="图片"></p><h3 id="饼状图可视化代码"><a href="#饼状图可视化代码" class="headerlink" title="饼状图可视化代码"></a>饼状图可视化代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">###饼状图</span><br><span class="line">def pie(name,value,picname,tips):</span><br><span class="line">    c &#x3D; (</span><br><span class="line">        Pie()</span><br><span class="line">            .add(</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            [list(z) for z in zip(name, value)],</span><br><span class="line">            # 饼图的中心（圆心）坐标，数组的第一项是横坐标，第二项是纵坐标</span><br><span class="line">            # 默认设置成百分比，设置成百分比时第一项是相对于容器宽度，第二项是相对于容器高度</span><br><span class="line">            center&#x3D;[&quot;35%&quot;, &quot;50%&quot;],</span><br><span class="line">        )</span><br><span class="line">            .set_colors([&quot;blue&quot;, &quot;green&quot;, &quot;yellow&quot;, &quot;red&quot;, &quot;pink&quot;, &quot;orange&quot;, &quot;purple&quot;])  # 设置颜色</span><br><span class="line">            .set_global_opts(</span><br><span class="line">            title_opts&#x3D;opts.TitleOpts(title&#x3D;&quot;&quot;+str(tips)),</span><br><span class="line">            legend_opts&#x3D;opts.LegendOpts(type_&#x3D;&quot;scroll&quot;, pos_left&#x3D;&quot;70%&quot;, orient&#x3D;&quot;vertical&quot;),  # 调整图例位置</span><br><span class="line">        )</span><br><span class="line">            .set_series_opts(label_opts&#x3D;opts.LabelOpts(formatter&#x3D;&quot;&#123;b&#125;: &#123;c&#125;&quot;))</span><br><span class="line">            .render(str(picname)+&quot;.html&quot;)</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>这里将饼状图可视化代码封装成函数，绘制五种基金的饼状图只需调用这个函数即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">###开始绘图</span><br><span class="line">pie(name, value, str(key)+&quot;基金涨跌幅&quot;, &quot;[&quot;+str(key)+&quot;]基金近一月涨跌幅前10名&quot;)</span><br></pre></td></tr></table></figure><p>1.股票型基金</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/640.gif" alt="图片"></p><p>2.混合型基金</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/640-20210221215530326.gif" alt="图片"></p><p>3.债券型基金</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/640-20210221215536437.gif" alt="图片"></p><p>4.指数型基金</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/640-20210221215542121.gif" alt="图片"></p><p>5.QDII型基金</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/640-20210221215551484.gif" alt="图片"></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>上图中是<strong>五大类基金</strong>的选取<strong>近一个月涨跌幅最高前10名</strong>的基金进行绘图。</p><p>同理近一周、近三个月、近一年也可以通过这个代码进行绘制，只需要将参数order_by修改即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;近一周&#39;:&#39;1w&#39;&#39;近一月&#39;:&#39;1m&#39;&#39;近三月&#39;:&#39;3m&#39;&#39;近六月&#39;:&#39;6m&#39;&#39;近1年&#39;:&#39;1y&#39;&#39;近2年&#39;:&#39;2y&#39;&#39;近3年&#39;:&#39;3y&#39;&#39;近5年&#39;:&#39;5y&#39;</span><br></pre></td></tr></table></figure><h2 id="分析2：基金各个阶段涨跌幅"><a href="#分析2：基金各个阶段涨跌幅" class="headerlink" title="分析2：基金各个阶段涨跌幅"></a>分析2：基金各个阶段涨跌幅</h2><p>上面分析中可以清楚这五类基金近一个月最高的涨跌幅排名情况，下面从排名中选取第一名基金（五类中各选取第一名）分别展示该基金<strong>各个阶段的涨跌幅</strong>情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;近一周&#39;:&#39;1w&#39;&#39;近一月&#39;:&#39;1m&#39;&#39;近三月&#39;:&#39;3m&#39;&#39;近六月&#39;:&#39;6m&#39;&#39;近1年&#39;:&#39;1y&#39;&#39;近2年&#39;:&#39;2y&#39;&#39;近3年&#39;:&#39;3y&#39;&#39;近5年&#39;:&#39;5y&#39;</span><br></pre></td></tr></table></figure><h3 id="爬虫代码-1"><a href="#爬虫代码-1" class="headerlink" title="爬虫代码"></a>爬虫代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">####分析2：基金各个阶段涨跌幅</span><br><span class="line">def analysis2():</span><br><span class="line">    name &#x3D;[&#39;近1周&#39;,&#39;近1月&#39;,&#39;近3月&#39;,&#39;近6月&#39;,&#39;近1年&#39;,&#39;近3年&#39;,&#39;近5年&#39;]</span><br><span class="line">    ##五类基金</span><br><span class="line">    dict_value&#x3D;&#123;&#125;</span><br><span class="line"></span><br><span class="line">    for key in dict_type:</span><br><span class="line">        #### 获取排名第一名基金代号</span><br><span class="line">        url &#x3D; &quot;https:&#x2F;&#x2F;danjuanapp.com&#x2F;djapi&#x2F;v3&#x2F;filter&#x2F;fund?type&#x3D;&quot;+str(dict_type[key])+&quot;&amp;order_by&#x3D;1w&amp;size&#x3D;10&amp;page&#x3D;1&quot;</span><br><span class="line">        res &#x3D; requests.get(url, headers&#x3D;headers)</span><br><span class="line">        res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">        s &#x3D; json.loads(res.text)</span><br><span class="line">        ###取第一名</span><br><span class="line">        fd_code &#x3D; s[&#39;data&#39;][&#39;items&#39;][0][&#39;fd_code&#39;]</span><br><span class="line"></span><br><span class="line">        #### 获取排名第一名基金各个阶段情况</span><br><span class="line">        fu_url &#x3D; &quot;https:&#x2F;&#x2F;danjuanapp.com&#x2F;djapi&#x2F;fund&#x2F;derived&#x2F;&quot;+str(fd_code)</span><br><span class="line">        res &#x3D; requests.get(fu_url, headers&#x3D;headers)</span><br><span class="line">        res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">        s &#x3D; json.loads(res.text)</span><br><span class="line">        data &#x3D; s[&#39;data&#39;]</span><br><span class="line"></span><br><span class="line">        valuess&#x3D;[]</span><br><span class="line"></span><br><span class="line">        ####防止基金最长时间不够1年、2年、5年的情况报错，用0填充</span><br><span class="line">        ##近1周</span><br><span class="line">        try:</span><br><span class="line">            valuess.append(data[&#39;nav_grl1w&#39;])</span><br><span class="line">        except:</span><br><span class="line">            valuess.append(0)</span><br><span class="line">        ##近1月</span><br><span class="line">        try:</span><br><span class="line">            valuess.append(data[&#39;nav_grl1m&#39;])</span><br><span class="line">        except:</span><br><span class="line">            valuess.append(0)</span><br><span class="line">        ##近3月</span><br><span class="line">        try:</span><br><span class="line">            valuess.append(data[&#39;nav_grl3m&#39;])</span><br><span class="line">        except:</span><br><span class="line">            valuess.append(0)</span><br><span class="line">        ##近6月</span><br><span class="line">        try:</span><br><span class="line">            valuess.append(data[&#39;nav_grl6m&#39;])</span><br><span class="line">        except:</span><br><span class="line">            valuess.append(0)</span><br><span class="line">        ##近1年</span><br><span class="line">        try:</span><br><span class="line">            valuess.append(data[&#39;nav_grl1y&#39;])</span><br><span class="line">        except:</span><br><span class="line">            valuess.append(0)</span><br><span class="line">        ##近3年</span><br><span class="line">        try:</span><br><span class="line">            valuess.append(data[&#39;nav_grl3y&#39;])</span><br><span class="line">        except:</span><br><span class="line">            valuess.append(0)</span><br><span class="line">        ##近5年</span><br><span class="line">        try:</span><br><span class="line">            valuess.append(data[&#39;nav_grl5y&#39;])</span><br><span class="line">        except:</span><br><span class="line">            valuess.append(0)</span><br><span class="line">        ###添加到集合中</span><br><span class="line">        dict_value[key]&#x3D;valuess</span><br><span class="line">    bars(name,dict_value)</span><br></pre></td></tr></table></figure><h3 id="可视化代码"><a href="#可视化代码" class="headerlink" title="可视化代码"></a>可视化代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">###柱形图</span><br><span class="line">def bars(name,dict_values):</span><br><span class="line"></span><br><span class="line">    # 链式调用</span><br><span class="line">    c &#x3D; (</span><br><span class="line">        Bar(</span><br><span class="line">            init_opts&#x3D;opts.InitOpts(  # 初始配置项</span><br><span class="line">                theme&#x3D;ThemeType.MACARONS,</span><br><span class="line">                animation_opts&#x3D;opts.AnimationOpts(</span><br><span class="line">                    animation_delay&#x3D;1000, animation_easing&#x3D;&quot;cubicOut&quot;  # 初始动画延迟和缓动效果</span><br><span class="line">                ))</span><br><span class="line">        )</span><br><span class="line">            .add_xaxis(xaxis_data&#x3D;name)  # x轴</span><br><span class="line">            .add_yaxis(series_name&#x3D;&quot;股票型&quot;, yaxis_data&#x3D;dict_values[&#39;股票型&#39;])  # y轴</span><br><span class="line">            .add_yaxis(series_name&#x3D;&quot;混合型&quot;, yaxis_data&#x3D;dict_values[&#39;混合型&#39;])  # y轴</span><br><span class="line">            .add_yaxis(series_name&#x3D;&quot;债券型&quot;, yaxis_data&#x3D;dict_values[&#39;债券型&#39;])  # y轴</span><br><span class="line">            .add_yaxis(series_name&#x3D;&quot;指数型&quot;, yaxis_data&#x3D;dict_values[&#39;指数型&#39;])  # y轴</span><br><span class="line">            .add_yaxis(series_name&#x3D;&quot;QDII型&quot;, yaxis_data&#x3D;dict_values[&#39;QDII型&#39;])  # y轴</span><br><span class="line">            .set_global_opts(</span><br><span class="line">            title_opts&#x3D;opts.TitleOpts(title&#x3D;&#39;涨跌幅&#39;, subtitle&#x3D;&#39;李运辰绘制&#39;,  # 标题配置和调整位置</span><br><span class="line">                                      title_textstyle_opts&#x3D;opts.TextStyleOpts(</span><br><span class="line">                                          font_family&#x3D;&#39;SimHei&#39;, font_size&#x3D;25, font_weight&#x3D;&#39;bold&#39;, color&#x3D;&#39;red&#39;,</span><br><span class="line">                                      ), pos_left&#x3D;&quot;90%&quot;, pos_top&#x3D;&quot;10&quot;,</span><br><span class="line">                                      ),</span><br><span class="line">            xaxis_opts&#x3D;opts.AxisOpts(name&#x3D;&#39;阶段&#39;, axislabel_opts&#x3D;opts.LabelOpts(rotate&#x3D;45)),</span><br><span class="line">            # 设置x名称和Label rotate解决标签名字过长使用</span><br><span class="line">            yaxis_opts&#x3D;opts.AxisOpts(name&#x3D;&#39;涨跌点&#39;),</span><br><span class="line"></span><br><span class="line">        )</span><br><span class="line">            .render(&quot;基金各个阶段涨跌幅.html&quot;)</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://mmbiz.qpic.cn/sz_mmbiz_gif/mWFUNMBWzibKBY9Hbxkn45TnbCfibwo2eZ0ezEwY6tfc97DIp1R9VHTaiaW5ia0YCSsR1rqOdOENhcfFdF5mB9yWBw/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>从上面动图可以清楚这五类基金第一名基金<strong>各个阶段的涨跌幅</strong>情况。</p><p>有的基金最长时间没有达到3年或者5年，这里使用<strong>填充0</strong>处理。</p><h2 id="分析3：近30个交易日净值情况"><a href="#分析3：近30个交易日净值情况" class="headerlink" title="分析3：近30个交易日净值情况"></a>分析3：近30个交易日净值情况</h2><p>同理，上面分析中可以清楚这五类基金近一个月最高的涨跌幅排名情况，下面从排名中选取第一名基金（五类中各选取第一名）分别展示该基金<strong>近30个交易日净值情况。</strong></p><h3 id="爬虫代码-2"><a href="#爬虫代码-2" class="headerlink" title="爬虫代码"></a>爬虫代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">####分析3：近30个交易日净值情况</span><br><span class="line">def analysis3():</span><br><span class="line">    for key in dict_type:</span><br><span class="line">        #### 获取排名第一名基金代号</span><br><span class="line">        url &#x3D; &quot;https:&#x2F;&#x2F;danjuanapp.com&#x2F;djapi&#x2F;v3&#x2F;filter&#x2F;fund?type&#x3D;&quot; + str(</span><br><span class="line">            dict_type[key]) + &quot;&amp;order_by&#x3D;1w&amp;size&#x3D;10&amp;page&#x3D;1&quot;</span><br><span class="line">        res &#x3D; requests.get(url, headers&#x3D;headers)</span><br><span class="line">        res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">        s &#x3D; json.loads(res.text)</span><br><span class="line">        ###取第一名</span><br><span class="line">        fd_code &#x3D; s[&#39;data&#39;][&#39;items&#39;][0][&#39;fd_code&#39;]</span><br><span class="line"></span><br><span class="line">        #### 获取排名第一名基金近30个交易日净值情况</span><br><span class="line">        fu_url &#x3D; &quot;https:&#x2F;&#x2F;danjuanapp.com&#x2F;djapi&#x2F;fund&#x2F;nav&#x2F;history&#x2F;&quot;+str(fd_code)+&quot;?size&#x3D;30&amp;page&#x3D;1&quot;</span><br><span class="line">        res &#x3D; requests.get(fu_url, headers&#x3D;headers)</span><br><span class="line">        res.encoding &#x3D; &#39;utf-8&#39;</span><br><span class="line">        s &#x3D; json.loads(res.text)</span><br><span class="line">        data &#x3D; s[&#39;data&#39;][&#39;items&#39;]</span><br><span class="line">        name&#x3D;[]</span><br><span class="line">        value&#x3D;[]</span><br><span class="line">        for k in range(0,len(data)):</span><br><span class="line">            name.append(data[k][&#39;date&#39;])</span><br><span class="line">            value.append(data[k][&#39;nav&#39;])</span><br><span class="line"></span><br><span class="line">        silder(name, value,key)</span><br></pre></td></tr></table></figure><h3 id="可视化代码-1"><a href="#可视化代码-1" class="headerlink" title="可视化代码"></a>可视化代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">###拉伸图</span><br><span class="line">def silder(name,value,tips):</span><br><span class="line">    c &#x3D; (</span><br><span class="line">        Bar(init_opts&#x3D;opts.InitOpts(theme&#x3D;ThemeType.DARK))</span><br><span class="line">            .add_xaxis(xaxis_data&#x3D;name)</span><br><span class="line">            .add_yaxis(tips, yaxis_data&#x3D;value)</span><br><span class="line">            .set_global_opts(</span><br><span class="line">            title_opts&#x3D;opts.TitleOpts(title&#x3D;str(tips)+&quot;近30个交易日净值情况&quot;),</span><br><span class="line">            datazoom_opts&#x3D;[opts.DataZoomOpts(), opts.DataZoomOpts(type_&#x3D;&quot;inside&quot;)],</span><br><span class="line">        )</span><br><span class="line">            .render(str(tips)+&quot;近30个交易日净值情况.html&quot;)</span><br><span class="line">    )</span><br></pre></td></tr></table></figure><p>1.股票型</p><p><img src= "/image/loading.gif" data-lazy-src="https://mmbiz.qpic.cn/sz_mmbiz_gif/mWFUNMBWzibKBY9Hbxkn45TnbCfibwo2eZLN6C8cmNYYJlqzdVC7SibQGlVvedSkA2ZrgyriaHHyJfgg9nt4pCVwcQ/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><p>2.混合型</p><p><img src= "/image/loading.gif" data-lazy-src="https://mmbiz.qpic.cn/sz_mmbiz_gif/mWFUNMBWzibKBY9Hbxkn45TnbCfibwo2eZYvL3ibibJcm9KGe5f0Lefzqib2yibwia0nA1xgHuNwiazVpzYVZ9WOfXhOXw/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><p>3.债券型</p><p><img src= "/image/loading.gif" data-lazy-src="https://mmbiz.qpic.cn/sz_mmbiz_gif/mWFUNMBWzibKBY9Hbxkn45TnbCfibwo2eZ0yKzfb7gmiaDJZAjCakRQxz8TaXm5ywVtw4p2hIbunuohbDmcC4iagag/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><p>4.指数型</p><p><img src= "/image/loading.gif" data-lazy-src="https://mmbiz.qpic.cn/sz_mmbiz_gif/mWFUNMBWzibKBY9Hbxkn45TnbCfibwo2eZX5rQYpibUEuIFPicLcG77dXBrHP5aSMdEGqrHhOVUiclf98tt4jhQQB0Q/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><p>5.QDII型</p><p><img src= "/image/loading.gif" data-lazy-src="https://mmbiz.qpic.cn/sz_mmbiz_gif/mWFUNMBWzibKBY9Hbxkn45TnbCfibwo2eZdsFO6z4MFgpMpZiafkNPLjibg8kLYfYmy6geG79Q23WibfyEyWxSnMbZA/640?wx_fmt=gif&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3><p>从上面动图可以清楚这五类基金第一名基金*<strong>*近30个交易日净值情况**</strong>。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是爬取基金数据并通过pyecharts<strong>动图可视化</strong>方式展示基金的<strong>涨跌</strong>情况。</p><p>代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;Kit139&#x2F;funds</span><br></pre></td></tr></table></figure><p>围绕这<strong>三点</strong>去进行爬取数据，动图可视化展示数据：</p><ul><li>近一月涨跌幅前10名</li><li>基金各个阶段涨跌幅</li><li>近30个交易日净值情况</li></ul><p>参考：</p><ul><li><a href="https://mp.weixin.qq.com/s?src=11&timestamp=1613902103&ver=2904&signature=vu2-Zw24ViKNuLNWqk58lppojxOkWFmMENyNW2ph559o-P-JJocW43LwkHkSGFZuzN6BAkf48yayN3DKvawiKz9Tj2Fye2A3hCqMGnmvNZoGILpXIF92FAD6PTPNaK6x&new=1">绝了！Python爬取各类基金数据，并以动态可视化展示！</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;爬取蛋卷基金各类数据-动态可视化展示&quot;&gt;&lt;a href=&quot;#爬取蛋卷基金各类数据-动态可视化展示&quot; class=&quot;headerlink&quot; title=&quot;爬取蛋卷基金各类数据+动态可视化展示&quot;&gt;&lt;/a&gt;爬取蛋卷基金各类数据+动态可视化展示&lt;/h2&gt;&lt;h2 id=&quot;目</summary>
      
    
    
    
    <category term="CIT" scheme="https://zhangkh.top/categories/CIT/"/>
    
    
    <category term="爬虫" scheme="https://zhangkh.top/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="pyecharts" scheme="https://zhangkh.top/tags/pyecharts/"/>
    
  </entry>
  
  <entry>
    <title>第八章 调研报告的撰写</title>
    <link href="https://zhangkh.top/56782db4.html"/>
    <id>https://zhangkh.top/56782db4.html</id>
    <published>2021-02-16T04:05:37.000Z</published>
    <updated>2021-02-22T05:47:20.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第八章-调研报告的撰写"><a href="#第八章-调研报告的撰写" class="headerlink" title="第八章 调研报告的撰写"></a>第八章 调研报告的撰写</h1><h2 id="调研结果表述形式"><a href="#调研结果表述形式" class="headerlink" title="调研结果表述形式"></a>调研结果表述形式</h2><p>同学你好，今天我们来学习市场调研结果表述形式。市场调研结果表述形式有两种，一种是<strong>书面调研报告的表述形式</strong>，一种是<strong>口头表述的形式</strong>。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210217003240546.png" alt="image-20210217003240546"></p><p>首先我们来讲一讲书面调研报告的这个形式的表达。市场调研书面报告的结构没有统一固定的模式，应该依据特定阅读者和目的进行设计。不管市场调查的结构如何，每个调查报告都应该有一些特定的议题，即报告本身在结构安排和写作手法上必须能及时、准确和简洁地把信息传递给决策者。虽然书面调研报告没有固定的模式，但在长期的商务实践中，一般认为一份完整的调研报告有以下几个部分构成：<strong>前言、正文、附录</strong>。</p><p>那么前沿我们包括哪些呢？前言包括<strong>封面、标题页、授权性、提交信、目录表、图表、一览表和摘要等</strong>这些方面的内容。</p><ul><li>首先我们来讲一讲第一个方面，<strong>封面</strong>。封面一般只出现在正式的调研报告中排在标题页的前面，在调研报告结构中，它有时是可以省略的一项内容。在一个调研报告中，如果使用了封面，那么它将排在报告的第一页，但是这一页是不打印页码的。</li><li>第二是<strong>标题页</strong>。标题主要包括四个方面的内容，调研的题目、报告的日期、委托方和调查方。调查报告一般是通过标题把被调查单位调查内容明确而具体地表达出来。报告的题目应尽可能地贴切而又概括地表明调查项目的性质。有的调查报告还采用<strong>正副标题形式</strong>，一般正标题简洁、明确、醒目的表达报告的主题。而副标题则具体的表明调查的单位和问题。</li><li>第三是<strong>授权性</strong>。授权性是项目调查方从事项目的证明书，是项目执行部门的上司给该执行部门的信。这一内容在市场调查报告的结构中是属于可用可不用的，当提交信中包含了授权问题的时候，调研报告中可以不用授权性。如果报告的阅读对象不了解调研的授权情况，或者调查报告的阅读者需要了解授权的有关详细情况时，将授权性加入调查报告是比较好的一个选择。授权性包括授权对象的姓名和职务，也可能包括对调研项目一般性描述项目的完成日期、项目的报酬，以及调研者为完成项目所要求的有关调研项目的特定条件。</li><li>第四是<strong>提交性</strong>。提交信是调研报告撰写者以个人名义向调查报告的提供对象撰写的一封信，表示前者将报告提交给后者的意思。在比较正式的调研报告中，或者把调研报告提交给一个不是经常性的客户组织时，应当使用提交信。</li><li>第五是<strong>目录表</strong>。目录可以帮助报告的阅览者找出调研报告中各项信息的位置，因此，除非是所包含的内容非常少的报告，为了方便读者的阅读，一般的调研报告都应该编写目录，以便读者查阅特定的内容。</li><li>第六是<strong>图表一览表</strong>。在有些报告中，报告撰写者可能会借助图表和表格来表达信息。当一个报告里包含图形和表格的时候，为了帮助报告阅读者能够快速地找到这些信息，需要在目录表中包含一份图表目录。因为图和表是用数字分别标注的，因此在图表目录中也许既有图一也有表一。报告撰写者对图形和表格各自取名，并根据他们在报告中出现的顺序依次排序。一般来说，目录的篇幅不宜超过一页。</li><li>第七是<strong>摘要</strong>。摘要的长度最好不要超过两页。其主要内容应当包括以下几个方面：<ul><li>首先是对调查目的的简明扼要的说明及简要的说明调查的由来和委托调查的原因。</li><li>其次是要简单交代调查的范围，包括调查的时间、地点、对象、范围、调查要点及所要解答的问题等等。</li><li>第三是对所用方法的交代。一如资料收集的方法是用<strong>询问法、观察法还是实验法</strong>？在资料分析中是使用<strong>指数平滑化回归分析还是其他的方法</strong>？对所用方法的介绍有助使人确信调查结果的可信性。</li></ul></li><li>最后是结论和建议。</li></ul><p>那么下面我们来讲讲。这个调查报告的正文部分，正文是市场调查报告的主要部分，这一部分内容的写作直接决定调查报告质量的高低和作用的大小。正文包括<strong>引言、调研目的、调研方法、调研结果、不足之处、结论和建议</strong>。</p><ul><li>首先我们来讲一讲<strong>引言</strong>，引言部分主要是对调查项目的宏观背景的介绍，描述调研目的的商业或者环境方面的背景资料，他给报告阅读者一个基本的背景印象。在这一部分内容中，可能还会包括为什么委托开展调研的解释。</li><li>第二个部分是<strong>调研的目的</strong>。在交代调研的背景资料和为什么进行调研之后，调研人员应当指出该项调查的目的和范围，以便报告的阅读者一目了然，准确地理解调查报告所叙述的内容。</li><li>第三是<strong>调研的方法</strong>。调研方法是对调查过程中所用方法的介绍，包括所用的方法以及选用该方法的理由。完成一个调研项目要用到一定的方法。对调研方法的描述可以让调查报告的阅读者知道报告中的数据是如何收集的，以及结论是如何做出的。</li><li>第四是<strong>调研的结果</strong>。调研结果可以使用叙述形式来表述，以使得项目更为可信，但表述要实事求是，不可过分的吹嘘。为使得结果的表述更加直观有效，避免枯燥无味，可以使用表格和图形的形式。再加上一定的分析说明来表述调研的结果，但要注意的是，详细和深入的图表应该放在附录部分。</li><li>第五，我们来讲讲这个<strong>调研报告的不足之处</strong>的这个描述。对于报告中的不足之处，报告的撰写者不用刻意去隐藏或者掩盖，而是要指出报告中的不足之处，指出报告受到哪些条件的限制，必要的时候还需要将不足之处对调查报告的准确性有什么影响，以及影响程度有多大分析清楚，以提高整个营销调研工作的可信度。调研报告中的典型限制条件包括时间、预算、人员等。</li><li>第六，我们来讲一讲市场调查报告中的<strong>结论与建议</strong>。结论与建议。也是撰写调研报告的主要目的，结论的得出要建立在调研结果的基础上，建议是建立在结论基础上的。关于如何推进工作的提议，报告撰写者应该以客观的态度，根据调研所得出的结论，向决策制定者提出已被证明有效的措施以及解决某一具体问题的方案和建议。</li></ul><p>下面我们来讲一讲这个市场调研报告中的这个附录，附录是对报告正文的补充或更详细的说明，通常所包含的内容有<strong>数据汇总表、原始资料、背景资料、调查提纲、空白调查问卷和观察记录表、二手资料来源目录、对复杂的抽样技术的说明等等</strong>。</p><p>下面我们来讲一讲<strong>口头表述形式</strong>。除了书面的调研报告以外，许多客户希望能听到调研报告的口头报告，口头报告也是提交调研结果的一种重要形式，口头汇报主要通过语言将调研结果传递给听众，如何表达好是非常关键的。在汇报过程中，要尽量避免按照准备好的发言稿照本宣科的宣读，而是应该使用<strong>口语化</strong>的、<strong>简单的词句</strong>来叙述调研的内容。汇报要围绕所要表达的问题展开，要向听众交代清楚所要汇报的几个问题。在讲解过程中，要不断提醒听众汇报的进度，当前讲到了哪个问题，对于报告中的<strong>重点内容，要放慢讲话的速度</strong>，通过语气的变化来突出重点，引起听众的注意，必要的时候可以对重点内容进行重复性的讲述。</p><h2 id="调查报告的写作"><a href="#调查报告的写作" class="headerlink" title="调查报告的写作"></a>调查报告的写作</h2><p>同学你好，今天我们来学习市场调研报告的撰写。调研报告内容的具体写作可以参照以下三个步骤来完成。</p><p>第一是<strong>报告的构思</strong>。报告的构思是在所收集的调研资料的基础上，通过思考与分析，确立调研报告的选题，在此基础上结合调研的结果得出的观点，并对报告的文体结构、章节、段落的内容做出一个大概的写作思考框架，这是一个需要反思思考的过程。构思过程中，首先要对调研的背景资料和调研过程中所获得的实际资料进行分析，你对调研项目有一个一般性的认识，在对调研项目有一个大概的了解之后，确立调研报告的选题。选题是一个分析、发现、选择、确定报告论题的过程。<strong>论题</strong>是对报告的目的和分析对象的概括，它一般表现为调研报告的标题、观点是调研报告提供者在资料基础上得出的对分析和对对象的看法与评价。在确立了报告的选题之后，报告的撰写者可以考虑提出自己的观点，观点既有主观性又有客观性，是主观性和客观性的统一。客观性指的是观点的得出需要界定在调研结构的基础上，要以调研所得到的资料为基础，不能提出没有依据的观点。观点的主观性指的是观点是撰写报告者在分析资料基础上对分析对象的一种认识。面对同样的调研所获得的资料，不同的调研者可能会得到不同的观点。在完成上述的工作之后，对调研报告的写作应该有了一个大概的方向与范围。在此基础上，构思的最后工作是安排好文章的层次结构，即安排好文章正文的大概结构与内容，安排好文章的段落、章节，这一步骤的工作，也可以参考报告结构中的正文部分的内容。</p><p>第二是讲的是<strong>材料的这个取舍</strong>。在撰写报告之前的第一手、第二手。资料的收集过程中，因为还没有形成任何固定的观点，因此收集的资料会比较广泛，数据也会比较大，这些资料并不是都要写入调研报告中的，需要对这些材料进行取舍，对材料的取舍可以围绕主题与观点来进行，只有围绕报告的主题与观点来进行材料的取舍，才可能使得报告的主题更加突出，报告的观点更具有可靠的依据。进行材料的取舍时，一方面要与主题有关的材料提出观点，所依据的调研结果应该保留。另一方面，与主题无关的或者关系不大的材料要<strong>忍痛割爱</strong>。这些与主题无关的材料可能也是在调研过程中费了许多人力和物力获取的资料，为了避免材料的堆砌，冲淡主题和降蝶调研报告的效果，对这些材料要勇于舍弃。</p><p>下面我们来讲一讲<strong>报告的撰写</strong>。在完成报告框架和材料取舍之后，就可以进行报告的写作了。对于比较大型的调研，因为调研所涉及的内容较多，调研报告可能会比较长，报告的写作可能需要由多人合作来完成，他们先完成报告的初稿，然后征集各方的意见进行修改，形成最终的报告。在报告的写作过程中，有以下一些<strong>事项需要注意</strong>：</p><ul><li>一、要考<strong>虑读者的观点阅历</strong>，尽量使报告适合于读者阅读。不同的阅读者所关注的内容会有所不同，决策者关注的可能是报告中所提出了结论，结论提出的依据和报告中提出了建议的信息。如果报告的阅读者是专家评审者，他们可能会关注报告中的技术问题，关注报告的结论是通过什么艺术方法得到的。只有充分考虑到报告读者的特点，才能使报告受到阅读者的充分的关注。</li><li>第二、报<strong>告要简明额额要切勿拖泥带水</strong>，务必使报告所包含的全部内容都与报告的主题有关，剔除一切多余的材料，报告的阅读者可能是企业的决策者，他们的时间一般都比较宝贵，围绕主题将报告写得简明扼要，不但可以节省阅读者的时间，而且可以使得报告的主题更加的突出。</li><li>第三，<strong>认真的核对报告中所使用的全部数据和统计资料</strong>，务必使资料准确无误。数据与统计资料一般是作为调研结果和得出的结论的依据而写入报告的，如果数据发生错误，不但会使得调研报告的结果不准确，而且会影响到调研结论的可靠性，并进而影响到报告中所提出的建议的有效性。报告中对于所引用的数据与统计资料，需要在附录和文中注明出处，以方便核对。</li><li>第四，按照<strong>每一个问题的重要性来决定其篇幅的长短和强调的程度</strong>。一个调研报告中可能有几个不同的小问题，对于重要的问题应该进行重点讨论，并把它尽量安排在比较醒目的位置，以使其得到应有的重视。对于一些重要程度比较低的问题。则不应该占用过多的篇幅，以免影响主要问题的表达。第五，充分地利用图和表来说明和显示资料。图和表可以比较直观地说明问题、传递信息。在报告的写作中，可以充分利用图形与表格来进行表达。</li></ul><p>同学，我们今天的课就上到这里，谢谢。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第八章-调研报告的撰写&quot;&gt;&lt;a href=&quot;#第八章-调研报告的撰写&quot; class=&quot;headerlink&quot; title=&quot;第八章 调研报告的撰写&quot;&gt;&lt;/a&gt;第八章 调研报告的撰写&lt;/h1&gt;&lt;h2 id=&quot;调研结果表述形式&quot;&gt;&lt;a href=&quot;#调研结果表述形式&quot;</summary>
      
    
    
    
    <category term="市场调研" scheme="https://zhangkh.top/categories/%E5%B8%82%E5%9C%BA%E8%B0%83%E7%A0%94/"/>
    
    
    <category term="市场调研" scheme="https://zhangkh.top/tags/%E5%B8%82%E5%9C%BA%E8%B0%83%E7%A0%94/"/>
    
    <category term="MOOC" scheme="https://zhangkh.top/tags/MOOC/"/>
    
  </entry>
  
  <entry>
    <title>第七讲 数据分析方法</title>
    <link href="https://zhangkh.top/91005645.html"/>
    <id>https://zhangkh.top/91005645.html</id>
    <published>2021-02-16T04:05:37.000Z</published>
    <updated>2021-02-22T05:47:20.267Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第七讲-数据分析方法"><a href="#第七讲-数据分析方法" class="headerlink" title="第七讲 数据分析方法"></a>第七讲 数据分析方法</h1><h2 id="SPSS数据文件的建立"><a href="#SPSS数据文件的建立" class="headerlink" title="SPSS数据文件的建立"></a>SPSS数据文件的建立</h2><p>各位同学大家好，欢迎来到市场调研的课堂，在这一讲，我们将学习SPSS数据文件的建立。本讲主要包含以下两个内容，首先我们会简单介绍一下SPSS软件，其次，我们将学习并掌握在SPSS软件中建立数据文件的方法。</p><p>SPSS软件的全称是社会科学统计软件的缩写，是一款历史悠久的统计软件包，可以帮助我们快速查看数据并且轻松做好数据分析。我们可以运用SPSS软件轻松设计图表，分析大量数据，深入探索假设检验，厘清变量之间的关系，解释并进行预测，建立聚类分析使市场调研的分析更加容易且更加具有效率。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216224516783.png" alt="image-20210216224516783"></p><p>SPSS软件在功能上分为基础功能和进阶功能两类，其中基础功能是我们在社会调查中经常会使用的一些工具，如<strong>描述性统计分析、均值比较分析</strong>等等</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216225328997.png" alt="image-20210216225328997"></p><p>而进阶工具呢则包括一些较为高级的统计分析方法如回归分析等等。在这个表格中，我们列举了一些SPSS软件的基础功能和部分集结功能，方便各位同学在课后进行学习和理解。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216224838102.png" alt="image-20210216224838102"></p><p>下面回到本讲的关键内容，如何在SPSS软件中建立数据文件。如何建立一个SPSS的数据分析的文件是市场调研分析的第一步，数据模块的建立程度也决定了后续分析的质量。在这里主要介绍SPSS软件的两种数据建立方法。下图是SPSS软件数据文件的基本步骤。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216225444285.png" alt="image-20210216225444285"></p><p>一般而言，我们在SPSS软件中建立数据文件，首先需要在变量视图中对变量的名称、标签以及对应的取值范围进行定义。只有在对这些基础的信息进行定义后，我们才可以在数据视图里进行数据的输入或导入，并最终存储为SPSS可以编辑的SAV格式的文档。下面我们用一个例题来进行具体的演示，我们以大学生为例，抽样调查十二个大学生的编号、性别、学习成绩以及每月花费、家庭收入区域等等。信息详细资料如下表。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216225545756.png" alt="image-20210216225545756"></p><p>我们首先根据流程在变量视图中对此涉及的变量及取值进行定义，以income家庭收入这一项为例，我们在名称这里为了简化输入，将名称定为income，而是标签定义为家庭收入。在取值范围处，我们点选取值范围外带有三个句号的那个按钮，会弹出一个定义变量的对话框。根据提议，我们在职这一项填写一，而在标签这一项中填写低收入，然后点击添加按钮，这样我们对这个一这个值就完成了一个定义。当我们对家庭收入进行后续分析时，若样本中出现了一则会自动被确认为低收入群体。同样，我们在职这一项中填写二，在标签这一项上填写高收入，然后点击添加，同样完成了对于二这个值的定义。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216225728556.png" alt="image-20210216225728556"></p><p>好了，各位同学可以自己动手对剩下的几个变量进行定义了，构建好变量视图后便可以在数据视图上进行数据的输入或录入。第一种办法就是在SPSS软件的数据视图中直接输入数字，系统会自动识别输入的数字所代表的统计含义。第二种方法就是从其他格式的文件，如excel的文件中直接复制粘贴，将其他文档中的数据直接粘贴到新的SAV文档中，也可以达到数据录入的目的。在数据录入完毕后，记得将文件进行存储，存储过后文件便可以进行后续的统计分析了。</p><h2 id="描述性统计分析方法"><a href="#描述性统计分析方法" class="headerlink" title="描述性统计分析方法"></a>描述性统计分析方法</h2><p>各位同学大家好，欢迎大家进入市场调研的课堂，在这一讲，我们将学习描述性统计分析方法。描述性统计是将收集到的数据，使用各种统计图表及统计量进行计算，以清楚地呈现统计结果的过程，运用简单的描述统计分析，可以求得各<strong>样本、各项变动数据的最小值、最大值。平均值、标准误差、频率分布、相对频率分布、累计百分比</strong>等项目。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216230008575.png" alt="image-20210216230008575"></p><p>例如，我们将问卷中李克特无尺度量表和回答经过编码量化后，计算出频率分布、平均值、百分比以及标准误差、相对频数分布、累积频数分布、百分比分布等相关数据。利用平均值了解各项问项概念之间相互程度的看法，再利用标准误差来测度数据间相互的差异性标准误差越大，显示数据的差异性越大，标准误差越小，则表示该指标重要性的看法越一致。主要用于各指标间的差异性以及了解单一绩效指标项在重要性以及一致性的差异。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216230049095.png" alt="image-20210216230049095"></p><p>我们将用一个案例的形式来讲解在SPSS软件中进行描述性统计分析的具体方法。这是一个关于企业使用ERP问题的研究量表，在问卷收集过程中，共收集九百五十七份，回收三百七十二分，扣除填答不全与胡乱填答的无效问卷二十二分，有效问卷三百五十份，有效回收率为百分之三十六点五七。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216230717034.png" alt="image-20210216230717034"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216230835573.png" alt="image-20210216230835573"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216231002590.png" alt="image-20210216231002590"></p><p>在SPSS软件中，我们选择使用分析板块中的描述统计命令，在描述统计这一个对话框中选择频率这一个选项，在弹出的对话中，将ERP员工人数、资本额、营业额、项目预算、产业类别与以调查产业类别选项置变量栏，并点选右上角的统计选项，会弹出一个新的对话框，以方便我们进行描述性统计分析。在新弹出的对话框中，根据描述性统计分析的要求，勾选标准偏差、方差、范围、最小值、最大值及平均值的标准误差后点击继续，回到频率对话框中，点击确定。这样SPSS软件就会自动对相关变量进行描述性统计分析。以下就是之后的结果，我们进一步进行整理，最终得到ERP员工人数、资本额、营业额、项目预算、产业类别与已调查产业类别等相关研究项目，我们将相关的数据进行整理，并汇总成表格。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216231121293.png" alt="image-20210216231121293"></p><p>首先来看资本额，企业年资本额如下表所示，以两亿至十亿占最多，共一百五十二家，占全部样本的百分之四十三点四。其次是十亿至五十亿，占全部样本的百分之二十五点一，两亿以上的企业共占七十九点七。在公司员工总人数方面，如下表所示，以一百至四百九十五元为最多，共有一百七十九家，占全部样本总量的百分之五十一点一。其次是一百人以下，占样本的百分之十六点六，五百至九百人占样本的百分之十五点一，一千至一千九百九十九人为最少，共二十二家，占全部样本的百分之六点三。而对于其他几项的数据整理，给同学们自己进行尝试并练习。</p><h2 id="差异分析方法"><a href="#差异分析方法" class="headerlink" title="差异分析方法"></a>差异分析方法</h2><p>各位同学大家好，欢迎来到市场调研的课堂，今天我们来共同学习差异分析方法。本讲主要由三个部分来组成，首先是单样本T检验，其次是独立样本T检验，最后是配对样本T检验。</p><p>首先我们来介绍一下<strong>单样本T检验</strong>，这种方法适用于用单变量的平均值做检验，也就是说检验样本中某一个变量的平均值是否与总体的平均值有显著的不同。条件是总体的平均值必须为已知。在进行具体的单样本T检验之前，我们必须构建研究假设。其中虚无假设是意味着样本数据与总体均值之间没有任何差别，而对立假设则是证明样本数据与总体均值之间具有显著的差别。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216231316645.png" alt="image-20210216231316645"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216231501077.png" alt="image-20210216231501077"></p><p>其理论模型如图中所示，我们用SPSS软件来进行具体的分析，请各位同学打开范例文档Costa.sav，打开SPSS文档后，选择分析-比较平均值-单样本T检验这个选项，我们来分析每月花费cost的这个变量和总体样本的每月花费均值之间的差异。首先将从cost加入到变量栏中，然后将检验值设为六千，点击选项，在选项中将置信区间设置为百分之九十五，点击继续，选择完毕后选择确定键。在结果中我们可以看到，抽样样本中同学们的平均月收入均值为八千二百五十元。在T统计量上，检验统计量T等于二点六五九，显著性P值为零点零二二，小于零点零五，拒绝虚无法假设。在阿尔法等于零点零五的水平下，大学生的平均每月花费为八千二百五十元，和家长给的平均生活费六千元有显著的差异。因此可以解释为许多大学生为了生活费而不得不外出打工。以上就是单样本t检验的方法。</p><p>下面我们来介绍第二个内容，<strong>独立样本t检验</strong>。独立样本t检验是被试随机分派到不同的组别，各组别的被试没有任何关系，也被称为完全随机化的设计。t检验是用来检验两个独立样本的平均值差异是否达到显著的水平，也就是说这两个独立样本可以透过分组来达成。计算t检验时会需要两个变量会将自变量X分为两个不同的组别，检验两个独立样本的平均值是否有差异，也就是意味着两者之间是否达到一个显著的差异水平。和单样本体检验一样，我们在具体的计算之前，先提出具体的研究假设。虚无假设是认为两组之间没有差异，而对立假设呢则认为两者之间存在显著的差异。我们同样用一个例子来讲解独立样本T检验如何来计算。请各位同学打开cos.sav文件，点击分析比较平均值，独立样本T检验，选择选取Score与Cost至检验变量字段。同时把性别Sex之至分组变量，我们来检验不同性别的被试在分数活跃、生活支出方面是否具有显著的差异。在分组变量这里，我们要设置组别的参数，并选定一组，在弹出的对话框中对分组变量进行赋值，选择完毕后即点击继续。在结果中，我们可以看到你性别一男性、二女性作为分组，显示在学习成绩检验统计量P等于负的零点四三四，显著性P值等于零点六七三大于零点零五，那么这意味着接受虚无假设在阿尔法等于零点零五的水平下，大学生男女性别的分数平均值是一样的，没有显著的差异。而在每月花费上，检验统计量T等于负的二点四四五，显著性，P值为零点零三五，小于零点零五就意味着拒绝虚无假设。在阿尔法等于零点零五的水平下，大学生男女性别的每月花费平均值是不一样的，有显著的差异。女生平均每月花费九千九百六十六元，比男生平均每月花费六千五百三十三元较高。</p><p>最后一个内容是<strong>配对样本T检验</strong>，配对样本T检验是使用于相依样本最常用。在相应样本的重复测量设计上，也就是意味着同一个样本前后测量两次。例如消费者对于使用笔记本电脑前和使用笔记本电脑后态度是否有差异。同样，在正式计算之前，我们给出研究的假设，虚无假设是实验前后没有显著差异，而对立假设则是实验前后具有显著的差异。接下来是具体的计算公式，我们仍然用一个例子来进行说明。请大家打开范例文档pair.sav，点击分析-比较平均值-配对样本T检验。选取before和After为成对变量。点击选项，置信区间百分比设置为百分之九十五，点击继续，选择完毕后点击确定，显示before使用前的印象分数和after使用后印象分数的相关系数为零点九九七，p等于零点零零四，达到一个显著的水平。而从表中我们可以看到，t等于六点三九六，显著性p值为零点零零四，达到显著性水平，拒绝虚无假设。显示大学生对于某种比品牌笔记本电脑使用前和使用后的印象分数不同。因此我们可以解释，大学生对于某种品牌笔记本电脑使用前和使用后的印象有显著的差异，也就是使用后的印象比使用前的印象差。好了，差异分析的方法就介绍到这里，希望课堂上的讲解的内容，各位同学在生活中应该多训练。最后感谢各位同学的收看，谢谢大家。</p><h2 id="相关性分析方法"><a href="#相关性分析方法" class="headerlink" title="相关性分析方法"></a>相关性分析方法</h2><p>各位同学大家好，欢迎大家进入市场调研的课堂，今天我们来共同学习相关性分析方法。<strong>相关分析常常与因果关系混淆，相关分析不是因果关系，没有谁影响谁的问题，换言之，没有因影响果的问题</strong>。若是有需要<strong>分析因果关系，请使用回归分析或结构方程模型</strong>。回归分析的问题我们会在下一讲进行讲解。</p><p>相关分析探讨的是两个变量之间的关联程度，普遍运用在各个学科，如社会科学中的市场营销、人力资源、工商管理等学科。例如探讨销售量与广告金额的关联关系，信息质量与认知价值的关联程度等等。相关分析使用的是两个变量，例如A和B，这两个变量的测量尺度可以是类别、区间、比率或顺序变量，简单地进行区分为类别与数量两种变量模式。下面这张表格列举了进行相关分析、进行变量的适用条件，在一、二三种情形下，我们可以使用列联表来进行表示。可以使用卡方检验。相关分析适用于第四种情形，两个变量，例如A和B，都是区间比例或顺序的因果计算变量。在统计上使用的是两个变量关联程度的统计量，例如常用的皮尔森相关分析的<strong>皮尔森相关系数</strong>就是用来表示两个变量之间的关联程度。</p><p>相关系数是本章最重要的判断依据，有大小和方向两种特性。相关系数大小表示两个变量之间相关程度的强弱，相关系数的<strong>绝对值</strong>越大代表相关程度越强，相反，相关系数的绝对值越小，代表相关程度越弱。若是相关系数，值为零则代表邻关系，也就意味着两者之间没有任何相关。相关系数的方向表示两个变量之间是正相关还是负相关，相关系数是正值，代表两个变量中一个变量增加时，另一个变量也会增加。相关系数是负值，是它代表两个变量中的一个变量增加时，另一个变量就会减少，反之亦然。请大家来看下图，两张图片上就介绍了正相关和负相关的具体含义。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216233149304.png" alt="image-20210216233149304"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216233211954.png" alt="image-20210216233211954"></p><p>在计算公式上，根据数据来源分为两类计算公式，首先是总体样本下皮尔森相关的主要计算公式，如下图所示，皮尔森相关系数是适用于两个变量都是连续变量，其中ρXY代表着X和Y的变量的相关系数，σXY代表着XY的共变量，σX代表着X的标准误差，σY代表着Y的标准误差，小μX代表着X的平均值，小μY代表着Y的平均值。而在抽样样本的情况下，皮尔森相关系数的计算公式如下图所示，其中rXY代表着XY变量的相关系数，SXY代表着样本的共变量X，SX代表着X样本的标准误差，SY代表着Y的样本的标准误差，X的均值代表着X样本的平均值，Y的平均值则代表着Y的样本的平均值。同时我们用两张图来表示变量A和变量B之间的相关信息。图左，A变量增高代表了B变量的升也升高，而图右则相反，沃尔图左是正相关，而图右是负相关。我们在SPSS软件中用一个具体的例子来传授具体的操作方法，请大家打开相关.sav文件夹，在SPSS软件中选择分析-相关以及双变量，选择信任与风险指变量字段，勾选相关系数中的皮尔森，选择完毕即点击确定。在结果视图中，我们可以看到，信任与风险之间的显著性为零点零零一，小于零点零五，具有显著相关，其相关系数为零点二七八，属于低度相关。好了，相关分析方法就介绍到这里</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216234257284.png" alt="image-20210216234257284"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216234326151.png" alt="image-20210216234326151"></p><h2 id="回归分析方法"><a href="#回归分析方法" class="headerlink" title="回归分析方法"></a>回归分析方法</h2><p>各位同学大家好，欢迎大家进入市场调研的课堂，在本讲中，我们将共同学习回归分析方法。许多人在使用上混淆了回归分析和相关的分析，<strong>相关分析可以用来描述两个连续变量的线性关系，若要进一步确认两个变量之间的因果关系，则可以使用回归分析</strong>。回归分析可以分为一元回归和复回归，也就是所谓的多元回归。一元回归是用来探讨一个因变量和一个自变量的关系，多元回归呢则是用来探讨一个因变量和多个自变量之间的关系。下图是一元回归和多元回归在数学上的表达公式。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210216234534450.png" alt="image-20210216234534450"></p><p>同时，回归分析的使用需要满足以下几个基本的假设条件。</p><ul><li>首先是<strong>线性关系</strong>，因变量和自变量之间的关系必须是线性，也就是说因变量与自变量存在着相互固定比例的关系。若是发现因变量与自变量呈现非线性关系时，可以透过转换成线性关系再进行回归分析。</li><li>第二是<strong>正态性</strong>。若是数据呈现正态分布，则残差项也会呈现同样的分布。当样本数足够大时，检验的方式是使用简单的直方图，若是样本数较小时，检查的方式则使用正态机预图。回归模型的显著性检验一般都使用f检验。f检验将所有自变量计算进来，看因变量y和所有自变量fn是否有统计的显著性。f检验的计算公式如下图所示，同时采用拟合系数r方来解释线性回归模型的适配度。r方等于零时，代表因变量y和自变量x没有线性关系。r方不等于零时，代表因变量y和自变量x所解释的比率。R方是回归可解释的变异量，来自于因变量Y的总变异量，等于回归测量的变量+误差变异量。而在回归模型中，R方会用来说明整个模型的解释力，但是R方会受到样本大小的影响而呈现高估现象，样本越小越容易出现问题。因此大多数学者都采用调整后的R方，也就是讲误差变异量和因变量的总变异量都处于自由度。</li></ul><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210217000153292.png" alt="image-20210217000153292"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210217000230909.png" alt="image-20210217000230909"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210217000359820.png" alt="image-20210217000359820"></p><p>在下面我将用一个例题来讲解如何用SPSS软件进行回归分析。首先请看这样一个调查问卷，他讲解的主要内容是讨论高管、主管支持对于使用者满意度的影响，研究问卷共发出九百五十七份，回收有效问卷三百五十份，有效回收率为百分之三十六点五七。开启范例文件回归.sav，点击分析-回归-线性，选择CO至因变量栏目，选择MI至自变量栏目，选择方法为输入，其中CO和MI分别代表着CO一到CEO三以及MI一到MI三之间的样本均值，是经过计算变量得到，点击统计选项。勾选估计误差条形图的表征、协方差矩阵、模型拟合度、R方变化描述性、部分相关与偏相关性以及共线性诊断，点选选项，点选使用F的概率，点击继续，最后便确定。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210217000438234.png" alt="image-20210217000438234"></p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210217000457178.png" alt="image-20210217000457178"></p><p>得到结果后，我们首先来看模型摘要，有多元相关系数R等于零点三一四，R平方等于零点零九八，调整后的R平方等于零点零九六，标准估算的错误为二点二四一，阿方变化等于零点零九八，IF更改等于三十七点九四八，分子自由度等于一，分母自由度等于三百四十八，显著性F更改为零点零零零。再看系数表，回归分析的各系数值，常数项等于八点六零二，非标准化系数高阶主管支持MI等于零点二七零，标准系数Beta值等于零点三一四，P值等于六点一六零，P值等于零点零零零，小于零点零五，即达到显著水平。在模型上，我们可以进行这样的标注，来证明CO与MI之间的关系。以上就完成了我们的一元回归分析。</p><p>那么多元回归分析中，这时我们的自变量有多个，因变量只有一个，如何来操作呢？其实非常简单，类似于一元回归模型，我们在自变量处加入多个自变量，从而形成一个因变量、多个自变量的研究还是刚才那个范例，我们再次点击检索最近使用的对话框，线性回归、选取US至因变量字段，选取SAV、GQ、SQ至自变量字段，点击确定，得到一个多元回归的对话框。在结果处，我们从模型摘要和系统表中整理团队合作和服务质量的解释变量为零点四八一，显著性P等于零点零零零，而路径系数SQ到QUS等于零点二三五，证明显著。IQ至US等于零点二八二也证明显著，SV至US等于零点三三七，同样证明显著。我们整理成图示如下：以上这些内容就完成了回归分析方法的介绍。最后本次课到此结束，感谢各位同学的积极参与，谢谢大家。</p><p><img src= "/image/loading.gif" data-lazy-src="https://gitee.com/cit_k/pictures/raw/master/picture/image-20210217000108734.png" alt="image-20210217000108734"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第七讲-数据分析方法&quot;&gt;&lt;a href=&quot;#第七讲-数据分析方法&quot; class=&quot;headerlink&quot; title=&quot;第七讲 数据分析方法&quot;&gt;&lt;/a&gt;第七讲 数据分析方法&lt;/h1&gt;&lt;h2 id=&quot;SPSS数据文件的建立&quot;&gt;&lt;a href=&quot;#SPSS数据文件的建</summary>
      
    
    
    
    <category term="市场调研" scheme="https://zhangkh.top/categories/%E5%B8%82%E5%9C%BA%E8%B0%83%E7%A0%94/"/>
    
    
    <category term="市场调研" scheme="https://zhangkh.top/tags/%E5%B8%82%E5%9C%BA%E8%B0%83%E7%A0%94/"/>
    
    <category term="MOOC" scheme="https://zhangkh.top/tags/MOOC/"/>
    
  </entry>
  
</feed>
